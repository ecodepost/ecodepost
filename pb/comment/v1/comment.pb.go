// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: comment/v1/comment.proto

package commentv1

import (
	v1 "ecodepost/pb/common/v1"
	_ "ecodepost/pb/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 评论和回复时候使用
type CreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户Uid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 评论对象id 目的提供给其他评论使用
	BizGuid string `protobuf:"bytes,3,opt,name=bizGuid,proto3" json:"bizGuid,omitempty"`
	// 业务类型
	BizType v1.CMN_BIZ `protobuf:"varint,4,opt,name=bizType,proto3,enum=common.v1.CMN_BIZ" json:"bizType,omitempty"`
	// actionGuid
	ActionGuid string `protobuf:"bytes,5,opt,name=actionGuid,proto3" json:"actionGuid,omitempty"`
	// 文章行为
	ActionType v1.FILE_ACT `protobuf:"varint,6,opt,name=actionType,proto3,enum=common.v1.FILE_ACT" json:"actionType,omitempty"`
	// 评论id,当为留言时候不填，回复时需要填写
	CommentGuid string `protobuf:"bytes,7,opt,name=commentGuid,proto3" json:"commentGuid,omitempty"`
	// 内容
	Content string `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	// 创建时间，如果为0，那么使用当前时间，如果不为0，使用该时间，用于导入其他应用来的数据
	Ctime int64 `protobuf:"varint,9,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 更新时间，如果为0，那么使用当前时间，如果不为0，使用该时间，用于导入其他应用来的数据
	Utime int64 `protobuf:"varint,10,opt,name=utime,proto3" json:"utime,omitempty"`
	// 用户ip
	Ip string `protobuf:"bytes,11,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *CreateReq) Reset() {
	*x = CreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comment_v1_comment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReq) ProtoMessage() {}

func (x *CreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReq.ProtoReflect.Descriptor instead.
func (*CreateReq) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{0}
}

func (x *CreateReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CreateReq) GetBizGuid() string {
	if x != nil {
		return x.BizGuid
	}
	return ""
}

func (x *CreateReq) GetBizType() v1.CMN_BIZ {
	if x != nil {
		return x.BizType
	}
	return v1.CMN_BIZ_INVALID
}

func (x *CreateReq) GetActionGuid() string {
	if x != nil {
		return x.ActionGuid
	}
	return ""
}

func (x *CreateReq) GetActionType() v1.FILE_ACT {
	if x != nil {
		return x.ActionType
	}
	return v1.FILE_ACT_INVALID
}

func (x *CreateReq) GetCommentGuid() string {
	if x != nil {
		return x.CommentGuid
	}
	return ""
}

func (x *CreateReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateReq) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *CreateReq) GetUtime() int64 {
	if x != nil {
		return x.Utime
	}
	return 0
}

func (x *CreateReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type CreateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 评论的guid
	CommentGuid string `protobuf:"bytes,1,opt,name=commentGuid,proto3" json:"commentGuid,omitempty"`
}

func (x *CreateRes) Reset() {
	*x = CreateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comment_v1_comment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRes) ProtoMessage() {}

func (x *CreateRes) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRes.ProtoReflect.Descriptor instead.
func (*CreateRes) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRes) GetCommentGuid() string {
	if x != nil {
		return x.CommentGuid
	}
	return ""
}

// 获取评论内容
type ListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 业务Guid
	BizGuid string `protobuf:"bytes,1,opt,name=bizGuid,proto3" json:"bizGuid,omitempty"`
	// 业务类型
	BizType v1.CMN_BIZ `protobuf:"varint,2,opt,name=bizType,proto3,enum=common.v1.CMN_BIZ" json:"bizType,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListReq) Reset() {
	*x = ListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comment_v1_comment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReq) ProtoMessage() {}

func (x *ListReq) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReq.ProtoReflect.Descriptor instead.
func (*ListReq) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{2}
}

func (x *ListReq) GetBizGuid() string {
	if x != nil {
		return x.BizGuid
	}
	return ""
}

func (x *ListReq) GetBizType() v1.CMN_BIZ {
	if x != nil {
		return x.BizType
	}
	return v1.CMN_BIZ_INVALID
}

func (x *ListReq) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 评论列表
	List []*CommentDetail `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 这里面total，是一级评论总数
	Pagination *v1.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 所有评论总数
	CntComment int32 `protobuf:"varint,3,opt,name=cntComment,proto3" json:"cntComment,omitempty"`
}

func (x *ListRes) Reset() {
	*x = ListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comment_v1_comment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRes) ProtoMessage() {}

func (x *ListRes) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRes.ProtoReflect.Descriptor instead.
func (*ListRes) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{3}
}

func (x *ListRes) GetList() []*CommentDetail {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListRes) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListRes) GetCntComment() int32 {
	if x != nil {
		return x.CntComment
	}
	return 0
}

type ChildListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 拉去展开评论，为0为获取评论列表
	CommentGuid string `protobuf:"bytes,1,opt,name=commentGuid,proto3" json:"commentGuid,omitempty"`
	// 业务Guid
	BizGuid string `protobuf:"bytes,2,opt,name=bizGuid,proto3" json:"bizGuid,omitempty"`
	// 业务类型
	BizType v1.CMN_BIZ `protobuf:"varint,3,opt,name=bizType,proto3,enum=common.v1.CMN_BIZ" json:"bizType,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ChildListReq) Reset() {
	*x = ChildListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comment_v1_comment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildListReq) ProtoMessage() {}

func (x *ChildListReq) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildListReq.ProtoReflect.Descriptor instead.
func (*ChildListReq) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{4}
}

func (x *ChildListReq) GetCommentGuid() string {
	if x != nil {
		return x.CommentGuid
	}
	return ""
}

func (x *ChildListReq) GetBizGuid() string {
	if x != nil {
		return x.BizGuid
	}
	return ""
}

func (x *ChildListReq) GetBizType() v1.CMN_BIZ {
	if x != nil {
		return x.BizType
	}
	return v1.CMN_BIZ_INVALID
}

func (x *ChildListReq) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ChildListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 评论列表
	List []*CommentDetail `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 这里面total，是一级评论总数
	Pagination *v1.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 所有评论总数
	CntComment int32 `protobuf:"varint,3,opt,name=cntComment,proto3" json:"cntComment,omitempty"`
}

func (x *ChildListRes) Reset() {
	*x = ChildListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comment_v1_comment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildListRes) ProtoMessage() {}

func (x *ChildListRes) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildListRes.ProtoReflect.Descriptor instead.
func (*ChildListRes) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{5}
}

func (x *ChildListRes) GetList() []*CommentDetail {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ChildListRes) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ChildListRes) GetCntComment() int32 {
	if x != nil {
		return x.CntComment
	}
	return 0
}

// 删除评论
type DeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户Uid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 评论Guid
	CommentGuid string `protobuf:"bytes,3,opt,name=commentGuid,proto3" json:"commentGuid,omitempty"`
	// 业务Guid
	BizGuid string `protobuf:"bytes,4,opt,name=bizGuid,proto3" json:"bizGuid,omitempty"`
	// 业务类型
	BizType v1.CMN_BIZ `protobuf:"varint,5,opt,name=bizType,proto3,enum=common.v1.CMN_BIZ" json:"bizType,omitempty"`
	// 分页
	DeleteType v1.FILE_CMET_DEL `protobuf:"varint,6,opt,name=deleteType,proto3,enum=common.v1.FILE_CMET_DEL" json:"deleteType,omitempty"`
}

func (x *DeleteReq) Reset() {
	*x = DeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comment_v1_comment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq) ProtoMessage() {}

func (x *DeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq.ProtoReflect.Descriptor instead.
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DeleteReq) GetCommentGuid() string {
	if x != nil {
		return x.CommentGuid
	}
	return ""
}

func (x *DeleteReq) GetBizGuid() string {
	if x != nil {
		return x.BizGuid
	}
	return ""
}

func (x *DeleteReq) GetBizType() v1.CMN_BIZ {
	if x != nil {
		return x.BizType
	}
	return v1.CMN_BIZ_INVALID
}

func (x *DeleteReq) GetDeleteType() v1.FILE_CMET_DEL {
	if x != nil {
		return x.DeleteType
	}
	return v1.FILE_CMET_DEL_INVALID
}

type DeleteRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRes) Reset() {
	*x = DeleteRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comment_v1_comment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRes) ProtoMessage() {}

func (x *DeleteRes) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRes.ProtoReflect.Descriptor instead.
func (*DeleteRes) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{7}
}

// 获取评论信息
type ListByUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 业务Guid
	BizGuid int64 `protobuf:"varint,1,opt,name=bizGuid,proto3" json:"bizGuid,omitempty"`
	// 业务类型
	BizType v1.CMN_BIZ `protobuf:"varint,2,opt,name=bizType,proto3,enum=common.v1.CMN_BIZ" json:"bizType,omitempty"`
	// 用户Uid
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListByUserReq) Reset() {
	*x = ListByUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comment_v1_comment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListByUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListByUserReq) ProtoMessage() {}

func (x *ListByUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListByUserReq.ProtoReflect.Descriptor instead.
func (*ListByUserReq) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{8}
}

func (x *ListByUserReq) GetBizGuid() int64 {
	if x != nil {
		return x.BizGuid
	}
	return 0
}

func (x *ListByUserReq) GetBizType() v1.CMN_BIZ {
	if x != nil {
		return x.BizType
	}
	return v1.CMN_BIZ_INVALID
}

func (x *ListByUserReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ListByUserReq) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListByUserRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 评论列表
	List []*CommentDetail `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 这里面total，是一级评论总数
	Pagination *v1.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 所有评论总数
	CntComment int32 `protobuf:"varint,3,opt,name=cntComment,proto3" json:"cntComment,omitempty"`
}

func (x *ListByUserRes) Reset() {
	*x = ListByUserRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comment_v1_comment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListByUserRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListByUserRes) ProtoMessage() {}

func (x *ListByUserRes) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListByUserRes.ProtoReflect.Descriptor instead.
func (*ListByUserRes) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{9}
}

func (x *ListByUserRes) GetList() []*CommentDetail {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListByUserRes) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListByUserRes) GetCntComment() int32 {
	if x != nil {
		return x.CntComment
	}
	return 0
}

// 获取返回的信息使用
type CommentDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 评论id 也作为pageSeq使用
	CommentGuid string `protobuf:"bytes,1,opt,name=commentGuid,proto3" json:"commentGuid,omitempty"`
	// 业务Guid
	BizGuid string `protobuf:"bytes,2,opt,name=bizGuid,proto3" json:"bizGuid,omitempty"`
	// 业务类型
	BizType v1.CMN_BIZ `protobuf:"varint,3,opt,name=bizType,proto3,enum=common.v1.CMN_BIZ" json:"bizType,omitempty"`
	// 内容
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	// 回复的reply to comment id
	ReplyToGuid string `protobuf:"bytes,5,opt,name=replyToGuid,proto3" json:"replyToGuid,omitempty"`
	// 回复的根评论id。 a评论，b回复了a，c回复了b，那么c的reply to root id，为根的id信息
	ReplyToRootGuid string `protobuf:"bytes,6,opt,name=replyToRootGuid,proto3" json:"replyToRootGuid,omitempty"`
	// 用户Uid
	Uid int64 `protobuf:"varint,7,opt,name=uid,proto3" json:"uid,omitempty"`
	// 昵称
	UserNickname string `protobuf:"bytes,8,opt,name=userNickname,proto3" json:"userNickname,omitempty"`
	// 头像像
	UserAvatar string `protobuf:"bytes,9,opt,name=userAvatar,proto3" json:"userAvatar,omitempty"`
	// 回复用户Uid
	ReplyToUid int64 `protobuf:"varint,10,opt,name=replyToUid,proto3" json:"replyToUid,omitempty"`
	// 回复用户昵称
	ReplyNickname string `protobuf:"bytes,11,opt,name=replyNickname,proto3" json:"replyNickname,omitempty"`
	// 回复用户头像
	ReplyAvatar string `protobuf:"bytes,12,opt,name=replyAvatar,proto3" json:"replyAvatar,omitempty"`
	// 点星总数
	CntStar int32 `protobuf:"varint,13,opt,name=cntStar,proto3" json:"cntStar,omitempty"`
	//点赞状态 1为点赞 0不点赞
	StarStatus int32 `protobuf:"varint,14,opt,name=starStatus,proto3" json:"starStatus,omitempty"`
	// 时间
	Ctime int64 `protobuf:"varint,15,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 是否是回复信息
	IsReply int32 `protobuf:"varint,16,opt,name=isReply,proto3" json:"isReply,omitempty"`
	// actionGuid
	ActionGuid string `protobuf:"bytes,17,opt,name=actionGuid,proto3" json:"actionGuid,omitempty"`
	// 文章行为
	ActionType v1.FILE_ACT `protobuf:"varint,18,opt,name=actionType,proto3,enum=common.v1.FILE_ACT" json:"actionType,omitempty"`
	// 默认两条
	Children []*CommentDetail `protobuf:"bytes,19,rep,name=children,proto3" json:"children,omitempty"`
	// 子评论总数
	CntChildComment int64 `protobuf:"varint,20,opt,name=cntChildComment,proto3" json:"cntChildComment,omitempty"`
	// 子评论
	HasMoreChildComment bool `protobuf:"varint,21,opt,name=hasMoreChildComment,proto3" json:"hasMoreChildComment,omitempty"`
	// ip定位的地址, 暂时精确到省
	IpLocation string `protobuf:"bytes,22,opt,name=ipLocation,proto3" json:"ipLocation,omitempty"`
}

func (x *CommentDetail) Reset() {
	*x = CommentDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comment_v1_comment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentDetail) ProtoMessage() {}

func (x *CommentDetail) ProtoReflect() protoreflect.Message {
	mi := &file_comment_v1_comment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentDetail.ProtoReflect.Descriptor instead.
func (*CommentDetail) Descriptor() ([]byte, []int) {
	return file_comment_v1_comment_proto_rawDescGZIP(), []int{10}
}

func (x *CommentDetail) GetCommentGuid() string {
	if x != nil {
		return x.CommentGuid
	}
	return ""
}

func (x *CommentDetail) GetBizGuid() string {
	if x != nil {
		return x.BizGuid
	}
	return ""
}

func (x *CommentDetail) GetBizType() v1.CMN_BIZ {
	if x != nil {
		return x.BizType
	}
	return v1.CMN_BIZ_INVALID
}

func (x *CommentDetail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentDetail) GetReplyToGuid() string {
	if x != nil {
		return x.ReplyToGuid
	}
	return ""
}

func (x *CommentDetail) GetReplyToRootGuid() string {
	if x != nil {
		return x.ReplyToRootGuid
	}
	return ""
}

func (x *CommentDetail) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CommentDetail) GetUserNickname() string {
	if x != nil {
		return x.UserNickname
	}
	return ""
}

func (x *CommentDetail) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *CommentDetail) GetReplyToUid() int64 {
	if x != nil {
		return x.ReplyToUid
	}
	return 0
}

func (x *CommentDetail) GetReplyNickname() string {
	if x != nil {
		return x.ReplyNickname
	}
	return ""
}

func (x *CommentDetail) GetReplyAvatar() string {
	if x != nil {
		return x.ReplyAvatar
	}
	return ""
}

func (x *CommentDetail) GetCntStar() int32 {
	if x != nil {
		return x.CntStar
	}
	return 0
}

func (x *CommentDetail) GetStarStatus() int32 {
	if x != nil {
		return x.StarStatus
	}
	return 0
}

func (x *CommentDetail) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *CommentDetail) GetIsReply() int32 {
	if x != nil {
		return x.IsReply
	}
	return 0
}

func (x *CommentDetail) GetActionGuid() string {
	if x != nil {
		return x.ActionGuid
	}
	return ""
}

func (x *CommentDetail) GetActionType() v1.FILE_ACT {
	if x != nil {
		return x.ActionType
	}
	return v1.FILE_ACT_INVALID
}

func (x *CommentDetail) GetChildren() []*CommentDetail {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *CommentDetail) GetCntChildComment() int64 {
	if x != nil {
		return x.CntChildComment
	}
	return 0
}

func (x *CommentDetail) GetHasMoreChildComment() bool {
	if x != nil {
		return x.HasMoreChildComment
	}
	return false
}

func (x *CommentDetail) GetIpLocation() string {
	if x != nil {
		return x.IpLocation
	}
	return ""
}

var File_comment_v1_comment_proto protoreflect.FileDescriptor

var file_comment_v1_comment_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xcd, 0x02, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x62, 0x69, 0x7a, 0x47,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x62,
	0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x42, 0x49, 0x5a,
	0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x41,
	0x43, 0x54, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22,
	0x2d, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x22, 0x91,
	0x01, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x07, 0x62, 0x69,
	0x7a, 0x47, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a,
	0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x42,
	0x49, 0x5a, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x2d,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x0c, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x47, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x62, 0x69, 0x7a, 0x47, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x62, 0x69,
	0x7a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x42, 0x49, 0x5a, 0x52,
	0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x94, 0x01, 0x0a, 0x0c, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x29, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x62, 0x69,
	0x7a, 0x47, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a,
	0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x42,
	0x49, 0x5a, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45,
	0x2e, 0x43, 0x4d, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x0b, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x7a, 0x47, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2c,
	0x0a, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e,
	0x42, 0x49, 0x5a, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x95,
	0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x8f, 0x06, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69,
	0x7a, 0x47, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x7a,
	0x47, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x42, 0x49, 0x5a, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x47, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x47, 0x75, 0x69, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x52, 0x6f, 0x6f, 0x74, 0x47, 0x75, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f,
	0x52, 0x6f, 0x6f, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x55, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6f, 0x55, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x33, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x41, 0x43, 0x54, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f,
	0x63, 0x6e, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6e, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72,
	0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x70, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x70,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xb0, 0x02, 0x0a, 0x07, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3f,
	0x0a, 0x09, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x36, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x42, 0x8a, 0x01, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0c,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x21,
	0x65, 0x63, 0x6f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_comment_v1_comment_proto_rawDescOnce sync.Once
	file_comment_v1_comment_proto_rawDescData = file_comment_v1_comment_proto_rawDesc
)

func file_comment_v1_comment_proto_rawDescGZIP() []byte {
	file_comment_v1_comment_proto_rawDescOnce.Do(func() {
		file_comment_v1_comment_proto_rawDescData = protoimpl.X.CompressGZIP(file_comment_v1_comment_proto_rawDescData)
	})
	return file_comment_v1_comment_proto_rawDescData
}

var file_comment_v1_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_comment_v1_comment_proto_goTypes = []interface{}{
	(*CreateReq)(nil),     // 0: comment.v1.CreateReq
	(*CreateRes)(nil),     // 1: comment.v1.CreateRes
	(*ListReq)(nil),       // 2: comment.v1.ListReq
	(*ListRes)(nil),       // 3: comment.v1.ListRes
	(*ChildListReq)(nil),  // 4: comment.v1.ChildListReq
	(*ChildListRes)(nil),  // 5: comment.v1.ChildListRes
	(*DeleteReq)(nil),     // 6: comment.v1.DeleteReq
	(*DeleteRes)(nil),     // 7: comment.v1.DeleteRes
	(*ListByUserReq)(nil), // 8: comment.v1.ListByUserReq
	(*ListByUserRes)(nil), // 9: comment.v1.ListByUserRes
	(*CommentDetail)(nil), // 10: comment.v1.CommentDetail
	(v1.CMN_BIZ)(0),       // 11: common.v1.CMN.BIZ
	(v1.FILE_ACT)(0),      // 12: common.v1.FILE.ACT
	(*v1.Pagination)(nil), // 13: common.v1.Pagination
	(v1.FILE_CMET_DEL)(0), // 14: common.v1.FILE.CMET_DEL
}
var file_comment_v1_comment_proto_depIdxs = []int32{
	11, // 0: comment.v1.CreateReq.bizType:type_name -> common.v1.CMN.BIZ
	12, // 1: comment.v1.CreateReq.actionType:type_name -> common.v1.FILE.ACT
	11, // 2: comment.v1.ListReq.bizType:type_name -> common.v1.CMN.BIZ
	13, // 3: comment.v1.ListReq.pagination:type_name -> common.v1.Pagination
	10, // 4: comment.v1.ListRes.list:type_name -> comment.v1.CommentDetail
	13, // 5: comment.v1.ListRes.pagination:type_name -> common.v1.Pagination
	11, // 6: comment.v1.ChildListReq.bizType:type_name -> common.v1.CMN.BIZ
	13, // 7: comment.v1.ChildListReq.pagination:type_name -> common.v1.Pagination
	10, // 8: comment.v1.ChildListRes.list:type_name -> comment.v1.CommentDetail
	13, // 9: comment.v1.ChildListRes.pagination:type_name -> common.v1.Pagination
	11, // 10: comment.v1.DeleteReq.bizType:type_name -> common.v1.CMN.BIZ
	14, // 11: comment.v1.DeleteReq.deleteType:type_name -> common.v1.FILE.CMET_DEL
	11, // 12: comment.v1.ListByUserReq.bizType:type_name -> common.v1.CMN.BIZ
	13, // 13: comment.v1.ListByUserReq.pagination:type_name -> common.v1.Pagination
	10, // 14: comment.v1.ListByUserRes.list:type_name -> comment.v1.CommentDetail
	13, // 15: comment.v1.ListByUserRes.pagination:type_name -> common.v1.Pagination
	11, // 16: comment.v1.CommentDetail.bizType:type_name -> common.v1.CMN.BIZ
	12, // 17: comment.v1.CommentDetail.actionType:type_name -> common.v1.FILE.ACT
	10, // 18: comment.v1.CommentDetail.children:type_name -> comment.v1.CommentDetail
	0,  // 19: comment.v1.Comment.Create:input_type -> comment.v1.CreateReq
	2,  // 20: comment.v1.Comment.List:input_type -> comment.v1.ListReq
	4,  // 21: comment.v1.Comment.ChildList:input_type -> comment.v1.ChildListReq
	6,  // 22: comment.v1.Comment.Delete:input_type -> comment.v1.DeleteReq
	8,  // 23: comment.v1.Comment.ListByUser:input_type -> comment.v1.ListByUserReq
	1,  // 24: comment.v1.Comment.Create:output_type -> comment.v1.CreateRes
	3,  // 25: comment.v1.Comment.List:output_type -> comment.v1.ListRes
	5,  // 26: comment.v1.Comment.ChildList:output_type -> comment.v1.ChildListRes
	7,  // 27: comment.v1.Comment.Delete:output_type -> comment.v1.DeleteRes
	9,  // 28: comment.v1.Comment.ListByUser:output_type -> comment.v1.ListByUserRes
	24, // [24:29] is the sub-list for method output_type
	19, // [19:24] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_comment_v1_comment_proto_init() }
func file_comment_v1_comment_proto_init() {
	if File_comment_v1_comment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_comment_v1_comment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comment_v1_comment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comment_v1_comment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comment_v1_comment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comment_v1_comment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comment_v1_comment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comment_v1_comment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comment_v1_comment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comment_v1_comment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListByUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comment_v1_comment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListByUserRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comment_v1_comment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_comment_v1_comment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comment_v1_comment_proto_goTypes,
		DependencyIndexes: file_comment_v1_comment_proto_depIdxs,
		MessageInfos:      file_comment_v1_comment_proto_msgTypes,
	}.Build()
	File_comment_v1_comment_proto = out.File
	file_comment_v1_comment_proto_rawDesc = nil
	file_comment_v1_comment_proto_goTypes = nil
	file_comment_v1_comment_proto_depIdxs = nil
}
