// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: space/v1/space.proto

package spacev1

import (
	v1 "ecodepost/pb/common/v1"
	_ "ecodepost/pb/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MemberStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 空间guid
	SpaceGuid string `protobuf:"bytes,1,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// 用户uid
	Uid int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// 用户是否是空间成员
	IsMember bool `protobuf:"varint,3,opt,name=isMember,proto3" json:"isMember,omitempty"`
	// 用户是否可以管理
	IsAllowManage bool `protobuf:"varint,4,opt,name=isAllowManage,proto3" json:"isAllowManage,omitempty"`
}

func (x *MemberStatus) Reset() {
	*x = MemberStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberStatus) ProtoMessage() {}

func (x *MemberStatus) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberStatus.ProtoReflect.Descriptor instead.
func (*MemberStatus) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{0}
}

func (x *MemberStatus) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *MemberStatus) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MemberStatus) GetIsMember() bool {
	if x != nil {
		return x.IsMember
	}
	return false
}

func (x *MemberStatus) GetIsAllowManage() bool {
	if x != nil {
		return x.IsAllowManage
	}
	return false
}

type TreeSpaceGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GUID
	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 可见级别
	Visibility v1.CMN_VISBL `protobuf:"varint,4,opt,name=visibility,proto3,enum=common.v1.CMN_VISBL" json:"visibility,omitempty"`
	// 是否允许有设置按钮
	IsAllowSet bool `protobuf:"varint,5,opt,name=isAllowSet,proto3" json:"isAllowSet,omitempty"`
	// 是否允许创建下层的空间
	IsAllowCreateSpace bool `protobuf:"varint,6,opt,name=isAllowCreateSpace,proto3" json:"isAllowCreateSpace,omitempty"`
}

func (x *TreeSpaceGroup) Reset() {
	*x = TreeSpaceGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeSpaceGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeSpaceGroup) ProtoMessage() {}

func (x *TreeSpaceGroup) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeSpaceGroup.ProtoReflect.Descriptor instead.
func (*TreeSpaceGroup) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{1}
}

func (x *TreeSpaceGroup) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *TreeSpaceGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TreeSpaceGroup) GetVisibility() v1.CMN_VISBL {
	if x != nil {
		return x.Visibility
	}
	return v1.CMN_VISBL_INVALID
}

func (x *TreeSpaceGroup) GetIsAllowSet() bool {
	if x != nil {
		return x.IsAllowSet
	}
	return false
}

func (x *TreeSpaceGroup) GetIsAllowCreateSpace() bool {
	if x != nil {
		return x.IsAllowCreateSpace
	}
	return false
}

// TreeSpace
type TreeSpace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GUID
	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 空间分组guid
	SpaceGroupGuid string `protobuf:"bytes,4,opt,name=spaceGroupGuid,proto3" json:"spaceGroupGuid,omitempty"`
	// Icon
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	// 空间类型
	SpaceType v1.CMN_APP `protobuf:"varint,6,opt,name=spaceType,proto3,enum=common.v1.CMN_APP" json:"spaceType,omitempty"`
	// 空间布局
	SpaceLayout v1.SPC_LAYOUT `protobuf:"varint,7,opt,name=spaceLayout,proto3,enum=common.v1.SPC_LAYOUT" json:"spaceLayout,omitempty"`
	// 可见级别
	Visibility v1.CMN_VISBL `protobuf:"varint,8,opt,name=visibility,proto3,enum=common.v1.CMN_VISBL" json:"visibility,omitempty"`
	// 成员个数
	MemberCnt int64 `protobuf:"varint,9,opt,name=memberCnt,proto3" json:"memberCnt,omitempty"`
	// spaceOptions
	SpaceOptions []*v1.SpaceOption `protobuf:"bytes,10,rep,name=spaceOptions,proto3" json:"spaceOptions,omitempty"`
	// 收费类型
	ChargeType v1.SPC_CT `protobuf:"varint,11,opt,name=chargeType,proto3,enum=common.v1.SPC_CT" json:"chargeType,omitempty"`
	// 原始价格
	OriginPrice int64 `protobuf:"varint,12,opt,name=originPrice,proto3" json:"originPrice,omitempty"`
	// 当前价格
	Price int64 `protobuf:"varint,13,opt,name=price,proto3" json:"price,omitempty"`
	// 空间简介或描述
	Desc string `protobuf:"bytes,14,opt,name=desc,proto3" json:"desc,omitempty"`
	// 空间头图
	HeadImage string `protobuf:"bytes,15,opt,name=headImage,proto3" json:"headImage,omitempty"`
	// 空间封面
	Cover string `protobuf:"bytes,16,opt,name=cover,proto3" json:"cover,omitempty"`
	// 是否允许有设置按钮
	IsAllowSet bool `protobuf:"varint,17,opt,name=isAllowSet,proto3" json:"isAllowSet,omitempty"`
	// 访问设置
	Access v1.SPC_ACS `protobuf:"varint,19,opt,name=access,proto3,enum=common.v1.SPC_ACS" json:"access,omitempty"`
	// link信息
	Link string `protobuf:"bytes,20,opt,name=link,proto3" json:"link,omitempty"`
	// emoji列表
	EmojiList []*v1.EmojiInfo `protobuf:"bytes,21,rep,name=emojiList,proto3" json:"emojiList,omitempty"`
}

func (x *TreeSpace) Reset() {
	*x = TreeSpace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeSpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeSpace) ProtoMessage() {}

func (x *TreeSpace) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeSpace.ProtoReflect.Descriptor instead.
func (*TreeSpace) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{2}
}

func (x *TreeSpace) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *TreeSpace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TreeSpace) GetSpaceGroupGuid() string {
	if x != nil {
		return x.SpaceGroupGuid
	}
	return ""
}

func (x *TreeSpace) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *TreeSpace) GetSpaceType() v1.CMN_APP {
	if x != nil {
		return x.SpaceType
	}
	return v1.CMN_APP_INVALID
}

func (x *TreeSpace) GetSpaceLayout() v1.SPC_LAYOUT {
	if x != nil {
		return x.SpaceLayout
	}
	return v1.SPC_LAYOUT_EMPTY
}

func (x *TreeSpace) GetVisibility() v1.CMN_VISBL {
	if x != nil {
		return x.Visibility
	}
	return v1.CMN_VISBL_INVALID
}

func (x *TreeSpace) GetMemberCnt() int64 {
	if x != nil {
		return x.MemberCnt
	}
	return 0
}

func (x *TreeSpace) GetSpaceOptions() []*v1.SpaceOption {
	if x != nil {
		return x.SpaceOptions
	}
	return nil
}

func (x *TreeSpace) GetChargeType() v1.SPC_CT {
	if x != nil {
		return x.ChargeType
	}
	return v1.SPC_CT_INVALID
}

func (x *TreeSpace) GetOriginPrice() int64 {
	if x != nil {
		return x.OriginPrice
	}
	return 0
}

func (x *TreeSpace) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TreeSpace) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TreeSpace) GetHeadImage() string {
	if x != nil {
		return x.HeadImage
	}
	return ""
}

func (x *TreeSpace) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *TreeSpace) GetIsAllowSet() bool {
	if x != nil {
		return x.IsAllowSet
	}
	return false
}

func (x *TreeSpace) GetAccess() v1.SPC_ACS {
	if x != nil {
		return x.Access
	}
	return v1.SPC_ACS_INVALID
}

func (x *TreeSpace) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *TreeSpace) GetEmojiList() []*v1.EmojiInfo {
	if x != nil {
		return x.EmojiList
	}
	return nil
}

type ListSpaceAndGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
}

func (x *ListSpaceAndGroupReq) Reset() {
	*x = ListSpaceAndGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpaceAndGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceAndGroupReq) ProtoMessage() {}

func (x *ListSpaceAndGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceAndGroupReq.ProtoReflect.Descriptor instead.
func (*ListSpaceAndGroupReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{3}
}

func (x *ListSpaceAndGroupReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

type ListSpaceAndGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 空间分组列表
	SpaceGroupList []*TreeSpaceGroup `protobuf:"bytes,1,rep,name=spaceGroupList,proto3" json:"spaceGroupList,omitempty"`
	// space list
	SpaceList []*TreeSpace `protobuf:"bytes,2,rep,name=spaceList,proto3" json:"spaceList,omitempty"`
}

func (x *ListSpaceAndGroupRes) Reset() {
	*x = ListSpaceAndGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpaceAndGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceAndGroupRes) ProtoMessage() {}

func (x *ListSpaceAndGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceAndGroupRes.ProtoReflect.Descriptor instead.
func (*ListSpaceAndGroupRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{4}
}

func (x *ListSpaceAndGroupRes) GetSpaceGroupList() []*TreeSpaceGroup {
	if x != nil {
		return x.SpaceGroupList
	}
	return nil
}

func (x *ListSpaceAndGroupRes) GetSpaceList() []*TreeSpace {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

type GetMemberStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 需要查询的uid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 空间Guid列表
	SpaceGuids []string `protobuf:"bytes,2,rep,name=spaceGuids,proto3" json:"spaceGuids,omitempty"`
}

func (x *GetMemberStatusReq) Reset() {
	*x = GetMemberStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberStatusReq) ProtoMessage() {}

func (x *GetMemberStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberStatusReq.ProtoReflect.Descriptor instead.
func (*GetMemberStatusReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{5}
}

func (x *GetMemberStatusReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetMemberStatusReq) GetSpaceGuids() []string {
	if x != nil {
		return x.SpaceGuids
	}
	return nil
}

type GetMemberStatusRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户空间状态列表
	List []*MemberStatus `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetMemberStatusRes) Reset() {
	*x = GetMemberStatusRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMemberStatusRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMemberStatusRes) ProtoMessage() {}

func (x *GetMemberStatusRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMemberStatusRes.ProtoReflect.Descriptor instead.
func (*GetMemberStatusRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{6}
}

func (x *GetMemberStatusRes) GetList() []*MemberStatus {
	if x != nil {
		return x.List
	}
	return nil
}

type SpaceGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GUID
	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// space list
	List []*v1.SpaceInfo `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
	// 可见级别
	Visibility v1.CMN_VISBL `protobuf:"varint,4,opt,name=visibility,proto3,enum=common.v1.CMN_VISBL" json:"visibility,omitempty"`
	// 是否允许有设置按钮
	IsAllowSet bool `protobuf:"varint,5,opt,name=isAllowSet,proto3" json:"isAllowSet,omitempty"`
	// 是否允许创建下层的空间
	IsAllowCreateSpace bool `protobuf:"varint,6,opt,name=isAllowCreateSpace,proto3" json:"isAllowCreateSpace,omitempty"`
}

func (x *SpaceGroupInfo) Reset() {
	*x = SpaceGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceGroupInfo) ProtoMessage() {}

func (x *SpaceGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceGroupInfo.ProtoReflect.Descriptor instead.
func (*SpaceGroupInfo) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{7}
}

func (x *SpaceGroupInfo) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *SpaceGroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpaceGroupInfo) GetList() []*v1.SpaceInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SpaceGroupInfo) GetVisibility() v1.CMN_VISBL {
	if x != nil {
		return x.Visibility
	}
	return v1.CMN_VISBL_INVALID
}

func (x *SpaceGroupInfo) GetIsAllowSet() bool {
	if x != nil {
		return x.IsAllowSet
	}
	return false
}

func (x *SpaceGroupInfo) GetIsAllowCreateSpace() bool {
	if x != nil {
		return x.IsAllowCreateSpace
	}
	return false
}

type SpaceInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间Guid
	SpaceGuid string `protobuf:"bytes,2,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
}

func (x *SpaceInfoReq) Reset() {
	*x = SpaceInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceInfoReq) ProtoMessage() {}

func (x *SpaceInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceInfoReq.ProtoReflect.Descriptor instead.
func (*SpaceInfoReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{8}
}

func (x *SpaceInfoReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *SpaceInfoReq) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

type SpaceInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// space详情
	SpaceInfo *v1.SpaceInfo `protobuf:"bytes,1,opt,name=spaceInfo,proto3" json:"spaceInfo,omitempty"`
}

func (x *SpaceInfoRes) Reset() {
	*x = SpaceInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceInfoRes) ProtoMessage() {}

func (x *SpaceInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceInfoRes.ProtoReflect.Descriptor instead.
func (*SpaceInfoRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{9}
}

func (x *SpaceInfoRes) GetSpaceInfo() *v1.SpaceInfo {
	if x != nil {
		return x.SpaceInfo
	}
	return nil
}

type ListSpaceInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间guids
	SpaceGuids []string `protobuf:"bytes,2,rep,name=spaceGuids,proto3" json:"spaceGuids,omitempty"`
}

func (x *ListSpaceInfoReq) Reset() {
	*x = ListSpaceInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpaceInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceInfoReq) ProtoMessage() {}

func (x *ListSpaceInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceInfoReq.ProtoReflect.Descriptor instead.
func (*ListSpaceInfoReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{10}
}

func (x *ListSpaceInfoReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *ListSpaceInfoReq) GetSpaceGuids() []string {
	if x != nil {
		return x.SpaceGuids
	}
	return nil
}

type ListSpaceInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 空间列表
	SpaceInfos []*v1.SpaceInfo `protobuf:"bytes,1,rep,name=spaceInfos,proto3" json:"spaceInfos,omitempty"`
}

func (x *ListSpaceInfoRes) Reset() {
	*x = ListSpaceInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpaceInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceInfoRes) ProtoMessage() {}

func (x *ListSpaceInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceInfoRes.ProtoReflect.Descriptor instead.
func (*ListSpaceInfoRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{11}
}

func (x *ListSpaceInfoRes) GetSpaceInfos() []*v1.SpaceInfo {
	if x != nil {
		return x.SpaceInfos
	}
	return nil
}

type ListSpaceGuidsByUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户uid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ListSpaceGuidsByUidReq) Reset() {
	*x = ListSpaceGuidsByUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpaceGuidsByUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceGuidsByUidReq) ProtoMessage() {}

func (x *ListSpaceGuidsByUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceGuidsByUidReq.ProtoReflect.Descriptor instead.
func (*ListSpaceGuidsByUidReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{12}
}

func (x *ListSpaceGuidsByUidReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ListSpaceGuidsByUidRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 空间Guids
	SpaceGuids []string `protobuf:"bytes,1,rep,name=spaceGuids,proto3" json:"spaceGuids,omitempty"`
}

func (x *ListSpaceGuidsByUidRes) Reset() {
	*x = ListSpaceGuidsByUidRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpaceGuidsByUidRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceGuidsByUidRes) ProtoMessage() {}

func (x *ListSpaceGuidsByUidRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceGuidsByUidRes.ProtoReflect.Descriptor instead.
func (*ListSpaceGuidsByUidRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{13}
}

func (x *ListSpaceGuidsByUidRes) GetSpaceGuids() []string {
	if x != nil {
		return x.SpaceGuids
	}
	return nil
}

type SimpleSpaceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GUID
	SpaceGuid string `protobuf:"bytes,1,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SimpleSpaceInfo) Reset() {
	*x = SimpleSpaceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleSpaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleSpaceInfo) ProtoMessage() {}

func (x *SimpleSpaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleSpaceInfo.ProtoReflect.Descriptor instead.
func (*SimpleSpaceInfo) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{14}
}

func (x *SimpleSpaceInfo) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *SimpleSpaceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListPublicSpaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户uid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *ListPublicSpaceReq) Reset() {
	*x = ListPublicSpaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPublicSpaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublicSpaceReq) ProtoMessage() {}

func (x *ListPublicSpaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublicSpaceReq.ProtoReflect.Descriptor instead.
func (*ListPublicSpaceReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{15}
}

func (x *ListPublicSpaceReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ListPublicSpaceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 空间详情
	SimpleSpaceInfo []*SimpleSpaceInfo `protobuf:"bytes,1,rep,name=SimpleSpaceInfo,proto3" json:"SimpleSpaceInfo,omitempty"`
}

func (x *ListPublicSpaceRes) Reset() {
	*x = ListPublicSpaceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPublicSpaceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublicSpaceRes) ProtoMessage() {}

func (x *ListPublicSpaceRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublicSpaceRes.ProtoReflect.Descriptor instead.
func (*ListPublicSpaceRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{16}
}

func (x *ListPublicSpaceRes) GetSimpleSpaceInfo() []*SimpleSpaceInfo {
	if x != nil {
		return x.SimpleSpaceInfo
	}
	return nil
}

// Space 列表
type ListTreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
}

func (x *ListTreeReq) Reset() {
	*x = ListTreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTreeReq) ProtoMessage() {}

func (x *ListTreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTreeReq.ProtoReflect.Descriptor instead.
func (*ListTreeReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{17}
}

func (x *ListTreeReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

// Space 列表
type ListTreeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Space list
	Tree []*AntSpaceGroupInfo `protobuf:"bytes,1,rep,name=tree,proto3" json:"tree,omitempty"`
}

func (x *ListTreeRes) Reset() {
	*x = ListTreeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTreeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTreeRes) ProtoMessage() {}

func (x *ListTreeRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTreeRes.ProtoReflect.Descriptor instead.
func (*ListTreeRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{18}
}

func (x *ListTreeRes) GetTree() []*AntSpaceGroupInfo {
	if x != nil {
		return x.Tree
	}
	return nil
}

// Space 列表
type TreeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
}

func (x *TreeReq) Reset() {
	*x = TreeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeReq) ProtoMessage() {}

func (x *TreeReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeReq.ProtoReflect.Descriptor instead.
func (*TreeReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{19}
}

func (x *TreeReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

// Space 列表
type TreeRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Space list
	Tree []*AntSpaceGroupInfo `protobuf:"bytes,1,rep,name=tree,proto3" json:"tree,omitempty"`
}

func (x *TreeRes) Reset() {
	*x = TreeRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeRes) ProtoMessage() {}

func (x *TreeRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeRes.ProtoReflect.Descriptor instead.
func (*TreeRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{20}
}

func (x *TreeRes) GetTree() []*AntSpaceGroupInfo {
	if x != nil {
		return x.Tree
	}
	return nil
}

// SpaceGroupInfo
type AntSpaceGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GUID
	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Icon Type
	IconType v1.FILE_IT `protobuf:"varint,4,opt,name=iconType,proto3,enum=common.v1.FILE_IT" json:"iconType,omitempty"`
	// Icon
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	// space list
	Children []*AntSpaceInfo `protobuf:"bytes,6,rep,name=children,proto3" json:"children,omitempty"`
	// 可见级别
	Visibility v1.CMN_VISBL `protobuf:"varint,9,opt,name=visibility,proto3,enum=common.v1.CMN_VISBL" json:"visibility,omitempty"`
	// 是否允许有设置按钮
	IsAllowSet int32 `protobuf:"varint,10,opt,name=isAllowSet,proto3" json:"isAllowSet,omitempty"`
	// 是否允许创建下层的空间
	IsAllowCreateSpace int32 `protobuf:"varint,11,opt,name=isAllowCreateSpace,proto3" json:"isAllowCreateSpace,omitempty"`
	// 访问设置
	Access v1.SPC_ACS `protobuf:"varint,12,opt,name=access,proto3,enum=common.v1.SPC_ACS" json:"access,omitempty"`
}

func (x *AntSpaceGroupInfo) Reset() {
	*x = AntSpaceGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntSpaceGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntSpaceGroupInfo) ProtoMessage() {}

func (x *AntSpaceGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntSpaceGroupInfo.ProtoReflect.Descriptor instead.
func (*AntSpaceGroupInfo) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{21}
}

func (x *AntSpaceGroupInfo) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *AntSpaceGroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AntSpaceGroupInfo) GetIconType() v1.FILE_IT {
	if x != nil {
		return x.IconType
	}
	return v1.FILE_IT_INVALID
}

func (x *AntSpaceGroupInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AntSpaceGroupInfo) GetChildren() []*AntSpaceInfo {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *AntSpaceGroupInfo) GetVisibility() v1.CMN_VISBL {
	if x != nil {
		return x.Visibility
	}
	return v1.CMN_VISBL_INVALID
}

func (x *AntSpaceGroupInfo) GetIsAllowSet() int32 {
	if x != nil {
		return x.IsAllowSet
	}
	return 0
}

func (x *AntSpaceGroupInfo) GetIsAllowCreateSpace() int32 {
	if x != nil {
		return x.IsAllowCreateSpace
	}
	return 0
}

func (x *AntSpaceGroupInfo) GetAccess() v1.SPC_ACS {
	if x != nil {
		return x.Access
	}
	return v1.SPC_ACS_INVALID
}

// AntSpaceInfo
type AntSpaceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GUID
	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Icon Type
	IconType v1.FILE_IT `protobuf:"varint,4,opt,name=iconType,proto3,enum=common.v1.FILE_IT" json:"iconType,omitempty"`
	// Icon
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	// 空间类型
	SpaceType v1.CMN_APP `protobuf:"varint,6,opt,name=spaceType,proto3,enum=common.v1.CMN_APP" json:"spaceType,omitempty"`
	// 空间布局
	SpaceLayout v1.SPC_LAYOUT `protobuf:"varint,7,opt,name=spaceLayout,proto3,enum=common.v1.SPC_LAYOUT" json:"spaceLayout,omitempty"`
	// 可见级别
	Visibility v1.CMN_VISBL `protobuf:"varint,8,opt,name=visibility,proto3,enum=common.v1.CMN_VISBL" json:"visibility,omitempty"`
	// 是否允许有设置按钮
	IsAllowSet int32 `protobuf:"varint,9,opt,name=isAllowSet,proto3" json:"isAllowSet,omitempty"`
	// 权限
	Access v1.SPC_ACS `protobuf:"varint,10,opt,name=access,proto3,enum=common.v1.SPC_ACS" json:"access,omitempty"`
	// Option
	SpaceOptions []*v1.SpaceOption `protobuf:"bytes,11,rep,name=spaceOptions,proto3" json:"spaceOptions,omitempty"`
	// HeadImage
	HeadImage string `protobuf:"bytes,12,opt,name=headImage,proto3" json:"headImage,omitempty"`
	// 链接
	Link string `protobuf:"bytes,13,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *AntSpaceInfo) Reset() {
	*x = AntSpaceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AntSpaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntSpaceInfo) ProtoMessage() {}

func (x *AntSpaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntSpaceInfo.ProtoReflect.Descriptor instead.
func (*AntSpaceInfo) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{22}
}

func (x *AntSpaceInfo) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *AntSpaceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AntSpaceInfo) GetIconType() v1.FILE_IT {
	if x != nil {
		return x.IconType
	}
	return v1.FILE_IT_INVALID
}

func (x *AntSpaceInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AntSpaceInfo) GetSpaceType() v1.CMN_APP {
	if x != nil {
		return x.SpaceType
	}
	return v1.CMN_APP_INVALID
}

func (x *AntSpaceInfo) GetSpaceLayout() v1.SPC_LAYOUT {
	if x != nil {
		return x.SpaceLayout
	}
	return v1.SPC_LAYOUT_EMPTY
}

func (x *AntSpaceInfo) GetVisibility() v1.CMN_VISBL {
	if x != nil {
		return x.Visibility
	}
	return v1.CMN_VISBL_INVALID
}

func (x *AntSpaceInfo) GetIsAllowSet() int32 {
	if x != nil {
		return x.IsAllowSet
	}
	return 0
}

func (x *AntSpaceInfo) GetAccess() v1.SPC_ACS {
	if x != nil {
		return x.Access
	}
	return v1.SPC_ACS_INVALID
}

func (x *AntSpaceInfo) GetSpaceOptions() []*v1.SpaceOption {
	if x != nil {
		return x.SpaceOptions
	}
	return nil
}

func (x *AntSpaceInfo) GetHeadImage() string {
	if x != nil {
		return x.HeadImage
	}
	return ""
}

func (x *AntSpaceInfo) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

// 创建 Space
type CreateSpaceGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间分组名
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Icon Type
	IconType v1.FILE_IT `protobuf:"varint,3,opt,name=iconType,proto3,enum=common.v1.FILE_IT" json:"iconType,omitempty"`
	// Icon
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	// 可见级别
	Visibility v1.CMN_VISBL `protobuf:"varint,5,opt,name=visibility,proto3,enum=common.v1.CMN_VISBL" json:"visibility,omitempty"`
	// 是否允许成员可以查看成员列表
	IsAllowReadMemberList bool `protobuf:"varint,6,opt,name=isAllowReadMemberList,proto3" json:"isAllowReadMemberList,omitempty"`
}

func (x *CreateSpaceGroupReq) Reset() {
	*x = CreateSpaceGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpaceGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpaceGroupReq) ProtoMessage() {}

func (x *CreateSpaceGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpaceGroupReq.ProtoReflect.Descriptor instead.
func (*CreateSpaceGroupReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{23}
}

func (x *CreateSpaceGroupReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *CreateSpaceGroupReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSpaceGroupReq) GetIconType() v1.FILE_IT {
	if x != nil {
		return x.IconType
	}
	return v1.FILE_IT_INVALID
}

func (x *CreateSpaceGroupReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CreateSpaceGroupReq) GetVisibility() v1.CMN_VISBL {
	if x != nil {
		return x.Visibility
	}
	return v1.CMN_VISBL_INVALID
}

func (x *CreateSpaceGroupReq) GetIsAllowReadMemberList() bool {
	if x != nil {
		return x.IsAllowReadMemberList
	}
	return false
}

// 创建 Space Res
type CreateSpaceGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 创建的 Space
	Info *SpaceGroupInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CreateSpaceGroupRes) Reset() {
	*x = CreateSpaceGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpaceGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpaceGroupRes) ProtoMessage() {}

func (x *CreateSpaceGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpaceGroupRes.ProtoReflect.Descriptor instead.
func (*CreateSpaceGroupRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{24}
}

func (x *CreateSpaceGroupRes) GetInfo() *SpaceGroupInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 获取space group信息
type SpaceGroupInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户uid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 空间分组guid
	SpaceGroupGuid string `protobuf:"bytes,2,opt,name=spaceGroupGuid,proto3" json:"spaceGroupGuid,omitempty"`
}

func (x *SpaceGroupInfoReq) Reset() {
	*x = SpaceGroupInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceGroupInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceGroupInfoReq) ProtoMessage() {}

func (x *SpaceGroupInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceGroupInfoReq.ProtoReflect.Descriptor instead.
func (*SpaceGroupInfoReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{25}
}

func (x *SpaceGroupInfoReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SpaceGroupInfoReq) GetSpaceGroupGuid() string {
	if x != nil {
		return x.SpaceGroupGuid
	}
	return ""
}

type SpaceGroupInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GUID
	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Icon Type
	IconType v1.FILE_IT `protobuf:"varint,4,opt,name=iconType,proto3,enum=common.v1.FILE_IT" json:"iconType,omitempty"`
	// Icon
	Icon string `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`
	// space list，这个里面有空间成员个数信息
	List []*v1.SpaceInfo `protobuf:"bytes,6,rep,name=list,proto3" json:"list,omitempty"`
	// 可见级别
	Visibility v1.CMN_VISBL `protobuf:"varint,9,opt,name=visibility,proto3,enum=common.v1.CMN_VISBL" json:"visibility,omitempty"`
	// 成员个数
	MemberCnt int64 `protobuf:"varint,10,opt,name=memberCnt,proto3" json:"memberCnt,omitempty"`
}

func (x *SpaceGroupInfoRes) Reset() {
	*x = SpaceGroupInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceGroupInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceGroupInfoRes) ProtoMessage() {}

func (x *SpaceGroupInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceGroupInfoRes.ProtoReflect.Descriptor instead.
func (*SpaceGroupInfoRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{26}
}

func (x *SpaceGroupInfoRes) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *SpaceGroupInfoRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpaceGroupInfoRes) GetIconType() v1.FILE_IT {
	if x != nil {
		return x.IconType
	}
	return v1.FILE_IT_INVALID
}

func (x *SpaceGroupInfoRes) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SpaceGroupInfoRes) GetList() []*v1.SpaceInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SpaceGroupInfoRes) GetVisibility() v1.CMN_VISBL {
	if x != nil {
		return x.Visibility
	}
	return v1.CMN_VISBL_INVALID
}

func (x *SpaceGroupInfoRes) GetMemberCnt() int64 {
	if x != nil {
		return x.MemberCnt
	}
	return 0
}

// 删除 Space
type DeleteSpaceGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间分组Guid
	SpaceGroupGuid string `protobuf:"bytes,3,opt,name=spaceGroupGuid,proto3" json:"spaceGroupGuid,omitempty"`
}

func (x *DeleteSpaceGroupReq) Reset() {
	*x = DeleteSpaceGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpaceGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpaceGroupReq) ProtoMessage() {}

func (x *DeleteSpaceGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpaceGroupReq.ProtoReflect.Descriptor instead.
func (*DeleteSpaceGroupReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteSpaceGroupReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *DeleteSpaceGroupReq) GetSpaceGroupGuid() string {
	if x != nil {
		return x.SpaceGroupGuid
	}
	return ""
}

// 删除 Space
type DeleteSpaceGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSpaceGroupRes) Reset() {
	*x = DeleteSpaceGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpaceGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpaceGroupRes) ProtoMessage() {}

func (x *DeleteSpaceGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpaceGroupRes.ProtoReflect.Descriptor instead.
func (*DeleteSpaceGroupRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{28}
}

// 修改 Space
type UpdateSpaceGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间分组Guid
	SpaceGroupGuid string `protobuf:"bytes,3,opt,name=spaceGroupGuid,proto3" json:"spaceGroupGuid,omitempty"`
	// 空间分组名称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Icon Type
	IconType v1.FILE_IT `protobuf:"varint,5,opt,name=iconType,proto3,enum=common.v1.FILE_IT" json:"iconType,omitempty"`
	// Icon
	Icon string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	// 可见级别
	Visibility v1.CMN_VISBL `protobuf:"varint,7,opt,name=visibility,proto3,enum=common.v1.CMN_VISBL" json:"visibility,omitempty"`
	// 是否允许成员可以查看成员列表
	IsAllowReadMemberList bool `protobuf:"varint,8,opt,name=isAllowReadMemberList,proto3" json:"isAllowReadMemberList,omitempty"`
}

func (x *UpdateSpaceGroupReq) Reset() {
	*x = UpdateSpaceGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSpaceGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpaceGroupReq) ProtoMessage() {}

func (x *UpdateSpaceGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpaceGroupReq.ProtoReflect.Descriptor instead.
func (*UpdateSpaceGroupReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateSpaceGroupReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *UpdateSpaceGroupReq) GetSpaceGroupGuid() string {
	if x != nil {
		return x.SpaceGroupGuid
	}
	return ""
}

func (x *UpdateSpaceGroupReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSpaceGroupReq) GetIconType() v1.FILE_IT {
	if x != nil {
		return x.IconType
	}
	return v1.FILE_IT_INVALID
}

func (x *UpdateSpaceGroupReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UpdateSpaceGroupReq) GetVisibility() v1.CMN_VISBL {
	if x != nil {
		return x.Visibility
	}
	return v1.CMN_VISBL_INVALID
}

func (x *UpdateSpaceGroupReq) GetIsAllowReadMemberList() bool {
	if x != nil {
		return x.IsAllowReadMemberList
	}
	return false
}

// 修改 Space
type UpdateSpaceGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSpaceGroupRes) Reset() {
	*x = UpdateSpaceGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSpaceGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpaceGroupRes) ProtoMessage() {}

func (x *UpdateSpaceGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpaceGroupRes.ProtoReflect.Descriptor instead.
func (*UpdateSpaceGroupRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{30}
}

// 修改 Space 顺序
type ChangeSpaceGroupSortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间分组Guid
	SpaceGroupGuid string `protobuf:"bytes,3,opt,name=spaceGroupGuid,proto3" json:"spaceGroupGuid,omitempty"`
	// 置于其前或者其后的空间分组Guid
	TargetSpaceGroupGuid string `protobuf:"bytes,4,opt,name=targetSpaceGroupGuid,proto3" json:"targetSpaceGroupGuid,omitempty"`
	// before or after
	DropPosition string `protobuf:"bytes,5,opt,name=dropPosition,proto3" json:"dropPosition,omitempty"`
}

func (x *ChangeSpaceGroupSortReq) Reset() {
	*x = ChangeSpaceGroupSortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeSpaceGroupSortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSpaceGroupSortReq) ProtoMessage() {}

func (x *ChangeSpaceGroupSortReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSpaceGroupSortReq.ProtoReflect.Descriptor instead.
func (*ChangeSpaceGroupSortReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{31}
}

func (x *ChangeSpaceGroupSortReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *ChangeSpaceGroupSortReq) GetSpaceGroupGuid() string {
	if x != nil {
		return x.SpaceGroupGuid
	}
	return ""
}

func (x *ChangeSpaceGroupSortReq) GetTargetSpaceGroupGuid() string {
	if x != nil {
		return x.TargetSpaceGroupGuid
	}
	return ""
}

func (x *ChangeSpaceGroupSortReq) GetDropPosition() string {
	if x != nil {
		return x.DropPosition
	}
	return ""
}

type ChangeSpaceGroupSortRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeSpaceGroupSortRes) Reset() {
	*x = ChangeSpaceGroupSortRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeSpaceGroupSortRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSpaceGroupSortRes) ProtoMessage() {}

func (x *ChangeSpaceGroupSortRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSpaceGroupSortRes.ProtoReflect.Descriptor instead.
func (*ChangeSpaceGroupSortRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{32}
}

// 创建 Space
type CreateSpaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// Name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 上级group guid
	SpaceGroupGuid string `protobuf:"bytes,4,opt,name=spaceGroupGuid,proto3" json:"spaceGroupGuid,omitempty"`
	// Icon Type
	IconType v1.FILE_IT `protobuf:"varint,5,opt,name=iconType,proto3,enum=common.v1.FILE_IT" json:"iconType,omitempty"`
	// Icon
	Icon string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	// 空间类型
	SpaceType v1.CMN_APP `protobuf:"varint,7,opt,name=spaceType,proto3,enum=common.v1.CMN_APP" json:"spaceType,omitempty"`
	// 空间布局
	SpaceLayout v1.SPC_LAYOUT `protobuf:"varint,8,opt,name=spaceLayout,proto3,enum=common.v1.SPC_LAYOUT" json:"spaceLayout,omitempty"`
	// 可见级别
	Visibility v1.CMN_VISBL `protobuf:"varint,9,opt,name=visibility,proto3,enum=common.v1.CMN_VISBL" json:"visibility,omitempty"`
	// 链接
	Link string `protobuf:"bytes,10,opt,name=link,proto3" json:"link,omitempty"`
	// 封面
	Cover string `protobuf:"bytes,11,opt,name=cover,proto3" json:"cover,omitempty"`
}

func (x *CreateSpaceReq) Reset() {
	*x = CreateSpaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpaceReq) ProtoMessage() {}

func (x *CreateSpaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpaceReq.ProtoReflect.Descriptor instead.
func (*CreateSpaceReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{33}
}

func (x *CreateSpaceReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *CreateSpaceReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSpaceReq) GetSpaceGroupGuid() string {
	if x != nil {
		return x.SpaceGroupGuid
	}
	return ""
}

func (x *CreateSpaceReq) GetIconType() v1.FILE_IT {
	if x != nil {
		return x.IconType
	}
	return v1.FILE_IT_INVALID
}

func (x *CreateSpaceReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CreateSpaceReq) GetSpaceType() v1.CMN_APP {
	if x != nil {
		return x.SpaceType
	}
	return v1.CMN_APP_INVALID
}

func (x *CreateSpaceReq) GetSpaceLayout() v1.SPC_LAYOUT {
	if x != nil {
		return x.SpaceLayout
	}
	return v1.SPC_LAYOUT_EMPTY
}

func (x *CreateSpaceReq) GetVisibility() v1.CMN_VISBL {
	if x != nil {
		return x.Visibility
	}
	return v1.CMN_VISBL_INVALID
}

func (x *CreateSpaceReq) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *CreateSpaceReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

// 创建 Space Res
type CreateSpaceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 创建的 Space
	Info *v1.SpaceInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CreateSpaceRes) Reset() {
	*x = CreateSpaceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpaceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpaceRes) ProtoMessage() {}

func (x *CreateSpaceRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpaceRes.ProtoReflect.Descriptor instead.
func (*CreateSpaceRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{34}
}

func (x *CreateSpaceRes) GetInfo() *v1.SpaceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// 删除 Space
type DeleteSpaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间Guid
	SpaceGuid string `protobuf:"bytes,3,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
}

func (x *DeleteSpaceReq) Reset() {
	*x = DeleteSpaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpaceReq) ProtoMessage() {}

func (x *DeleteSpaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpaceReq.ProtoReflect.Descriptor instead.
func (*DeleteSpaceReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteSpaceReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *DeleteSpaceReq) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

// 删除 Space
type DeleteSpaceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSpaceRes) Reset() {
	*x = DeleteSpaceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpaceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpaceRes) ProtoMessage() {}

func (x *DeleteSpaceRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpaceRes.ProtoReflect.Descriptor instead.
func (*DeleteSpaceRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{36}
}

// 修改 Space
type UpdateSpaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间Guid
	SpaceGuid string `protobuf:"bytes,3,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// 名称
	Name *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// 上级group guid
	SpaceGroupGuid *string `protobuf:"bytes,5,opt,name=spaceGroupGuid,proto3,oneof" json:"spaceGroupGuid,omitempty"`
	// Icon Type
	IconType *v1.FILE_IT `protobuf:"varint,6,opt,name=iconType,proto3,enum=common.v1.FILE_IT,oneof" json:"iconType,omitempty"`
	// Icon
	Icon *string `protobuf:"bytes,7,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	// 收费类型
	ChargeType *v1.SPC_CT `protobuf:"varint,8,opt,name=chargeType,proto3,enum=common.v1.SPC_CT,oneof" json:"chargeType,omitempty"`
	// 原始价格
	OriginPrice *int64 `protobuf:"varint,9,opt,name=originPrice,proto3,oneof" json:"originPrice,omitempty"`
	// 当前价格
	Price *int64 `protobuf:"varint,10,opt,name=price,proto3,oneof" json:"price,omitempty"`
	// 空间简介或描述
	Desc *string `protobuf:"bytes,11,opt,name=desc,proto3,oneof" json:"desc,omitempty"`
	// 空间头图
	HeadImage *string `protobuf:"bytes,12,opt,name=headImage,proto3,oneof" json:"headImage,omitempty"`
	// 空间封面
	Cover *string `protobuf:"bytes,13,opt,name=cover,proto3,oneof" json:"cover,omitempty"`
	// 空间类型
	SpaceType *v1.CMN_APP `protobuf:"varint,14,opt,name=spaceType,proto3,enum=common.v1.CMN_APP,oneof" json:"spaceType,omitempty"`
	// 空间布局
	SpaceLayout *v1.SPC_LAYOUT `protobuf:"varint,15,opt,name=spaceLayout,proto3,enum=common.v1.SPC_LAYOUT,oneof" json:"spaceLayout,omitempty"`
	// 可见级别
	Visibility *v1.CMN_VISBL `protobuf:"varint,16,opt,name=visibility,proto3,enum=common.v1.CMN_VISBL,oneof" json:"visibility,omitempty"`
	// 是否允许查看空间成员
	IsAllowReadMemberList *bool `protobuf:"varint,17,opt,name=isAllowReadMemberList,proto3,oneof" json:"isAllowReadMemberList,omitempty"`
	// 其他option设置
	SpaceOptions []*v1.SpaceOption `protobuf:"bytes,18,rep,name=spaceOptions,proto3" json:"spaceOptions,omitempty"`
	// 访问设置
	Access *v1.SPC_ACS `protobuf:"varint,19,opt,name=access,proto3,enum=common.v1.SPC_ACS,oneof" json:"access,omitempty"`
	// 链接
	Link *string `protobuf:"bytes,20,opt,name=link,proto3,oneof" json:"link,omitempty"`
}

func (x *UpdateSpaceReq) Reset() {
	*x = UpdateSpaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSpaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpaceReq) ProtoMessage() {}

func (x *UpdateSpaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpaceReq.ProtoReflect.Descriptor instead.
func (*UpdateSpaceReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateSpaceReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *UpdateSpaceReq) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *UpdateSpaceReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateSpaceReq) GetSpaceGroupGuid() string {
	if x != nil && x.SpaceGroupGuid != nil {
		return *x.SpaceGroupGuid
	}
	return ""
}

func (x *UpdateSpaceReq) GetIconType() v1.FILE_IT {
	if x != nil && x.IconType != nil {
		return *x.IconType
	}
	return v1.FILE_IT_INVALID
}

func (x *UpdateSpaceReq) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *UpdateSpaceReq) GetChargeType() v1.SPC_CT {
	if x != nil && x.ChargeType != nil {
		return *x.ChargeType
	}
	return v1.SPC_CT_INVALID
}

func (x *UpdateSpaceReq) GetOriginPrice() int64 {
	if x != nil && x.OriginPrice != nil {
		return *x.OriginPrice
	}
	return 0
}

func (x *UpdateSpaceReq) GetPrice() int64 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *UpdateSpaceReq) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *UpdateSpaceReq) GetHeadImage() string {
	if x != nil && x.HeadImage != nil {
		return *x.HeadImage
	}
	return ""
}

func (x *UpdateSpaceReq) GetCover() string {
	if x != nil && x.Cover != nil {
		return *x.Cover
	}
	return ""
}

func (x *UpdateSpaceReq) GetSpaceType() v1.CMN_APP {
	if x != nil && x.SpaceType != nil {
		return *x.SpaceType
	}
	return v1.CMN_APP_INVALID
}

func (x *UpdateSpaceReq) GetSpaceLayout() v1.SPC_LAYOUT {
	if x != nil && x.SpaceLayout != nil {
		return *x.SpaceLayout
	}
	return v1.SPC_LAYOUT_EMPTY
}

func (x *UpdateSpaceReq) GetVisibility() v1.CMN_VISBL {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return v1.CMN_VISBL_INVALID
}

func (x *UpdateSpaceReq) GetIsAllowReadMemberList() bool {
	if x != nil && x.IsAllowReadMemberList != nil {
		return *x.IsAllowReadMemberList
	}
	return false
}

func (x *UpdateSpaceReq) GetSpaceOptions() []*v1.SpaceOption {
	if x != nil {
		return x.SpaceOptions
	}
	return nil
}

func (x *UpdateSpaceReq) GetAccess() v1.SPC_ACS {
	if x != nil && x.Access != nil {
		return *x.Access
	}
	return v1.SPC_ACS_INVALID
}

func (x *UpdateSpaceReq) GetLink() string {
	if x != nil && x.Link != nil {
		return *x.Link
	}
	return ""
}

// 修改 Space
type UpdateSpaceRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSpaceRes) Reset() {
	*x = UpdateSpaceRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSpaceRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpaceRes) ProtoMessage() {}

func (x *UpdateSpaceRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpaceRes.ProtoReflect.Descriptor instead.
func (*UpdateSpaceRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{38}
}

// 修改 Space 顺序
type ChangeSpaceSortReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间Guid
	SpaceGuid string `protobuf:"bytes,2,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// targetFileGuid
	TargetSpaceGuid *string `protobuf:"bytes,3,opt,name=targetSpaceGuid,proto3,oneof" json:"targetSpaceGuid,omitempty"`
	// upward or downward
	DropPosition *string `protobuf:"bytes,4,opt,name=dropPosition,proto3,oneof" json:"dropPosition,omitempty"`
	// parentFileGuid
	ParentSpaceGroupGuid *string `protobuf:"bytes,5,opt,name=parentSpaceGroupGuid,proto3,oneof" json:"parentSpaceGroupGuid,omitempty"`
}

func (x *ChangeSpaceSortReq) Reset() {
	*x = ChangeSpaceSortReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeSpaceSortReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSpaceSortReq) ProtoMessage() {}

func (x *ChangeSpaceSortReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSpaceSortReq.ProtoReflect.Descriptor instead.
func (*ChangeSpaceSortReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{39}
}

func (x *ChangeSpaceSortReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *ChangeSpaceSortReq) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *ChangeSpaceSortReq) GetTargetSpaceGuid() string {
	if x != nil && x.TargetSpaceGuid != nil {
		return *x.TargetSpaceGuid
	}
	return ""
}

func (x *ChangeSpaceSortReq) GetDropPosition() string {
	if x != nil && x.DropPosition != nil {
		return *x.DropPosition
	}
	return ""
}

func (x *ChangeSpaceSortReq) GetParentSpaceGroupGuid() string {
	if x != nil && x.ParentSpaceGroupGuid != nil {
		return *x.ParentSpaceGroupGuid
	}
	return ""
}

// 修改 Space 顺序
type ChangeSpaceSortRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeSpaceSortRes) Reset() {
	*x = ChangeSpaceSortRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeSpaceSortRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSpaceSortRes) ProtoMessage() {}

func (x *ChangeSpaceSortRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSpaceSortRes.ProtoReflect.Descriptor instead.
func (*ChangeSpaceSortRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{40}
}

type SpaceGroupMemberListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间分组guid
	SpaceGroupGuid string `protobuf:"bytes,3,opt,name=spaceGroupGuid,proto3" json:"spaceGroupGuid,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 指定的uid列表
	Uids []int64 `protobuf:"varint,5,rep,packed,name=uids,proto3" json:"uids,omitempty"`
}

func (x *SpaceGroupMemberListReq) Reset() {
	*x = SpaceGroupMemberListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceGroupMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceGroupMemberListReq) ProtoMessage() {}

func (x *SpaceGroupMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceGroupMemberListReq.ProtoReflect.Descriptor instead.
func (*SpaceGroupMemberListReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{41}
}

func (x *SpaceGroupMemberListReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *SpaceGroupMemberListReq) GetSpaceGroupGuid() string {
	if x != nil {
		return x.SpaceGroupGuid
	}
	return ""
}

func (x *SpaceGroupMemberListReq) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SpaceGroupMemberListReq) GetUids() []int64 {
	if x != nil {
		return x.Uids
	}
	return nil
}

type SpaceGroupMemberListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MemberRole 列表
	List []*v1.MemberRole `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SpaceGroupMemberListRes) Reset() {
	*x = SpaceGroupMemberListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceGroupMemberListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceGroupMemberListRes) ProtoMessage() {}

func (x *SpaceGroupMemberListRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceGroupMemberListRes.ProtoReflect.Descriptor instead.
func (*SpaceGroupMemberListRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{42}
}

func (x *SpaceGroupMemberListRes) GetList() []*v1.MemberRole {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SpaceGroupMemberListRes) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AddSpaceGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间分组Guid
	SpaceGroupGuid string `protobuf:"bytes,2,opt,name=spaceGroupGuid,proto3" json:"spaceGroupGuid,omitempty"`
	// 增加的用户
	AddUids []int64 `protobuf:"varint,3,rep,packed,name=addUids,proto3" json:"addUids,omitempty"`
}

func (x *AddSpaceGroupMemberReq) Reset() {
	*x = AddSpaceGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSpaceGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSpaceGroupMemberReq) ProtoMessage() {}

func (x *AddSpaceGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSpaceGroupMemberReq.ProtoReflect.Descriptor instead.
func (*AddSpaceGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{43}
}

func (x *AddSpaceGroupMemberReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *AddSpaceGroupMemberReq) GetSpaceGroupGuid() string {
	if x != nil {
		return x.SpaceGroupGuid
	}
	return ""
}

func (x *AddSpaceGroupMemberReq) GetAddUids() []int64 {
	if x != nil {
		return x.AddUids
	}
	return nil
}

type AddSpaceGroupMemberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSpaceGroupMemberRes) Reset() {
	*x = AddSpaceGroupMemberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSpaceGroupMemberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSpaceGroupMemberRes) ProtoMessage() {}

func (x *AddSpaceGroupMemberRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSpaceGroupMemberRes.ProtoReflect.Descriptor instead.
func (*AddSpaceGroupMemberRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{44}
}

type DeleteSpaceGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间分组Guid
	SpaceGroupGuid string `protobuf:"bytes,3,opt,name=spaceGroupGuid,proto3" json:"spaceGroupGuid,omitempty"`
	// 增加的用户
	DeleteUids []int64 `protobuf:"varint,4,rep,packed,name=deleteUids,proto3" json:"deleteUids,omitempty"`
}

func (x *DeleteSpaceGroupMemberReq) Reset() {
	*x = DeleteSpaceGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpaceGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpaceGroupMemberReq) ProtoMessage() {}

func (x *DeleteSpaceGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpaceGroupMemberReq.ProtoReflect.Descriptor instead.
func (*DeleteSpaceGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteSpaceGroupMemberReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *DeleteSpaceGroupMemberReq) GetSpaceGroupGuid() string {
	if x != nil {
		return x.SpaceGroupGuid
	}
	return ""
}

func (x *DeleteSpaceGroupMemberReq) GetDeleteUids() []int64 {
	if x != nil {
		return x.DeleteUids
	}
	return nil
}

type DeleteSpaceGroupMemberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSpaceGroupMemberRes) Reset() {
	*x = DeleteSpaceGroupMemberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpaceGroupMemberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpaceGroupMemberRes) ProtoMessage() {}

func (x *DeleteSpaceGroupMemberRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpaceGroupMemberRes.ProtoReflect.Descriptor instead.
func (*DeleteSpaceGroupMemberRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{46}
}

type SearchSpaceGroupMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间分组guid
	SpaceGroupGuid string `protobuf:"bytes,3,opt,name=spaceGroupGuid,proto3" json:"spaceGroupGuid,omitempty"`
	// 关键字
	Keyword string `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *SearchSpaceGroupMemberReq) Reset() {
	*x = SearchSpaceGroupMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSpaceGroupMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSpaceGroupMemberReq) ProtoMessage() {}

func (x *SearchSpaceGroupMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSpaceGroupMemberReq.ProtoReflect.Descriptor instead.
func (*SearchSpaceGroupMemberReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{47}
}

func (x *SearchSpaceGroupMemberReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *SearchSpaceGroupMemberReq) GetSpaceGroupGuid() string {
	if x != nil {
		return x.SpaceGroupGuid
	}
	return ""
}

func (x *SearchSpaceGroupMemberReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type SearchSpaceGroupMemberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 列表
	List []*v1.MemberRole `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SearchSpaceGroupMemberRes) Reset() {
	*x = SearchSpaceGroupMemberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSpaceGroupMemberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSpaceGroupMemberRes) ProtoMessage() {}

func (x *SearchSpaceGroupMemberRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSpaceGroupMemberRes.ProtoReflect.Descriptor instead.
func (*SearchSpaceGroupMemberRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{48}
}

func (x *SearchSpaceGroupMemberRes) GetList() []*v1.MemberRole {
	if x != nil {
		return x.List
	}
	return nil
}

type SpaceMemberListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间Guid
	SpaceGuid string `protobuf:"bytes,3,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 指定的uid列表
	Uids []int64 `protobuf:"varint,5,rep,packed,name=uids,proto3" json:"uids,omitempty"`
}

func (x *SpaceMemberListReq) Reset() {
	*x = SpaceMemberListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceMemberListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceMemberListReq) ProtoMessage() {}

func (x *SpaceMemberListReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceMemberListReq.ProtoReflect.Descriptor instead.
func (*SpaceMemberListReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{49}
}

func (x *SpaceMemberListReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *SpaceMemberListReq) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *SpaceMemberListReq) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *SpaceMemberListReq) GetUids() []int64 {
	if x != nil {
		return x.Uids
	}
	return nil
}

type SpaceMemberListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户角色列表
	List []*v1.MemberRole `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SpaceMemberListRes) Reset() {
	*x = SpaceMemberListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceMemberListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceMemberListRes) ProtoMessage() {}

func (x *SpaceMemberListRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceMemberListRes.ProtoReflect.Descriptor instead.
func (*SpaceMemberListRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{50}
}

func (x *SpaceMemberListRes) GetList() []*v1.MemberRole {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SpaceMemberListRes) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AddSpaceMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间Guid
	SpaceGuid string `protobuf:"bytes,3,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// 增加的用户
	AddUids []int64 `protobuf:"varint,4,rep,packed,name=addUids,proto3" json:"addUids,omitempty"`
}

func (x *AddSpaceMemberReq) Reset() {
	*x = AddSpaceMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSpaceMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSpaceMemberReq) ProtoMessage() {}

func (x *AddSpaceMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSpaceMemberReq.ProtoReflect.Descriptor instead.
func (*AddSpaceMemberReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{51}
}

func (x *AddSpaceMemberReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *AddSpaceMemberReq) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *AddSpaceMemberReq) GetAddUids() []int64 {
	if x != nil {
		return x.AddUids
	}
	return nil
}

type AddSpaceMemberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSpaceMemberRes) Reset() {
	*x = AddSpaceMemberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSpaceMemberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSpaceMemberRes) ProtoMessage() {}

func (x *AddSpaceMemberRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSpaceMemberRes.ProtoReflect.Descriptor instead.
func (*AddSpaceMemberRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{52}
}

type DeleteSpaceMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间Guid
	SpaceGuid string `protobuf:"bytes,3,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// 删除的用户
	DeleteUids []int64 `protobuf:"varint,4,rep,packed,name=deleteUids,proto3" json:"deleteUids,omitempty"`
}

func (x *DeleteSpaceMemberReq) Reset() {
	*x = DeleteSpaceMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpaceMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpaceMemberReq) ProtoMessage() {}

func (x *DeleteSpaceMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpaceMemberReq.ProtoReflect.Descriptor instead.
func (*DeleteSpaceMemberReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteSpaceMemberReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *DeleteSpaceMemberReq) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *DeleteSpaceMemberReq) GetDeleteUids() []int64 {
	if x != nil {
		return x.DeleteUids
	}
	return nil
}

type DeleteSpaceMemberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSpaceMemberRes) Reset() {
	*x = DeleteSpaceMemberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpaceMemberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpaceMemberRes) ProtoMessage() {}

func (x *DeleteSpaceMemberRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpaceMemberRes.ProtoReflect.Descriptor instead.
func (*DeleteSpaceMemberRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{54}
}

type QuitSpaceMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 需要退出的用户UID
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 空间Guid
	SpaceGuid string `protobuf:"bytes,3,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
}

func (x *QuitSpaceMemberReq) Reset() {
	*x = QuitSpaceMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitSpaceMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitSpaceMemberReq) ProtoMessage() {}

func (x *QuitSpaceMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitSpaceMemberReq.ProtoReflect.Descriptor instead.
func (*QuitSpaceMemberReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{55}
}

func (x *QuitSpaceMemberReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *QuitSpaceMemberReq) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

type QuitSpaceMemberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QuitSpaceMemberRes) Reset() {
	*x = QuitSpaceMemberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuitSpaceMemberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuitSpaceMemberRes) ProtoMessage() {}

func (x *QuitSpaceMemberRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuitSpaceMemberRes.ProtoReflect.Descriptor instead.
func (*QuitSpaceMemberRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{56}
}

type SearchSpaceMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 空间Guid
	SpaceGuid string `protobuf:"bytes,2,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// 关键字
	Keyword string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *SearchSpaceMemberReq) Reset() {
	*x = SearchSpaceMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSpaceMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSpaceMemberReq) ProtoMessage() {}

func (x *SearchSpaceMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSpaceMemberReq.ProtoReflect.Descriptor instead.
func (*SearchSpaceMemberReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{57}
}

func (x *SearchSpaceMemberReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *SearchSpaceMemberReq) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *SearchSpaceMemberReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type SearchSpaceMemberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// MemberRole 列表
	List []*v1.MemberRole `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SearchSpaceMemberRes) Reset() {
	*x = SearchSpaceMemberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSpaceMemberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSpaceMemberRes) ProtoMessage() {}

func (x *SearchSpaceMemberRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSpaceMemberRes.ProtoReflect.Descriptor instead.
func (*SearchSpaceMemberRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{58}
}

func (x *SearchSpaceMemberRes) GetList() []*v1.MemberRole {
	if x != nil {
		return x.List
	}
	return nil
}

type AuditApplySpaceMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 目标guid
	TargetGuid string `protobuf:"bytes,3,opt,name=targetGuid,proto3" json:"targetGuid,omitempty"`
	// 审核类型
	AuditType v1.AUDIT_TYPE `protobuf:"varint,4,opt,name=auditType,proto3,enum=common.v1.AUDIT_TYPE" json:"auditType,omitempty"`
	// 拒绝原因
	Reason string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *AuditApplySpaceMemberReq) Reset() {
	*x = AuditApplySpaceMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditApplySpaceMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditApplySpaceMemberReq) ProtoMessage() {}

func (x *AuditApplySpaceMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditApplySpaceMemberReq.ProtoReflect.Descriptor instead.
func (*AuditApplySpaceMemberReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{59}
}

func (x *AuditApplySpaceMemberReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *AuditApplySpaceMemberReq) GetTargetGuid() string {
	if x != nil {
		return x.TargetGuid
	}
	return ""
}

func (x *AuditApplySpaceMemberReq) GetAuditType() v1.AUDIT_TYPE {
	if x != nil {
		return x.AuditType
	}
	return v1.AUDIT_TYPE_INVALID
}

func (x *AuditApplySpaceMemberReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type AuditApplySpaceMemberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用于判断是否直接加入到空间，刷新空间数据
	BizCode int64 `protobuf:"varint,1,opt,name=bizCode,proto3" json:"bizCode,omitempty"`
}

func (x *AuditApplySpaceMemberRes) Reset() {
	*x = AuditApplySpaceMemberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditApplySpaceMemberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditApplySpaceMemberRes) ProtoMessage() {}

func (x *AuditApplySpaceMemberRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditApplySpaceMemberRes.ProtoReflect.Descriptor instead.
func (*AuditApplySpaceMemberRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{60}
}

func (x *AuditApplySpaceMemberRes) GetBizCode() int64 {
	if x != nil {
		return x.BizCode
	}
	return 0
}

type AuditListSpaceMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 目标guid
	TargetGuid string `protobuf:"bytes,2,opt,name=targetGuid,proto3" json:"targetGuid,omitempty"`
	// 审核类型
	AuditType v1.AUDIT_TYPE `protobuf:"varint,3,opt,name=auditType,proto3,enum=common.v1.AUDIT_TYPE" json:"auditType,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *AuditListSpaceMemberReq) Reset() {
	*x = AuditListSpaceMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditListSpaceMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditListSpaceMemberReq) ProtoMessage() {}

func (x *AuditListSpaceMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditListSpaceMemberReq.ProtoReflect.Descriptor instead.
func (*AuditListSpaceMemberReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{61}
}

func (x *AuditListSpaceMemberReq) GetTargetGuid() string {
	if x != nil {
		return x.TargetGuid
	}
	return ""
}

func (x *AuditListSpaceMemberReq) GetAuditType() v1.AUDIT_TYPE {
	if x != nil {
		return x.AuditType
	}
	return v1.AUDIT_TYPE_INVALID
}

func (x *AuditListSpaceMemberReq) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AuditListSpaceMemberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// AuditMember
	List []*AuditMember `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *AuditListSpaceMemberRes) Reset() {
	*x = AuditListSpaceMemberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditListSpaceMemberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditListSpaceMemberRes) ProtoMessage() {}

func (x *AuditListSpaceMemberRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditListSpaceMemberRes.ProtoReflect.Descriptor instead.
func (*AuditListSpaceMemberRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{62}
}

func (x *AuditListSpaceMemberRes) GetList() []*AuditMember {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AuditListSpaceMemberRes) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type AuditMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 审核记录id
	AuditId int64 `protobuf:"varint,1,opt,name=auditId,proto3" json:"auditId,omitempty"`
	// 用户uid
	Uid int64 `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// 用户昵称
	Nickname string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 用户头像
	Avatar string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 拒绝原因
	Reason string `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *AuditMember) Reset() {
	*x = AuditMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditMember) ProtoMessage() {}

func (x *AuditMember) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditMember.ProtoReflect.Descriptor instead.
func (*AuditMember) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{63}
}

func (x *AuditMember) GetAuditId() int64 {
	if x != nil {
		return x.AuditId
	}
	return 0
}

func (x *AuditMember) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AuditMember) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AuditMember) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AuditMember) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type AuditPassSpaceMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作记录id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 目标guid
	TargetGuid string `protobuf:"bytes,3,opt,name=targetGuid,proto3" json:"targetGuid,omitempty"`
	// 审核类型
	AuditType v1.AUDIT_TYPE `protobuf:"varint,4,opt,name=auditType,proto3,enum=common.v1.AUDIT_TYPE" json:"auditType,omitempty"`
	// 操作人uid
	OperateUid int64 `protobuf:"varint,5,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 操作原因
	OpReason string `protobuf:"bytes,6,opt,name=opReason,proto3" json:"opReason,omitempty"`
}

func (x *AuditPassSpaceMemberReq) Reset() {
	*x = AuditPassSpaceMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditPassSpaceMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditPassSpaceMemberReq) ProtoMessage() {}

func (x *AuditPassSpaceMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditPassSpaceMemberReq.ProtoReflect.Descriptor instead.
func (*AuditPassSpaceMemberReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{64}
}

func (x *AuditPassSpaceMemberReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AuditPassSpaceMemberReq) GetTargetGuid() string {
	if x != nil {
		return x.TargetGuid
	}
	return ""
}

func (x *AuditPassSpaceMemberReq) GetAuditType() v1.AUDIT_TYPE {
	if x != nil {
		return x.AuditType
	}
	return v1.AUDIT_TYPE_INVALID
}

func (x *AuditPassSpaceMemberReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *AuditPassSpaceMemberReq) GetOpReason() string {
	if x != nil {
		return x.OpReason
	}
	return ""
}

type AuditPassSpaceMemberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuditPassSpaceMemberRes) Reset() {
	*x = AuditPassSpaceMemberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditPassSpaceMemberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditPassSpaceMemberRes) ProtoMessage() {}

func (x *AuditPassSpaceMemberRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditPassSpaceMemberRes.ProtoReflect.Descriptor instead.
func (*AuditPassSpaceMemberRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{65}
}

type AuditRejectSpaceMemberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作记录id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 目标guid
	TargetGuid string `protobuf:"bytes,3,opt,name=targetGuid,proto3" json:"targetGuid,omitempty"`
	// 审核类型
	AuditType v1.AUDIT_TYPE `protobuf:"varint,4,opt,name=auditType,proto3,enum=common.v1.AUDIT_TYPE" json:"auditType,omitempty"`
	// 操作人uid
	OperateUid int64 `protobuf:"varint,5,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 操作原因
	OpReason string `protobuf:"bytes,6,opt,name=opReason,proto3" json:"opReason,omitempty"`
}

func (x *AuditRejectSpaceMemberReq) Reset() {
	*x = AuditRejectSpaceMemberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditRejectSpaceMemberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditRejectSpaceMemberReq) ProtoMessage() {}

func (x *AuditRejectSpaceMemberReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditRejectSpaceMemberReq.ProtoReflect.Descriptor instead.
func (*AuditRejectSpaceMemberReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{66}
}

func (x *AuditRejectSpaceMemberReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AuditRejectSpaceMemberReq) GetTargetGuid() string {
	if x != nil {
		return x.TargetGuid
	}
	return ""
}

func (x *AuditRejectSpaceMemberReq) GetAuditType() v1.AUDIT_TYPE {
	if x != nil {
		return x.AuditType
	}
	return v1.AUDIT_TYPE_INVALID
}

func (x *AuditRejectSpaceMemberReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *AuditRejectSpaceMemberReq) GetOpReason() string {
	if x != nil {
		return x.OpReason
	}
	return ""
}

type AuditRejectSpaceMemberRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuditRejectSpaceMemberRes) Reset() {
	*x = AuditRejectSpaceMemberRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditRejectSpaceMemberRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditRejectSpaceMemberRes) ProtoMessage() {}

func (x *AuditRejectSpaceMemberRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditRejectSpaceMemberRes.ProtoReflect.Descriptor instead.
func (*AuditRejectSpaceMemberRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{67}
}

type AuditMapByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 审核记录id列表
	AuditIds []int64 `protobuf:"varint,1,rep,packed,name=auditIds,proto3" json:"auditIds,omitempty"`
}

func (x *AuditMapByIdsReq) Reset() {
	*x = AuditMapByIdsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditMapByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditMapByIdsReq) ProtoMessage() {}

func (x *AuditMapByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditMapByIdsReq.ProtoReflect.Descriptor instead.
func (*AuditMapByIdsReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{68}
}

func (x *AuditMapByIdsReq) GetAuditIds() []int64 {
	if x != nil {
		return x.AuditIds
	}
	return nil
}

type AuditMapByIdsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 审核记录字典
	AuditMap map[int64]*AuditIndex `protobuf:"bytes,1,rep,name=auditMap,proto3" json:"auditMap,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AuditMapByIdsRes) Reset() {
	*x = AuditMapByIdsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditMapByIdsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditMapByIdsRes) ProtoMessage() {}

func (x *AuditMapByIdsRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditMapByIdsRes.ProtoReflect.Descriptor instead.
func (*AuditMapByIdsRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{69}
}

func (x *AuditMapByIdsRes) GetAuditMap() map[int64]*AuditIndex {
	if x != nil {
		return x.AuditMap
	}
	return nil
}

type AuditIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 审核记录id
	AuditId int64 `protobuf:"varint,1,opt,name=auditId,proto3" json:"auditId,omitempty"`
	// 审核记录状态
	Status v1.AUDIT_STATUS `protobuf:"varint,2,opt,name=status,proto3,enum=common.v1.AUDIT_STATUS" json:"status,omitempty"`
	// 原因
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	// 操作原因
	OpReason string `protobuf:"bytes,4,opt,name=opReason,proto3" json:"opReason,omitempty"`
}

func (x *AuditIndex) Reset() {
	*x = AuditIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditIndex) ProtoMessage() {}

func (x *AuditIndex) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditIndex.ProtoReflect.Descriptor instead.
func (*AuditIndex) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{70}
}

func (x *AuditIndex) GetAuditId() int64 {
	if x != nil {
		return x.AuditId
	}
	return 0
}

func (x *AuditIndex) GetStatus() v1.AUDIT_STATUS {
	if x != nil {
		return x.Status
	}
	return v1.AUDIT_STATUS_INVALID
}

func (x *AuditIndex) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AuditIndex) GetOpReason() string {
	if x != nil {
		return x.OpReason
	}
	return ""
}

type GetSpacePermissionByUidReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operateUid,proto3" json:"operateUid,omitempty"`
	// 目标guid
	TargetGuid string `protobuf:"bytes,2,opt,name=targetGuid,proto3" json:"targetGuid,omitempty"`
	// Guid类型
	GuidType v1.CMN_GUID `protobuf:"varint,3,opt,name=guidType,proto3,enum=common.v1.CMN_GUID" json:"guidType,omitempty"`
}

func (x *GetSpacePermissionByUidReq) Reset() {
	*x = GetSpacePermissionByUidReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpacePermissionByUidReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpacePermissionByUidReq) ProtoMessage() {}

func (x *GetSpacePermissionByUidReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpacePermissionByUidReq.ProtoReflect.Descriptor instead.
func (*GetSpacePermissionByUidReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{71}
}

func (x *GetSpacePermissionByUidReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *GetSpacePermissionByUidReq) GetTargetGuid() string {
	if x != nil {
		return x.TargetGuid
	}
	return ""
}

func (x *GetSpacePermissionByUidReq) GetGuidType() v1.CMN_GUID {
	if x != nil {
		return x.GuidType
	}
	return v1.CMN_GUID_INVALID
}

type GetSpacePermissionByUidRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否可以查看
	IsAllowManage bool `protobuf:"varint,1,opt,name=isAllowManage,proto3" json:"isAllowManage,omitempty"`
	// 是否可以查看
	IsAllowView bool `protobuf:"varint,2,opt,name=isAllowView,proto3" json:"isAllowView,omitempty"`
	// 是否可以写入
	IsAllowWrite bool `protobuf:"varint,3,opt,name=isAllowWrite,proto3" json:"isAllowWrite,omitempty"`
	// 是否可以写入
	IsAllowCreateFile bool `protobuf:"varint,4,opt,name=isAllowCreateFile,proto3" json:"isAllowCreateFile,omitempty"`
	// 是否为空间成员
	IsMember bool `protobuf:"varint,5,opt,name=isMember,proto3" json:"isMember,omitempty"`
	// 审核状态
	AuditStatus v1.AUDIT_STATUS `protobuf:"varint,6,opt,name=auditStatus,proto3,enum=common.v1.AUDIT_STATUS" json:"auditStatus,omitempty"`
	// 是否允许查看成员列表
	IsAllowReadMemberList bool `protobuf:"varint,7,opt,name=isAllowReadMemberList,proto3" json:"isAllowReadMemberList,omitempty"`
	// 消息体
	//
	// Types that are assignable to Payload:
	//	*GetSpacePermissionByUidRes_Article
	//	*GetSpacePermissionByUidRes_Question
	Payload isGetSpacePermissionByUidRes_Payload `protobuf_oneof:"payload"`
}

func (x *GetSpacePermissionByUidRes) Reset() {
	*x = GetSpacePermissionByUidRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpacePermissionByUidRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpacePermissionByUidRes) ProtoMessage() {}

func (x *GetSpacePermissionByUidRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpacePermissionByUidRes.ProtoReflect.Descriptor instead.
func (*GetSpacePermissionByUidRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{72}
}

func (x *GetSpacePermissionByUidRes) GetIsAllowManage() bool {
	if x != nil {
		return x.IsAllowManage
	}
	return false
}

func (x *GetSpacePermissionByUidRes) GetIsAllowView() bool {
	if x != nil {
		return x.IsAllowView
	}
	return false
}

func (x *GetSpacePermissionByUidRes) GetIsAllowWrite() bool {
	if x != nil {
		return x.IsAllowWrite
	}
	return false
}

func (x *GetSpacePermissionByUidRes) GetIsAllowCreateFile() bool {
	if x != nil {
		return x.IsAllowCreateFile
	}
	return false
}

func (x *GetSpacePermissionByUidRes) GetIsMember() bool {
	if x != nil {
		return x.IsMember
	}
	return false
}

func (x *GetSpacePermissionByUidRes) GetAuditStatus() v1.AUDIT_STATUS {
	if x != nil {
		return x.AuditStatus
	}
	return v1.AUDIT_STATUS_INVALID
}

func (x *GetSpacePermissionByUidRes) GetIsAllowReadMemberList() bool {
	if x != nil {
		return x.IsAllowReadMemberList
	}
	return false
}

func (m *GetSpacePermissionByUidRes) GetPayload() isGetSpacePermissionByUidRes_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *GetSpacePermissionByUidRes) GetArticle() *SpaceArticlePermission {
	if x, ok := x.GetPayload().(*GetSpacePermissionByUidRes_Article); ok {
		return x.Article
	}
	return nil
}

func (x *GetSpacePermissionByUidRes) GetQuestion() *SpaceQuestionPermission {
	if x, ok := x.GetPayload().(*GetSpacePermissionByUidRes_Question); ok {
		return x.Question
	}
	return nil
}

type isGetSpacePermissionByUidRes_Payload interface {
	isGetSpacePermissionByUidRes_Payload()
}

type GetSpacePermissionByUidRes_Article struct {
	// 文件
	Article *SpaceArticlePermission `protobuf:"bytes,101,opt,name=article,proto3,oneof"`
}

type GetSpacePermissionByUidRes_Question struct {
	// 问题
	Question *SpaceQuestionPermission `protobuf:"bytes,102,opt,name=question,proto3,oneof"`
}

func (*GetSpacePermissionByUidRes_Article) isGetSpacePermissionByUidRes_Payload() {}

func (*GetSpacePermissionByUidRes_Question) isGetSpacePermissionByUidRes_Payload() {}

type SpaceArticlePermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否允许创建
	IsAllowCreateFile bool `protobuf:"varint,1,opt,name=isAllowCreateFile,proto3" json:"isAllowCreateFile,omitempty"`
}

func (x *SpaceArticlePermission) Reset() {
	*x = SpaceArticlePermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceArticlePermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceArticlePermission) ProtoMessage() {}

func (x *SpaceArticlePermission) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceArticlePermission.ProtoReflect.Descriptor instead.
func (*SpaceArticlePermission) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{73}
}

func (x *SpaceArticlePermission) GetIsAllowCreateFile() bool {
	if x != nil {
		return x.IsAllowCreateFile
	}
	return false
}

type SpaceQuestionPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 是否允许创建
	IsAllowCreateFile bool `protobuf:"varint,1,opt,name=isAllowCreateFile,proto3" json:"isAllowCreateFile,omitempty"`
}

func (x *SpaceQuestionPermission) Reset() {
	*x = SpaceQuestionPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceQuestionPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceQuestionPermission) ProtoMessage() {}

func (x *SpaceQuestionPermission) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceQuestionPermission.ProtoReflect.Descriptor instead.
func (*SpaceQuestionPermission) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{74}
}

func (x *SpaceQuestionPermission) GetIsAllowCreateFile() bool {
	if x != nil {
		return x.IsAllowCreateFile
	}
	return false
}

type TotalInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户ID
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *TotalInfoReq) Reset() {
	*x = TotalInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalInfoReq) ProtoMessage() {}

func (x *TotalInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalInfoReq.ProtoReflect.Descriptor instead.
func (*TotalInfoReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{75}
}

func (x *TotalInfoReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

// 统计信息
type TotalInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 空间数
	SpaceCnt int64 `protobuf:"varint,1,opt,name=spaceCnt,proto3" json:"spaceCnt,omitempty"`
}

func (x *TotalInfoRes) Reset() {
	*x = TotalInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalInfoRes) ProtoMessage() {}

func (x *TotalInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalInfoRes.ProtoReflect.Descriptor instead.
func (*TotalInfoRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{76}
}

func (x *TotalInfoRes) GetSpaceCnt() int64 {
	if x != nil {
		return x.SpaceCnt
	}
	return 0
}

type EmojiListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *EmojiListReq) Reset() {
	*x = EmojiListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmojiListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmojiListReq) ProtoMessage() {}

func (x *EmojiListReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmojiListReq.ProtoReflect.Descriptor instead.
func (*EmojiListReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{77}
}

func (x *EmojiListReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type SpaceEmojiList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 空间guid
	SpaceGuid string `protobuf:"bytes,1,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// emoji列表
	EmojiList []*v1.EmojiInfo `protobuf:"bytes,2,rep,name=emojiList,proto3" json:"emojiList,omitempty"`
}

func (x *SpaceEmojiList) Reset() {
	*x = SpaceEmojiList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceEmojiList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceEmojiList) ProtoMessage() {}

func (x *SpaceEmojiList) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceEmojiList.ProtoReflect.Descriptor instead.
func (*SpaceEmojiList) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{78}
}

func (x *SpaceEmojiList) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *SpaceEmojiList) GetEmojiList() []*v1.EmojiInfo {
	if x != nil {
		return x.EmojiList
	}
	return nil
}

type EmojiListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 某个空间emoji列表
	SpaceList []*SpaceEmojiList `protobuf:"bytes,1,rep,name=spaceList,proto3" json:"spaceList,omitempty"`
}

func (x *EmojiListRes) Reset() {
	*x = EmojiListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmojiListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmojiListRes) ProtoMessage() {}

func (x *EmojiListRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmojiListRes.ProtoReflect.Descriptor instead.
func (*EmojiListRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{79}
}

func (x *EmojiListRes) GetSpaceList() []*SpaceEmojiList {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

type GenSpaceAccessOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// uid
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GenSpaceAccessOrderReq) Reset() {
	*x = GenSpaceAccessOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenSpaceAccessOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenSpaceAccessOrderReq) ProtoMessage() {}

func (x *GenSpaceAccessOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenSpaceAccessOrderReq.ProtoReflect.Descriptor instead.
func (*GenSpaceAccessOrderReq) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{80}
}

func (x *GenSpaceAccessOrderReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GenSpaceAccessOrderRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 折扣，比如0.9即9折扣,TODO 是否替换成int32？
	Discount float32 `protobuf:"fixed32,1,opt,name=discount,proto3" json:"discount,omitempty"`
	// 原价
	OriginalAmount int64 `protobuf:"varint,2,opt,name=originalAmount,proto3" json:"originalAmount,omitempty"`
	// 折扣金额
	DiscountAmount int64 `protobuf:"varint,3,opt,name=discountAmount,proto3" json:"discountAmount,omitempty"`
	// 计算出来的：交易金额 = 原价 - 折扣金额
	TradeAmount int64 `protobuf:"varint,4,opt,name=tradeAmount,proto3" json:"tradeAmount,omitempty"`
	// 货币单位
	Currency string `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	// 货币精度
	CurrencyPrecision int32 `protobuf:"varint,6,opt,name=currencyPrecision,proto3" json:"currencyPrecision,omitempty"`
	// 货币符号
	CurrencySymbol string `protobuf:"bytes,7,opt,name=currencySymbol,proto3" json:"currencySymbol,omitempty"`
	// 订单sn
	OrderSn string `protobuf:"bytes,8,opt,name=orderSn,proto3" json:"orderSn,omitempty"`
}

func (x *GenSpaceAccessOrderRes) Reset() {
	*x = GenSpaceAccessOrderRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_space_v1_space_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenSpaceAccessOrderRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenSpaceAccessOrderRes) ProtoMessage() {}

func (x *GenSpaceAccessOrderRes) ProtoReflect() protoreflect.Message {
	mi := &file_space_v1_space_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenSpaceAccessOrderRes.ProtoReflect.Descriptor instead.
func (*GenSpaceAccessOrderRes) Descriptor() ([]byte, []int) {
	return file_space_v1_space_proto_rawDescGZIP(), []int{81}
}

func (x *GenSpaceAccessOrderRes) GetDiscount() float32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *GenSpaceAccessOrderRes) GetOriginalAmount() int64 {
	if x != nil {
		return x.OriginalAmount
	}
	return 0
}

func (x *GenSpaceAccessOrderRes) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *GenSpaceAccessOrderRes) GetTradeAmount() int64 {
	if x != nil {
		return x.TradeAmount
	}
	return 0
}

func (x *GenSpaceAccessOrderRes) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GenSpaceAccessOrderRes) GetCurrencyPrecision() int32 {
	if x != nil {
		return x.CurrencyPrecision
	}
	return 0
}

func (x *GenSpaceAccessOrderRes) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

func (x *GenSpaceAccessOrderRes) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

var File_space_v1_space_proto protoreflect.FileDescriptor

var file_space_v1_space_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75,
	0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x0e, 0x54, 0x72, 0x65, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x56, 0x49, 0x53, 0x42, 0x4c, 0x52, 0x0a, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x53, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x22, 0xb1, 0x05, 0x0a, 0x09, 0x54, 0x72, 0x65,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x47, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x09, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x41, 0x50,
	0x50, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x0b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x50,
	0x43, 0x2e, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x52, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x56, 0x49, 0x53, 0x42, 0x4c, 0x52,
	0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x50, 0x43, 0x2e, 0x43, 0x54, 0x52, 0x0a, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x53, 0x65, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x50, 0x43, 0x2e, 0x41, 0x43, 0x53, 0x52, 0x06, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x32, 0x0a, 0x09, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x55, 0x69, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x65, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x31, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72,
	0x65, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x59, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08,
	0x01, 0x52, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x73, 0x22, 0x40, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0xe8, 0x01, 0x0a, 0x0e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x56, 0x49, 0x53, 0x42, 0x4c, 0x52, 0x0a,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x22, 0x55, 0x0a, 0x0c, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69,
	0x64, 0x22, 0x42, 0x0a, 0x0c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5c, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0a, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x00, 0x52, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75,
	0x69, 0x64, 0x73, 0x22, 0x48, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x33, 0x0a,
	0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x73, 0x42,
	0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x38, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x75, 0x69, 0x64, 0x73, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x73, 0x22, 0x43, 0x0a, 0x0f,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x26, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x43, 0x0a, 0x0f, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x55, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x72, 0x65, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x74,
	0x72, 0x65, 0x65, 0x22, 0x29, 0x0a, 0x07, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x22, 0x3a,
	0x0a, 0x07, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x72, 0x65,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x74, 0x72, 0x65, 0x65, 0x22, 0xe5, 0x02, 0x0a, 0x11, 0x41,
	0x6e, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x49, 0x54, 0x52, 0x08,
	0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x74, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x12, 0x34, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x56, 0x49, 0x53, 0x42, 0x4c, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x53, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x53, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x12, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x50, 0x43, 0x2e, 0x41, 0x43, 0x53, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0xd5, 0x03, 0x0a, 0x0c, 0x41, 0x6e, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x69,
	0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x49,
	0x54, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x30, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x4d, 0x4e, 0x2e, 0x41, 0x50, 0x50, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x50, 0x43, 0x2e, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x52, 0x0b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x56,
	0x49, 0x53, 0x42, 0x4c, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x65, 0x74,
	0x12, 0x2a, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x50, 0x43,
	0x2e, 0x41, 0x43, 0x53, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a, 0x0c,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x8b, 0x02, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x12, 0x27, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x49, 0x54, 0x52, 0x08,
	0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0a,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e,
	0x2e, 0x56, 0x49, 0x53, 0x42, 0x4c, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x34, 0x0a, 0x15, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x61,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x12,
	0x2c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x56, 0x0a,
	0x11, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x47, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x47, 0x75, 0x69, 0x64, 0x22, 0xfd, 0x01, 0x0a, 0x11, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x67,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x49, 0x54, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x56, 0x49, 0x53, 0x42, 0x4c, 0x52, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x43, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x43, 0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x47, 0x75, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x22, 0xb3, 0x02,
	0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x2f,
	0x0a, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x49, 0x54, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x56, 0x49, 0x53, 0x42,
	0x4c, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x34, 0x0a,
	0x15, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x17, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12,
	0x2f, 0x0a, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x32, 0x0a, 0x14, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x47, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x72, 0x6f, 0x70,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x22, 0x96, 0x03, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2e, 0x0a,
	0x08, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45,
	0x2e, 0x49, 0x54, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x30, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x41, 0x50, 0x50, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x50, 0x43, 0x2e, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x52,
	0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x34, 0x0a, 0x0a,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e,
	0x2e, 0x56, 0x49, 0x53, 0x42, 0x4c, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0x3a, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x60, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x55, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x22, 0x8d, 0x08, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x27, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75,
	0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x49, 0x54, 0x48, 0x02, 0x52, 0x08, 0x69,
	0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x50, 0x43, 0x2e, 0x43, 0x54, 0x48, 0x04, 0x52, 0x0a, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x06, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x04, 0x64,
	0x65, 0x73, 0x63, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x08, 0x52, 0x09, 0x68, 0x65, 0x61,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x41, 0x50, 0x50, 0x48, 0x0a, 0x52, 0x09, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x50, 0x43,
	0x2e, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x48, 0x0b, 0x52, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x56, 0x49,
	0x53, 0x42, 0x4c, 0x48, 0x0c, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x15, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x0d, 0x52, 0x15, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x3a, 0x0a, 0x0c, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x50, 0x43, 0x2e, 0x41, 0x43, 0x53, 0x48,
	0x0e, 0x52, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69,
	0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x18,
	0x0a, 0x16, 0x5f, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x10, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x22, 0xb3,
	0x02, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x47, 0x75, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x64, 0x72,
	0x6f, 0x70, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a,
	0x14, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x47, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x14, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47,
	0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64,
	0x72, 0x6f, 0x70, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x17, 0x0a, 0x15, 0x5f,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x47, 0x75, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x17, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12,
	0x2f, 0x0a, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x75, 0x69, 0x64, 0x73, 0x22, 0x7b, 0x0a, 0x17, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x55, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x47, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x47, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x55, 0x69, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x03, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10,
	0x64, 0x52, 0x07, 0x61, 0x64, 0x64, 0x55, 0x69, 0x64, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x41, 0x64,
	0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55,
	0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x69, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08,
	0x01, 0x10, 0x64, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x69, 0x64, 0x73, 0x22,
	0x1b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x98, 0x01, 0x0a,
	0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x55, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x47, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x46, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0xaf, 0x01, 0x0a, 0x12, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12,
	0x25, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x75, 0x69, 0x64,
	0x73, 0x22, 0x76, 0x0a, 0x12, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x80, 0x01, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12,
	0x25, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x55, 0x69, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08,
	0x01, 0x10, 0x64, 0x52, 0x07, 0x61, 0x64, 0x64, 0x55, 0x69, 0x64, 0x73, 0x22, 0x13, 0x0a, 0x11,
	0x41, 0x64, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69,
	0x64, 0x12, 0x2a, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x69, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x03, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x10,
	0x64, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x69, 0x64, 0x73, 0x22, 0x16, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x12, 0x51, 0x75, 0x69, 0x74, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20,
	0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x51, 0x75, 0x69, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x41, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x18, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x27, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x55, 0x44, 0x49, 0x54, 0x2e, 0x54, 0x59,
	0x50, 0x45, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x08, 0x03, 0x52, 0x09, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x34, 0x0a, 0x18, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x69, 0x7a, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x69,
	0x7a, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x17, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x75, 0x69,
	0x64, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x55, 0x44, 0x49, 0x54, 0x2e, 0x54, 0x59, 0x50, 0x45, 0x52, 0x09, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7b, 0x0a,
	0x17, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x22, 0xcc, 0x01, 0x0a, 0x17, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x55, 0x44, 0x49, 0x54, 0x2e, 0x54, 0x59, 0x50,
	0x45, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x19, 0x0a, 0x17, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x61, 0x73, 0x73, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0xce, 0x01, 0x0a,
	0x19, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x55, 0x44, 0x49, 0x54, 0x2e, 0x54, 0x59, 0x50, 0x45, 0x52, 0x09, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x1b, 0x0a,
	0x19, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x10, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x24,
	0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x74, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x49, 0x64, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x10, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x61,
	0x70, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x08, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x4d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x42,
	0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x1a,
	0x51, 0x0a, 0x0d, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x8b, 0x01, 0x0a, 0x0a, 0x41, 0x75, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x55, 0x44, 0x49, 0x54, 0x2e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x22, 0x8d, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12,
	0x2f, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d,
	0x4e, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x08, 0x67, 0x75, 0x69, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xcd, 0x03, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x56, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x56, 0x69, 0x65, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x57, 0x72, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69,
	0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69,
	0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x55, 0x44, 0x49, 0x54, 0x2e, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x34, 0x0a, 0x15, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x61, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x15, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x46, 0x0a, 0x16, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x47, 0x0a, 0x17, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x22, 0x20, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6e, 0x74, 0x22,
	0x29, 0x0a, 0x0c, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x62, 0x0a, 0x0e, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x09, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x46,
	0x0a, 0x0c, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x36,
	0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0xb2, 0x02, 0x0a, 0x16,
	0x47, 0x65, 0x6e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x2c, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e,
	0x32, 0xd3, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x12,
	0x4d, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x50,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x12, 0x4a, 0x0a, 0x0e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x12, 0x50,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x12, 0x5c, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x5c,
	0x0a, 0x14, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x23, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x16, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12,
	0x41, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12,
	0x47, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x12, 0x4d,
	0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x6f, 0x72,
	0x74, 0x12, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a,
	0x0f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a,
	0x0f, 0x51, 0x75, 0x69, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x69, 0x74,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1c,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x69, 0x74, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x11,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x12, 0x5f, 0x0a, 0x15, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x12, 0x5c, 0x0a, 0x14, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x12, 0x5c, 0x0a, 0x14, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x61, 0x73, 0x73, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x61, 0x73, 0x73, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x62,
	0x0a, 0x16, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x12, 0x47, 0x0a, 0x0d, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x42, 0x79,
	0x49, 0x64, 0x73, 0x12, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x4d, 0x61, 0x70, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x12, 0x65, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x55, 0x69, 0x64, 0x12, 0x24, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x55, 0x69, 0x64, 0x52,
	0x65, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12,
	0x3b, 0x0a, 0x09, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x13,
	0x47, 0x65, 0x6e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x6e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x6e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x2e, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x42, 0x7a, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1d, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x2f,
	0x70, 0x62, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02, 0x08, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x08, 0x53, 0x70, 0x61, 0x63, 0x65, 0x5c, 0x56, 0x31, 0xe2,
	0x02, 0x14, 0x53, 0x70, 0x61, 0x63, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_space_v1_space_proto_rawDescOnce sync.Once
	file_space_v1_space_proto_rawDescData = file_space_v1_space_proto_rawDesc
)

func file_space_v1_space_proto_rawDescGZIP() []byte {
	file_space_v1_space_proto_rawDescOnce.Do(func() {
		file_space_v1_space_proto_rawDescData = protoimpl.X.CompressGZIP(file_space_v1_space_proto_rawDescData)
	})
	return file_space_v1_space_proto_rawDescData
}

var file_space_v1_space_proto_msgTypes = make([]protoimpl.MessageInfo, 83)
var file_space_v1_space_proto_goTypes = []interface{}{
	(*MemberStatus)(nil),               // 0: space.v1.MemberStatus
	(*TreeSpaceGroup)(nil),             // 1: space.v1.TreeSpaceGroup
	(*TreeSpace)(nil),                  // 2: space.v1.TreeSpace
	(*ListSpaceAndGroupReq)(nil),       // 3: space.v1.ListSpaceAndGroupReq
	(*ListSpaceAndGroupRes)(nil),       // 4: space.v1.ListSpaceAndGroupRes
	(*GetMemberStatusReq)(nil),         // 5: space.v1.GetMemberStatusReq
	(*GetMemberStatusRes)(nil),         // 6: space.v1.GetMemberStatusRes
	(*SpaceGroupInfo)(nil),             // 7: space.v1.SpaceGroupInfo
	(*SpaceInfoReq)(nil),               // 8: space.v1.SpaceInfoReq
	(*SpaceInfoRes)(nil),               // 9: space.v1.SpaceInfoRes
	(*ListSpaceInfoReq)(nil),           // 10: space.v1.ListSpaceInfoReq
	(*ListSpaceInfoRes)(nil),           // 11: space.v1.ListSpaceInfoRes
	(*ListSpaceGuidsByUidReq)(nil),     // 12: space.v1.ListSpaceGuidsByUidReq
	(*ListSpaceGuidsByUidRes)(nil),     // 13: space.v1.ListSpaceGuidsByUidRes
	(*SimpleSpaceInfo)(nil),            // 14: space.v1.SimpleSpaceInfo
	(*ListPublicSpaceReq)(nil),         // 15: space.v1.ListPublicSpaceReq
	(*ListPublicSpaceRes)(nil),         // 16: space.v1.ListPublicSpaceRes
	(*ListTreeReq)(nil),                // 17: space.v1.ListTreeReq
	(*ListTreeRes)(nil),                // 18: space.v1.ListTreeRes
	(*TreeReq)(nil),                    // 19: space.v1.TreeReq
	(*TreeRes)(nil),                    // 20: space.v1.TreeRes
	(*AntSpaceGroupInfo)(nil),          // 21: space.v1.AntSpaceGroupInfo
	(*AntSpaceInfo)(nil),               // 22: space.v1.AntSpaceInfo
	(*CreateSpaceGroupReq)(nil),        // 23: space.v1.CreateSpaceGroupReq
	(*CreateSpaceGroupRes)(nil),        // 24: space.v1.CreateSpaceGroupRes
	(*SpaceGroupInfoReq)(nil),          // 25: space.v1.SpaceGroupInfoReq
	(*SpaceGroupInfoRes)(nil),          // 26: space.v1.SpaceGroupInfoRes
	(*DeleteSpaceGroupReq)(nil),        // 27: space.v1.DeleteSpaceGroupReq
	(*DeleteSpaceGroupRes)(nil),        // 28: space.v1.DeleteSpaceGroupRes
	(*UpdateSpaceGroupReq)(nil),        // 29: space.v1.UpdateSpaceGroupReq
	(*UpdateSpaceGroupRes)(nil),        // 30: space.v1.UpdateSpaceGroupRes
	(*ChangeSpaceGroupSortReq)(nil),    // 31: space.v1.ChangeSpaceGroupSortReq
	(*ChangeSpaceGroupSortRes)(nil),    // 32: space.v1.ChangeSpaceGroupSortRes
	(*CreateSpaceReq)(nil),             // 33: space.v1.CreateSpaceReq
	(*CreateSpaceRes)(nil),             // 34: space.v1.CreateSpaceRes
	(*DeleteSpaceReq)(nil),             // 35: space.v1.DeleteSpaceReq
	(*DeleteSpaceRes)(nil),             // 36: space.v1.DeleteSpaceRes
	(*UpdateSpaceReq)(nil),             // 37: space.v1.UpdateSpaceReq
	(*UpdateSpaceRes)(nil),             // 38: space.v1.UpdateSpaceRes
	(*ChangeSpaceSortReq)(nil),         // 39: space.v1.ChangeSpaceSortReq
	(*ChangeSpaceSortRes)(nil),         // 40: space.v1.ChangeSpaceSortRes
	(*SpaceGroupMemberListReq)(nil),    // 41: space.v1.SpaceGroupMemberListReq
	(*SpaceGroupMemberListRes)(nil),    // 42: space.v1.SpaceGroupMemberListRes
	(*AddSpaceGroupMemberReq)(nil),     // 43: space.v1.AddSpaceGroupMemberReq
	(*AddSpaceGroupMemberRes)(nil),     // 44: space.v1.AddSpaceGroupMemberRes
	(*DeleteSpaceGroupMemberReq)(nil),  // 45: space.v1.DeleteSpaceGroupMemberReq
	(*DeleteSpaceGroupMemberRes)(nil),  // 46: space.v1.DeleteSpaceGroupMemberRes
	(*SearchSpaceGroupMemberReq)(nil),  // 47: space.v1.SearchSpaceGroupMemberReq
	(*SearchSpaceGroupMemberRes)(nil),  // 48: space.v1.SearchSpaceGroupMemberRes
	(*SpaceMemberListReq)(nil),         // 49: space.v1.SpaceMemberListReq
	(*SpaceMemberListRes)(nil),         // 50: space.v1.SpaceMemberListRes
	(*AddSpaceMemberReq)(nil),          // 51: space.v1.AddSpaceMemberReq
	(*AddSpaceMemberRes)(nil),          // 52: space.v1.AddSpaceMemberRes
	(*DeleteSpaceMemberReq)(nil),       // 53: space.v1.DeleteSpaceMemberReq
	(*DeleteSpaceMemberRes)(nil),       // 54: space.v1.DeleteSpaceMemberRes
	(*QuitSpaceMemberReq)(nil),         // 55: space.v1.QuitSpaceMemberReq
	(*QuitSpaceMemberRes)(nil),         // 56: space.v1.QuitSpaceMemberRes
	(*SearchSpaceMemberReq)(nil),       // 57: space.v1.SearchSpaceMemberReq
	(*SearchSpaceMemberRes)(nil),       // 58: space.v1.SearchSpaceMemberRes
	(*AuditApplySpaceMemberReq)(nil),   // 59: space.v1.AuditApplySpaceMemberReq
	(*AuditApplySpaceMemberRes)(nil),   // 60: space.v1.AuditApplySpaceMemberRes
	(*AuditListSpaceMemberReq)(nil),    // 61: space.v1.AuditListSpaceMemberReq
	(*AuditListSpaceMemberRes)(nil),    // 62: space.v1.AuditListSpaceMemberRes
	(*AuditMember)(nil),                // 63: space.v1.AuditMember
	(*AuditPassSpaceMemberReq)(nil),    // 64: space.v1.AuditPassSpaceMemberReq
	(*AuditPassSpaceMemberRes)(nil),    // 65: space.v1.AuditPassSpaceMemberRes
	(*AuditRejectSpaceMemberReq)(nil),  // 66: space.v1.AuditRejectSpaceMemberReq
	(*AuditRejectSpaceMemberRes)(nil),  // 67: space.v1.AuditRejectSpaceMemberRes
	(*AuditMapByIdsReq)(nil),           // 68: space.v1.AuditMapByIdsReq
	(*AuditMapByIdsRes)(nil),           // 69: space.v1.AuditMapByIdsRes
	(*AuditIndex)(nil),                 // 70: space.v1.AuditIndex
	(*GetSpacePermissionByUidReq)(nil), // 71: space.v1.GetSpacePermissionByUidReq
	(*GetSpacePermissionByUidRes)(nil), // 72: space.v1.GetSpacePermissionByUidRes
	(*SpaceArticlePermission)(nil),     // 73: space.v1.SpaceArticlePermission
	(*SpaceQuestionPermission)(nil),    // 74: space.v1.SpaceQuestionPermission
	(*TotalInfoReq)(nil),               // 75: space.v1.TotalInfoReq
	(*TotalInfoRes)(nil),               // 76: space.v1.TotalInfoRes
	(*EmojiListReq)(nil),               // 77: space.v1.EmojiListReq
	(*SpaceEmojiList)(nil),             // 78: space.v1.SpaceEmojiList
	(*EmojiListRes)(nil),               // 79: space.v1.EmojiListRes
	(*GenSpaceAccessOrderReq)(nil),     // 80: space.v1.GenSpaceAccessOrderReq
	(*GenSpaceAccessOrderRes)(nil),     // 81: space.v1.GenSpaceAccessOrderRes
	nil,                                // 82: space.v1.AuditMapByIdsRes.AuditMapEntry
	(v1.CMN_VISBL)(0),                  // 83: common.v1.CMN.VISBL
	(v1.CMN_APP)(0),                    // 84: common.v1.CMN.APP
	(v1.SPC_LAYOUT)(0),                 // 85: common.v1.SPC.LAYOUT
	(*v1.SpaceOption)(nil),             // 86: common.v1.SpaceOption
	(v1.SPC_CT)(0),                     // 87: common.v1.SPC.CT
	(v1.SPC_ACS)(0),                    // 88: common.v1.SPC.ACS
	(*v1.EmojiInfo)(nil),               // 89: common.v1.EmojiInfo
	(*v1.SpaceInfo)(nil),               // 90: common.v1.SpaceInfo
	(v1.FILE_IT)(0),                    // 91: common.v1.FILE.IT
	(*v1.Pagination)(nil),              // 92: common.v1.Pagination
	(*v1.MemberRole)(nil),              // 93: common.v1.MemberRole
	(v1.AUDIT_TYPE)(0),                 // 94: common.v1.AUDIT.TYPE
	(v1.AUDIT_STATUS)(0),               // 95: common.v1.AUDIT.STATUS
	(v1.CMN_GUID)(0),                   // 96: common.v1.CMN.GUID
}
var file_space_v1_space_proto_depIdxs = []int32{
	83,  // 0: space.v1.TreeSpaceGroup.visibility:type_name -> common.v1.CMN.VISBL
	84,  // 1: space.v1.TreeSpace.spaceType:type_name -> common.v1.CMN.APP
	85,  // 2: space.v1.TreeSpace.spaceLayout:type_name -> common.v1.SPC.LAYOUT
	83,  // 3: space.v1.TreeSpace.visibility:type_name -> common.v1.CMN.VISBL
	86,  // 4: space.v1.TreeSpace.spaceOptions:type_name -> common.v1.SpaceOption
	87,  // 5: space.v1.TreeSpace.chargeType:type_name -> common.v1.SPC.CT
	88,  // 6: space.v1.TreeSpace.access:type_name -> common.v1.SPC.ACS
	89,  // 7: space.v1.TreeSpace.emojiList:type_name -> common.v1.EmojiInfo
	1,   // 8: space.v1.ListSpaceAndGroupRes.spaceGroupList:type_name -> space.v1.TreeSpaceGroup
	2,   // 9: space.v1.ListSpaceAndGroupRes.spaceList:type_name -> space.v1.TreeSpace
	0,   // 10: space.v1.GetMemberStatusRes.list:type_name -> space.v1.MemberStatus
	90,  // 11: space.v1.SpaceGroupInfo.list:type_name -> common.v1.SpaceInfo
	83,  // 12: space.v1.SpaceGroupInfo.visibility:type_name -> common.v1.CMN.VISBL
	90,  // 13: space.v1.SpaceInfoRes.spaceInfo:type_name -> common.v1.SpaceInfo
	90,  // 14: space.v1.ListSpaceInfoRes.spaceInfos:type_name -> common.v1.SpaceInfo
	14,  // 15: space.v1.ListPublicSpaceRes.SimpleSpaceInfo:type_name -> space.v1.SimpleSpaceInfo
	21,  // 16: space.v1.ListTreeRes.tree:type_name -> space.v1.AntSpaceGroupInfo
	21,  // 17: space.v1.TreeRes.tree:type_name -> space.v1.AntSpaceGroupInfo
	91,  // 18: space.v1.AntSpaceGroupInfo.iconType:type_name -> common.v1.FILE.IT
	22,  // 19: space.v1.AntSpaceGroupInfo.children:type_name -> space.v1.AntSpaceInfo
	83,  // 20: space.v1.AntSpaceGroupInfo.visibility:type_name -> common.v1.CMN.VISBL
	88,  // 21: space.v1.AntSpaceGroupInfo.access:type_name -> common.v1.SPC.ACS
	91,  // 22: space.v1.AntSpaceInfo.iconType:type_name -> common.v1.FILE.IT
	84,  // 23: space.v1.AntSpaceInfo.spaceType:type_name -> common.v1.CMN.APP
	85,  // 24: space.v1.AntSpaceInfo.spaceLayout:type_name -> common.v1.SPC.LAYOUT
	83,  // 25: space.v1.AntSpaceInfo.visibility:type_name -> common.v1.CMN.VISBL
	88,  // 26: space.v1.AntSpaceInfo.access:type_name -> common.v1.SPC.ACS
	86,  // 27: space.v1.AntSpaceInfo.spaceOptions:type_name -> common.v1.SpaceOption
	91,  // 28: space.v1.CreateSpaceGroupReq.iconType:type_name -> common.v1.FILE.IT
	83,  // 29: space.v1.CreateSpaceGroupReq.visibility:type_name -> common.v1.CMN.VISBL
	7,   // 30: space.v1.CreateSpaceGroupRes.info:type_name -> space.v1.SpaceGroupInfo
	91,  // 31: space.v1.SpaceGroupInfoRes.iconType:type_name -> common.v1.FILE.IT
	90,  // 32: space.v1.SpaceGroupInfoRes.list:type_name -> common.v1.SpaceInfo
	83,  // 33: space.v1.SpaceGroupInfoRes.visibility:type_name -> common.v1.CMN.VISBL
	91,  // 34: space.v1.UpdateSpaceGroupReq.iconType:type_name -> common.v1.FILE.IT
	83,  // 35: space.v1.UpdateSpaceGroupReq.visibility:type_name -> common.v1.CMN.VISBL
	91,  // 36: space.v1.CreateSpaceReq.iconType:type_name -> common.v1.FILE.IT
	84,  // 37: space.v1.CreateSpaceReq.spaceType:type_name -> common.v1.CMN.APP
	85,  // 38: space.v1.CreateSpaceReq.spaceLayout:type_name -> common.v1.SPC.LAYOUT
	83,  // 39: space.v1.CreateSpaceReq.visibility:type_name -> common.v1.CMN.VISBL
	90,  // 40: space.v1.CreateSpaceRes.info:type_name -> common.v1.SpaceInfo
	91,  // 41: space.v1.UpdateSpaceReq.iconType:type_name -> common.v1.FILE.IT
	87,  // 42: space.v1.UpdateSpaceReq.chargeType:type_name -> common.v1.SPC.CT
	84,  // 43: space.v1.UpdateSpaceReq.spaceType:type_name -> common.v1.CMN.APP
	85,  // 44: space.v1.UpdateSpaceReq.spaceLayout:type_name -> common.v1.SPC.LAYOUT
	83,  // 45: space.v1.UpdateSpaceReq.visibility:type_name -> common.v1.CMN.VISBL
	86,  // 46: space.v1.UpdateSpaceReq.spaceOptions:type_name -> common.v1.SpaceOption
	88,  // 47: space.v1.UpdateSpaceReq.access:type_name -> common.v1.SPC.ACS
	92,  // 48: space.v1.SpaceGroupMemberListReq.pagination:type_name -> common.v1.Pagination
	93,  // 49: space.v1.SpaceGroupMemberListRes.list:type_name -> common.v1.MemberRole
	92,  // 50: space.v1.SpaceGroupMemberListRes.pagination:type_name -> common.v1.Pagination
	93,  // 51: space.v1.SearchSpaceGroupMemberRes.list:type_name -> common.v1.MemberRole
	92,  // 52: space.v1.SpaceMemberListReq.pagination:type_name -> common.v1.Pagination
	93,  // 53: space.v1.SpaceMemberListRes.list:type_name -> common.v1.MemberRole
	92,  // 54: space.v1.SpaceMemberListRes.pagination:type_name -> common.v1.Pagination
	93,  // 55: space.v1.SearchSpaceMemberRes.list:type_name -> common.v1.MemberRole
	94,  // 56: space.v1.AuditApplySpaceMemberReq.auditType:type_name -> common.v1.AUDIT.TYPE
	94,  // 57: space.v1.AuditListSpaceMemberReq.auditType:type_name -> common.v1.AUDIT.TYPE
	92,  // 58: space.v1.AuditListSpaceMemberReq.pagination:type_name -> common.v1.Pagination
	63,  // 59: space.v1.AuditListSpaceMemberRes.list:type_name -> space.v1.AuditMember
	92,  // 60: space.v1.AuditListSpaceMemberRes.pagination:type_name -> common.v1.Pagination
	94,  // 61: space.v1.AuditPassSpaceMemberReq.auditType:type_name -> common.v1.AUDIT.TYPE
	94,  // 62: space.v1.AuditRejectSpaceMemberReq.auditType:type_name -> common.v1.AUDIT.TYPE
	82,  // 63: space.v1.AuditMapByIdsRes.auditMap:type_name -> space.v1.AuditMapByIdsRes.AuditMapEntry
	95,  // 64: space.v1.AuditIndex.status:type_name -> common.v1.AUDIT.STATUS
	96,  // 65: space.v1.GetSpacePermissionByUidReq.guidType:type_name -> common.v1.CMN.GUID
	95,  // 66: space.v1.GetSpacePermissionByUidRes.auditStatus:type_name -> common.v1.AUDIT.STATUS
	73,  // 67: space.v1.GetSpacePermissionByUidRes.article:type_name -> space.v1.SpaceArticlePermission
	74,  // 68: space.v1.GetSpacePermissionByUidRes.question:type_name -> space.v1.SpaceQuestionPermission
	89,  // 69: space.v1.SpaceEmojiList.emojiList:type_name -> common.v1.EmojiInfo
	78,  // 70: space.v1.EmojiListRes.spaceList:type_name -> space.v1.SpaceEmojiList
	70,  // 71: space.v1.AuditMapByIdsRes.AuditMapEntry.value:type_name -> space.v1.AuditIndex
	3,   // 72: space.v1.Space.ListSpaceAndGroup:input_type -> space.v1.ListSpaceAndGroupReq
	15,  // 73: space.v1.Space.ListPublicSpace:input_type -> space.v1.ListPublicSpaceReq
	23,  // 74: space.v1.Space.CreateSpaceGroup:input_type -> space.v1.CreateSpaceGroupReq
	25,  // 75: space.v1.Space.SpaceGroupInfo:input_type -> space.v1.SpaceGroupInfoReq
	27,  // 76: space.v1.Space.DeleteSpaceGroup:input_type -> space.v1.DeleteSpaceGroupReq
	29,  // 77: space.v1.Space.UpdateSpaceGroup:input_type -> space.v1.UpdateSpaceGroupReq
	31,  // 78: space.v1.Space.ChangeSpaceGroupSort:input_type -> space.v1.ChangeSpaceGroupSortReq
	41,  // 79: space.v1.Space.SpaceGroupMemberList:input_type -> space.v1.SpaceGroupMemberListReq
	43,  // 80: space.v1.Space.AddSpaceGroupMember:input_type -> space.v1.AddSpaceGroupMemberReq
	45,  // 81: space.v1.Space.DeleteSpaceGroupMember:input_type -> space.v1.DeleteSpaceGroupMemberReq
	47,  // 82: space.v1.Space.SearchSpaceGroupMember:input_type -> space.v1.SearchSpaceGroupMemberReq
	33,  // 83: space.v1.Space.CreateSpace:input_type -> space.v1.CreateSpaceReq
	8,   // 84: space.v1.Space.SpaceInfo:input_type -> space.v1.SpaceInfoReq
	10,  // 85: space.v1.Space.ListSpaceInfo:input_type -> space.v1.ListSpaceInfoReq
	35,  // 86: space.v1.Space.DeleteSpace:input_type -> space.v1.DeleteSpaceReq
	37,  // 87: space.v1.Space.UpdateSpace:input_type -> space.v1.UpdateSpaceReq
	39,  // 88: space.v1.Space.ChangeSpaceSort:input_type -> space.v1.ChangeSpaceSortReq
	49,  // 89: space.v1.Space.SpaceMemberList:input_type -> space.v1.SpaceMemberListReq
	51,  // 90: space.v1.Space.AddSpaceMember:input_type -> space.v1.AddSpaceMemberReq
	53,  // 91: space.v1.Space.DeleteSpaceMember:input_type -> space.v1.DeleteSpaceMemberReq
	55,  // 92: space.v1.Space.QuitSpaceMember:input_type -> space.v1.QuitSpaceMemberReq
	57,  // 93: space.v1.Space.SearchSpaceMember:input_type -> space.v1.SearchSpaceMemberReq
	59,  // 94: space.v1.Space.AuditApplySpaceMember:input_type -> space.v1.AuditApplySpaceMemberReq
	61,  // 95: space.v1.Space.AuditListSpaceMember:input_type -> space.v1.AuditListSpaceMemberReq
	64,  // 96: space.v1.Space.AuditPassSpaceMember:input_type -> space.v1.AuditPassSpaceMemberReq
	66,  // 97: space.v1.Space.AuditRejectSpaceMember:input_type -> space.v1.AuditRejectSpaceMemberReq
	68,  // 98: space.v1.Space.AuditMapByIds:input_type -> space.v1.AuditMapByIdsReq
	71,  // 99: space.v1.Space.GetSpacePermissionByUid:input_type -> space.v1.GetSpacePermissionByUidReq
	75,  // 100: space.v1.Space.TotalInfo:input_type -> space.v1.TotalInfoReq
	77,  // 101: space.v1.Space.EmojiList:input_type -> space.v1.EmojiListReq
	80,  // 102: space.v1.Space.GenSpaceAccessOrder:input_type -> space.v1.GenSpaceAccessOrderReq
	5,   // 103: space.v1.Space.GetMemberStatus:input_type -> space.v1.GetMemberStatusReq
	4,   // 104: space.v1.Space.ListSpaceAndGroup:output_type -> space.v1.ListSpaceAndGroupRes
	16,  // 105: space.v1.Space.ListPublicSpace:output_type -> space.v1.ListPublicSpaceRes
	24,  // 106: space.v1.Space.CreateSpaceGroup:output_type -> space.v1.CreateSpaceGroupRes
	26,  // 107: space.v1.Space.SpaceGroupInfo:output_type -> space.v1.SpaceGroupInfoRes
	28,  // 108: space.v1.Space.DeleteSpaceGroup:output_type -> space.v1.DeleteSpaceGroupRes
	30,  // 109: space.v1.Space.UpdateSpaceGroup:output_type -> space.v1.UpdateSpaceGroupRes
	32,  // 110: space.v1.Space.ChangeSpaceGroupSort:output_type -> space.v1.ChangeSpaceGroupSortRes
	42,  // 111: space.v1.Space.SpaceGroupMemberList:output_type -> space.v1.SpaceGroupMemberListRes
	44,  // 112: space.v1.Space.AddSpaceGroupMember:output_type -> space.v1.AddSpaceGroupMemberRes
	46,  // 113: space.v1.Space.DeleteSpaceGroupMember:output_type -> space.v1.DeleteSpaceGroupMemberRes
	48,  // 114: space.v1.Space.SearchSpaceGroupMember:output_type -> space.v1.SearchSpaceGroupMemberRes
	34,  // 115: space.v1.Space.CreateSpace:output_type -> space.v1.CreateSpaceRes
	9,   // 116: space.v1.Space.SpaceInfo:output_type -> space.v1.SpaceInfoRes
	11,  // 117: space.v1.Space.ListSpaceInfo:output_type -> space.v1.ListSpaceInfoRes
	36,  // 118: space.v1.Space.DeleteSpace:output_type -> space.v1.DeleteSpaceRes
	38,  // 119: space.v1.Space.UpdateSpace:output_type -> space.v1.UpdateSpaceRes
	40,  // 120: space.v1.Space.ChangeSpaceSort:output_type -> space.v1.ChangeSpaceSortRes
	50,  // 121: space.v1.Space.SpaceMemberList:output_type -> space.v1.SpaceMemberListRes
	52,  // 122: space.v1.Space.AddSpaceMember:output_type -> space.v1.AddSpaceMemberRes
	54,  // 123: space.v1.Space.DeleteSpaceMember:output_type -> space.v1.DeleteSpaceMemberRes
	56,  // 124: space.v1.Space.QuitSpaceMember:output_type -> space.v1.QuitSpaceMemberRes
	58,  // 125: space.v1.Space.SearchSpaceMember:output_type -> space.v1.SearchSpaceMemberRes
	60,  // 126: space.v1.Space.AuditApplySpaceMember:output_type -> space.v1.AuditApplySpaceMemberRes
	62,  // 127: space.v1.Space.AuditListSpaceMember:output_type -> space.v1.AuditListSpaceMemberRes
	65,  // 128: space.v1.Space.AuditPassSpaceMember:output_type -> space.v1.AuditPassSpaceMemberRes
	67,  // 129: space.v1.Space.AuditRejectSpaceMember:output_type -> space.v1.AuditRejectSpaceMemberRes
	69,  // 130: space.v1.Space.AuditMapByIds:output_type -> space.v1.AuditMapByIdsRes
	72,  // 131: space.v1.Space.GetSpacePermissionByUid:output_type -> space.v1.GetSpacePermissionByUidRes
	76,  // 132: space.v1.Space.TotalInfo:output_type -> space.v1.TotalInfoRes
	79,  // 133: space.v1.Space.EmojiList:output_type -> space.v1.EmojiListRes
	81,  // 134: space.v1.Space.GenSpaceAccessOrder:output_type -> space.v1.GenSpaceAccessOrderRes
	6,   // 135: space.v1.Space.GetMemberStatus:output_type -> space.v1.GetMemberStatusRes
	104, // [104:136] is the sub-list for method output_type
	72,  // [72:104] is the sub-list for method input_type
	72,  // [72:72] is the sub-list for extension type_name
	72,  // [72:72] is the sub-list for extension extendee
	0,   // [0:72] is the sub-list for field type_name
}

func init() { file_space_v1_space_proto_init() }
func file_space_v1_space_proto_init() {
	if File_space_v1_space_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_space_v1_space_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeSpaceGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeSpace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSpaceAndGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSpaceAndGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMemberStatusRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSpaceInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSpaceInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSpaceGuidsByUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSpaceGuidsByUidRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleSpaceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPublicSpaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPublicSpaceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTreeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntSpaceGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AntSpaceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpaceGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpaceGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceGroupInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceGroupInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpaceGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpaceGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSpaceGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSpaceGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeSpaceGroupSortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeSpaceGroupSortRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpaceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpaceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSpaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSpaceRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeSpaceSortReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeSpaceSortRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceGroupMemberListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceGroupMemberListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSpaceGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSpaceGroupMemberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpaceGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpaceGroupMemberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSpaceGroupMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSpaceGroupMemberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceMemberListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceMemberListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSpaceMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSpaceMemberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpaceMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpaceMemberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitSpaceMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuitSpaceMemberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSpaceMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSpaceMemberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditApplySpaceMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditApplySpaceMemberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditListSpaceMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditListSpaceMemberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditPassSpaceMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditPassSpaceMemberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditRejectSpaceMemberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditRejectSpaceMemberRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditMapByIdsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditMapByIdsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpacePermissionByUidReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpacePermissionByUidRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceArticlePermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceQuestionPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmojiListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceEmojiList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmojiListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenSpaceAccessOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_space_v1_space_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenSpaceAccessOrderRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_space_v1_space_proto_msgTypes[37].OneofWrappers = []interface{}{}
	file_space_v1_space_proto_msgTypes[39].OneofWrappers = []interface{}{}
	file_space_v1_space_proto_msgTypes[72].OneofWrappers = []interface{}{
		(*GetSpacePermissionByUidRes_Article)(nil),
		(*GetSpacePermissionByUidRes_Question)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_space_v1_space_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   83,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_space_v1_space_proto_goTypes,
		DependencyIndexes: file_space_v1_space_proto_depIdxs,
		MessageInfos:      file_space_v1_space_proto_msgTypes,
	}.Build()
	File_space_v1_space_proto = out.File
	file_space_v1_space_proto_rawDesc = nil
	file_space_v1_space_proto_goTypes = nil
	file_space_v1_space_proto_depIdxs = nil
}
