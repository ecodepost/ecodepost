// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: question/v1/question.proto

package questionv1

import (
	v1 "ecodepost/pb/common/v1"
	_ "ecodepost/pb/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建文件请求
type CreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 文件名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 空间guid
	SpaceGuid string `protobuf:"bytes,4,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// 父级文件 ID，如果存在父亲，说明是answer
	ParentGuid string `protobuf:"bytes,5,opt,name=parentGuid,proto3" json:"parentGuid,omitempty"`
	// 文件内容
	Content string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	// 创建者ip
	Ip string `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *CreateReq) Reset() {
	*x = CreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReq) ProtoMessage() {}

func (x *CreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReq.ProtoReflect.Descriptor instead.
func (*CreateReq) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{0}
}

func (x *CreateReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *CreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateReq) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *CreateReq) GetParentGuid() string {
	if x != nil {
		return x.ParentGuid
	}
	return ""
}

func (x *CreateReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

// 创建文件夹响应
type CreateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文件夹
	File *v1.FileInfo `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *CreateRes) Reset() {
	*x = CreateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRes) ProtoMessage() {}

func (x *CreateRes) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRes.ProtoReflect.Descriptor instead.
func (*CreateRes) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRes) GetFile() *v1.FileInfo {
	if x != nil {
		return x.File
	}
	return nil
}

// 修改文件请求
type UpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 文件id
	Guid string `protobuf:"bytes,3,opt,name=guid,proto3" json:"guid,omitempty"`
	// 文件夹名称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// 文件内容
	Content *string `protobuf:"bytes,5,opt,name=content,proto3,oneof" json:"content,omitempty"`
	// 格式
	FileFormat v1.FILE_FORMAT `protobuf:"varint,6,opt,name=fileFormat,proto3,enum=common.v1.FILE_FORMAT" json:"fileFormat,omitempty"`
}

func (x *UpdateReq) Reset() {
	*x = UpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReq) ProtoMessage() {}

func (x *UpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReq.ProtoReflect.Descriptor instead.
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UpdateReq) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *UpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateReq) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *UpdateReq) GetFileFormat() v1.FILE_FORMAT {
	if x != nil {
		return x.FileFormat
	}
	return v1.FILE_FORMAT_INVALID
}

type UpdateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateRes) Reset() {
	*x = UpdateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRes) ProtoMessage() {}

func (x *UpdateRes) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRes.ProtoReflect.Descriptor instead.
func (*UpdateRes) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{3}
}

// 创建文件请求
type MyInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 文件guid
	Guid string `protobuf:"bytes,3,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *MyInfoReq) Reset() {
	*x = MyInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyInfoReq) ProtoMessage() {}

func (x *MyInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyInfoReq.ProtoReflect.Descriptor instead.
func (*MyInfoReq) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{4}
}

func (x *MyInfoReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *MyInfoReq) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

// 创建文件夹响应
type MyInfoRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 我的问题
	MyAnswerGuid string `protobuf:"bytes,1,opt,name=myAnswerGuid,proto3" json:"myAnswerGuid,omitempty"`
}

func (x *MyInfoRes) Reset() {
	*x = MyInfoRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyInfoRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyInfoRes) ProtoMessage() {}

func (x *MyInfoRes) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyInfoRes.ProtoReflect.Descriptor instead.
func (*MyInfoRes) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{5}
}

func (x *MyInfoRes) GetMyAnswerGuid() string {
	if x != nil {
		return x.MyAnswerGuid
	}
	return ""
}

// 修改文件请求
type GetContentByCreatorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 文件id
	Guid string `protobuf:"bytes,3,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *GetContentByCreatorReq) Reset() {
	*x = GetContentByCreatorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentByCreatorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentByCreatorReq) ProtoMessage() {}

func (x *GetContentByCreatorReq) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentByCreatorReq.ProtoReflect.Descriptor instead.
func (*GetContentByCreatorReq) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{6}
}

func (x *GetContentByCreatorReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetContentByCreatorReq) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

type GetContentByCreatorRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 内容
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *GetContentByCreatorRes) Reset() {
	*x = GetContentByCreatorRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentByCreatorRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentByCreatorRes) ProtoMessage() {}

func (x *GetContentByCreatorRes) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentByCreatorRes.ProtoReflect.Descriptor instead.
func (*GetContentByCreatorRes) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{7}
}

func (x *GetContentByCreatorRes) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 修改文件请求
type GetContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 文件id
	Guid string `protobuf:"bytes,3,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *GetContentReq) Reset() {
	*x = GetContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentReq) ProtoMessage() {}

func (x *GetContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentReq.ProtoReflect.Descriptor instead.
func (*GetContentReq) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{8}
}

func (x *GetContentReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *GetContentReq) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

type GetContentRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 内容url
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GetContentRes) Reset() {
	*x = GetContentRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentRes) ProtoMessage() {}

func (x *GetContentRes) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentRes.ProtoReflect.Descriptor instead.
func (*GetContentRes) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{9}
}

func (x *GetContentRes) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 文章展示信息
type QuestionShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文章GUID
	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	// 文章标题
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 用户uid
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// 用户昵称
	Nickname string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 用户头像
	Avatar string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 简单描述
	Summary string `protobuf:"bytes,6,opt,name=summary,proto3" json:"summary,omitempty"`
	// 创建时间
	Ctime int64 `protobuf:"varint,7,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 回复总数
	CntComment int64 `protobuf:"varint,8,opt,name=cntComment,proto3" json:"cntComment,omitempty"`
	// 查看总数
	CntView int64 `protobuf:"varint,9,opt,name=cntView,proto3" json:"cntView,omitempty"`
	// 收藏总数
	CntCollect int64 `protobuf:"varint,10,opt,name=cntCollect,proto3" json:"cntCollect,omitempty"`
	// emoji list
	List []*v1.EmojiInfo `protobuf:"bytes,12,rep,name=list,proto3" json:"list,omitempty"`
	// 如果是回答，那么就直接展示content
	Content string `protobuf:"bytes,13,opt,name=content,proto3" json:"content,omitempty"`
	// 空间Guid
	SpaceGuid string `protobuf:"bytes,15,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// 是否有readMore
	IsReadMore int32 `protobuf:"varint,16,opt,name=isReadMore,proto3" json:"isReadMore,omitempty"`
	// 是否允许创建评论
	IsAllowCreateComment int32 `protobuf:"varint,17,opt,name=isAllowCreateComment,proto3" json:"isAllowCreateComment,omitempty"`
	// 是否已经收藏
	IsCollect int32 `protobuf:"varint,18,opt,name=isCollect,proto3" json:"isCollect,omitempty"`
	// 文档格式
	Format v1.FILE_FORMAT `protobuf:"varint,19,opt,name=format,proto3,enum=common.v1.FILE_FORMAT" json:"format,omitempty"`
	// ip定位的地址, 暂时精确到省
	IpLocation string `protobuf:"bytes,20,opt,name=ipLocation,proto3" json:"ipLocation,omitempty"`
}

func (x *QuestionShow) Reset() {
	*x = QuestionShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionShow) ProtoMessage() {}

func (x *QuestionShow) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionShow.ProtoReflect.Descriptor instead.
func (*QuestionShow) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{10}
}

func (x *QuestionShow) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *QuestionShow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QuestionShow) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *QuestionShow) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *QuestionShow) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *QuestionShow) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *QuestionShow) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *QuestionShow) GetCntComment() int64 {
	if x != nil {
		return x.CntComment
	}
	return 0
}

func (x *QuestionShow) GetCntView() int64 {
	if x != nil {
		return x.CntView
	}
	return 0
}

func (x *QuestionShow) GetCntCollect() int64 {
	if x != nil {
		return x.CntCollect
	}
	return 0
}

func (x *QuestionShow) GetList() []*v1.EmojiInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QuestionShow) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *QuestionShow) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *QuestionShow) GetIsReadMore() int32 {
	if x != nil {
		return x.IsReadMore
	}
	return 0
}

func (x *QuestionShow) GetIsAllowCreateComment() int32 {
	if x != nil {
		return x.IsAllowCreateComment
	}
	return 0
}

func (x *QuestionShow) GetIsCollect() int32 {
	if x != nil {
		return x.IsCollect
	}
	return 0
}

func (x *QuestionShow) GetFormat() v1.FILE_FORMAT {
	if x != nil {
		return x.Format
	}
	return v1.FILE_FORMAT_INVALID
}

func (x *QuestionShow) GetIpLocation() string {
	if x != nil {
		return x.IpLocation
	}
	return ""
}

// 文章展示信息
type AnswerShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文章GUID
	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	// 文章标题
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 用户uid
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// 用户昵称
	Nickname string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 用户头像
	Avatar string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 简单描述
	Summary string `protobuf:"bytes,6,opt,name=summary,proto3" json:"summary,omitempty"`
	// 创建时间
	Ctime int64 `protobuf:"varint,7,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 回复总数
	CntComment int64 `protobuf:"varint,8,opt,name=cntComment,proto3" json:"cntComment,omitempty"`
	// 查看总数
	CntView int64 `protobuf:"varint,9,opt,name=cntView,proto3" json:"cntView,omitempty"`
	// 收藏总数
	CntCollect int64 `protobuf:"varint,10,opt,name=cntCollect,proto3" json:"cntCollect,omitempty"`
	// emoji list
	List []*v1.EmojiInfo `protobuf:"bytes,12,rep,name=list,proto3" json:"list,omitempty"`
	// 空间Guid
	SpaceGuid string `protobuf:"bytes,15,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// 是否有readMore
	IsReadMore int32 `protobuf:"varint,16,opt,name=isReadMore,proto3" json:"isReadMore,omitempty"`
	// 是否允许创建评论
	IsAllowCreateComment int32 `protobuf:"varint,17,opt,name=isAllowCreateComment,proto3" json:"isAllowCreateComment,omitempty"`
	// 是否已经收藏
	IsCollect int32 `protobuf:"varint,18,opt,name=isCollect,proto3" json:"isCollect,omitempty"`
	// 文档格式
	Format v1.FILE_FORMAT `protobuf:"varint,19,opt,name=format,proto3,enum=common.v1.FILE_FORMAT" json:"format,omitempty"`
	// ip定位的地址, 暂时精确到省
	IpLocation string `protobuf:"bytes,20,opt,name=ipLocation,proto3" json:"ipLocation,omitempty"`
}

func (x *AnswerShow) Reset() {
	*x = AnswerShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerShow) ProtoMessage() {}

func (x *AnswerShow) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerShow.ProtoReflect.Descriptor instead.
func (*AnswerShow) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{11}
}

func (x *AnswerShow) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *AnswerShow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AnswerShow) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AnswerShow) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AnswerShow) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *AnswerShow) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *AnswerShow) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *AnswerShow) GetCntComment() int64 {
	if x != nil {
		return x.CntComment
	}
	return 0
}

func (x *AnswerShow) GetCntView() int64 {
	if x != nil {
		return x.CntView
	}
	return 0
}

func (x *AnswerShow) GetCntCollect() int64 {
	if x != nil {
		return x.CntCollect
	}
	return 0
}

func (x *AnswerShow) GetList() []*v1.EmojiInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AnswerShow) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *AnswerShow) GetIsReadMore() int32 {
	if x != nil {
		return x.IsReadMore
	}
	return 0
}

func (x *AnswerShow) GetIsAllowCreateComment() int32 {
	if x != nil {
		return x.IsAllowCreateComment
	}
	return 0
}

func (x *AnswerShow) GetIsCollect() int32 {
	if x != nil {
		return x.IsCollect
	}
	return 0
}

func (x *AnswerShow) GetFormat() v1.FILE_FORMAT {
	if x != nil {
		return x.Format
	}
	return v1.FILE_FORMAT_INVALID
}

func (x *AnswerShow) GetIpLocation() string {
	if x != nil {
		return x.IpLocation
	}
	return ""
}

// 问题和回答展示信息
type QAShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文章GUID
	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	// 文章GUID
	ParentGuid string `protobuf:"bytes,2,opt,name=parentGuid,proto3" json:"parentGuid,omitempty"`
	// 文章标题
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 用户uid
	Uid int64 `protobuf:"varint,4,opt,name=uid,proto3" json:"uid,omitempty"`
	// 用户昵称
	Nickname string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 用户头像
	Avatar string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 简单描述
	Summary string `protobuf:"bytes,7,opt,name=summary,proto3" json:"summary,omitempty"`
	// 创建时间
	Ctime int64 `protobuf:"varint,8,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 回复总数
	CntComment int64 `protobuf:"varint,9,opt,name=cntComment,proto3" json:"cntComment,omitempty"`
	// 查看总数
	CntView int64 `protobuf:"varint,10,opt,name=cntView,proto3" json:"cntView,omitempty"`
	// 收藏总数
	CntCollect int64 `protobuf:"varint,11,opt,name=cntCollect,proto3" json:"cntCollect,omitempty"`
	// emoji list
	List []*v1.EmojiInfo `protobuf:"bytes,13,rep,name=list,proto3" json:"list,omitempty"`
	// 如果是回答，那么就直接展示content
	Content string `protobuf:"bytes,14,opt,name=content,proto3" json:"content,omitempty"`
	// 空间Guid
	SpaceGuid string `protobuf:"bytes,16,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// 是否有readMore
	IsReadMore int32 `protobuf:"varint,17,opt,name=isReadMore,proto3" json:"isReadMore,omitempty"`
	// 是否允许创建评论
	IsAllowCreateComment int32 `protobuf:"varint,18,opt,name=isAllowCreateComment,proto3" json:"isAllowCreateComment,omitempty"`
	// 是否已经收藏
	IsCollect int32 `protobuf:"varint,19,opt,name=isCollect,proto3" json:"isCollect,omitempty"`
	// 文档格式
	Format v1.FILE_FORMAT `protobuf:"varint,20,opt,name=format,proto3,enum=common.v1.FILE_FORMAT" json:"format,omitempty"`
	// ip定位的地址, 暂时精确到省
	IpLocation string `protobuf:"bytes,21,opt,name=ipLocation,proto3" json:"ipLocation,omitempty"`
}

func (x *QAShow) Reset() {
	*x = QAShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QAShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QAShow) ProtoMessage() {}

func (x *QAShow) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QAShow.ProtoReflect.Descriptor instead.
func (*QAShow) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{12}
}

func (x *QAShow) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *QAShow) GetParentGuid() string {
	if x != nil {
		return x.ParentGuid
	}
	return ""
}

func (x *QAShow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QAShow) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *QAShow) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *QAShow) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *QAShow) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *QAShow) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *QAShow) GetCntComment() int64 {
	if x != nil {
		return x.CntComment
	}
	return 0
}

func (x *QAShow) GetCntView() int64 {
	if x != nil {
		return x.CntView
	}
	return 0
}

func (x *QAShow) GetCntCollect() int64 {
	if x != nil {
		return x.CntCollect
	}
	return 0
}

func (x *QAShow) GetList() []*v1.EmojiInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *QAShow) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *QAShow) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *QAShow) GetIsReadMore() int32 {
	if x != nil {
		return x.IsReadMore
	}
	return 0
}

func (x *QAShow) GetIsAllowCreateComment() int32 {
	if x != nil {
		return x.IsAllowCreateComment
	}
	return 0
}

func (x *QAShow) GetIsCollect() int32 {
	if x != nil {
		return x.IsCollect
	}
	return 0
}

func (x *QAShow) GetFormat() v1.FILE_FORMAT {
	if x != nil {
		return x.Format
	}
	return v1.FILE_FORMAT_INVALID
}

func (x *QAShow) GetIpLocation() string {
	if x != nil {
		return x.IpLocation
	}
	return ""
}

type DeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 文件id
	Guid string `protobuf:"bytes,3,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *DeleteReq) Reset() {
	*x = DeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReq) ProtoMessage() {}

func (x *DeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReq.ProtoReflect.Descriptor instead.
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DeleteReq) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

type DeleteRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRes) Reset() {
	*x = DeleteRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRes) ProtoMessage() {}

func (x *DeleteRes) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRes.ProtoReflect.Descriptor instead.
func (*DeleteRes) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{14}
}

type ListQuestionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 空间guid
	SpaceGuid string `protobuf:"bytes,3,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 排序类型
	Sort v1.CMN_FILE_SORT `protobuf:"varint,5,opt,name=sort,proto3,enum=common.v1.CMN_FILE_SORT" json:"sort,omitempty"`
}

func (x *ListQuestionReq) Reset() {
	*x = ListQuestionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuestionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuestionReq) ProtoMessage() {}

func (x *ListQuestionReq) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuestionReq.ProtoReflect.Descriptor instead.
func (*ListQuestionReq) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{15}
}

func (x *ListQuestionReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ListQuestionReq) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *ListQuestionReq) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListQuestionReq) GetSort() v1.CMN_FILE_SORT {
	if x != nil {
		return x.Sort
	}
	return v1.CMN_SORT_INVALID
}

type ListQuestionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 回答列表
	List []*QuestionShow `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListQuestionRes) Reset() {
	*x = ListQuestionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuestionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuestionRes) ProtoMessage() {}

func (x *ListQuestionRes) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuestionRes.ProtoReflect.Descriptor instead.
func (*ListQuestionRes) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{16}
}

func (x *ListQuestionRes) GetList() []*QuestionShow {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListQuestionRes) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListAnswerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 父guid
	ParentGuid string `protobuf:"bytes,3,opt,name=parentGuid,proto3" json:"parentGuid,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 排序类型
	Sort v1.CMN_FILE_SORT `protobuf:"varint,5,opt,name=sort,proto3,enum=common.v1.CMN_FILE_SORT" json:"sort,omitempty"`
}

func (x *ListAnswerReq) Reset() {
	*x = ListAnswerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAnswerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAnswerReq) ProtoMessage() {}

func (x *ListAnswerReq) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAnswerReq.ProtoReflect.Descriptor instead.
func (*ListAnswerReq) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{17}
}

func (x *ListAnswerReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ListAnswerReq) GetParentGuid() string {
	if x != nil {
		return x.ParentGuid
	}
	return ""
}

func (x *ListAnswerReq) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListAnswerReq) GetSort() v1.CMN_FILE_SORT {
	if x != nil {
		return x.Sort
	}
	return v1.CMN_SORT_INVALID
}

type ListAnswerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 问题列表
	List []*AnswerShow `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListAnswerRes) Reset() {
	*x = ListAnswerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAnswerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAnswerRes) ProtoMessage() {}

func (x *ListAnswerRes) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAnswerRes.ProtoReflect.Descriptor instead.
func (*ListAnswerRes) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{18}
}

func (x *ListAnswerRes) GetList() []*AnswerShow {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListAnswerRes) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type PublicListByUserCreatedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求该接口的用户
	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// 创建者用户uid
	CreatedUid int64 `protobuf:"varint,2,opt,name=createdUid,proto3" json:"createdUid,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *PublicListByUserCreatedReq) Reset() {
	*x = PublicListByUserCreatedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicListByUserCreatedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicListByUserCreatedReq) ProtoMessage() {}

func (x *PublicListByUserCreatedReq) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicListByUserCreatedReq.ProtoReflect.Descriptor instead.
func (*PublicListByUserCreatedReq) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{19}
}

func (x *PublicListByUserCreatedReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *PublicListByUserCreatedReq) GetCreatedUid() int64 {
	if x != nil {
		return x.CreatedUid
	}
	return 0
}

func (x *PublicListByUserCreatedReq) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type PublicListByUserCreatedRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// QA 列表
	List []*QAShow `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *PublicListByUserCreatedRes) Reset() {
	*x = PublicListByUserCreatedRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_question_v1_question_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicListByUserCreatedRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicListByUserCreatedRes) ProtoMessage() {}

func (x *PublicListByUserCreatedRes) ProtoReflect() protoreflect.Message {
	mi := &file_question_v1_question_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicListByUserCreatedRes.ProtoReflect.Descriptor instead.
func (*PublicListByUserCreatedRes) Descriptor() ([]byte, []int) {
	return file_question_v1_question_proto_rawDescGZIP(), []int{20}
}

func (x *PublicListByUserCreatedRes) GetList() []*QAShow {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *PublicListByUserCreatedRes) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_question_v1_question_proto protoreflect.FileDescriptor

var file_question_v1_question_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75,
	0x6d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x01, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x34, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0xba, 0x01, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x46, 0x4f, 0x52, 0x4d, 0x41,
	0x54, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x0b, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x09, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x22, 0x2f, 0x0a, 0x09, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x6d, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x47, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x79, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x47,
	0x75, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x42, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xaa, 0x04, 0x0a,
	0x0c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x12, 0x0a,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6e,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x73, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x46, 0x4f, 0x52, 0x4d, 0x41,
	0x54, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x70, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x04, 0x0a, 0x0a, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6e, 0x74, 0x56, 0x69, 0x65,
	0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x52, 0x65,
	0x61, 0x64, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73,
	0x52, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x73, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x54, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x70,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc4, 0x04, 0x0a, 0x06, 0x51,
	0x41, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x28, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x6f, 0x72, 0x65, 0x12,
	0x32, 0x0a, 0x14, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x69,
	0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x12, 0x2e, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49,
	0x4c, 0x45, 0x2e, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x43, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0x0b, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64,
	0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x4d, 0x4e, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x77, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x6f,
	0x77, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaf,
	0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x4d, 0x4e,
	0x2e, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x4f, 0x52, 0x54, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x22, 0x73, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x1a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x69, 0x64, 0x12,
	0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7c, 0x0a, 0x1a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x41, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0xf1, 0x03, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x16, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12,
	0x4a, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x12, 0x38, 0x0a, 0x06, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x12, 0x6b, 0x0a, 0x17, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x27, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x27, 0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x42, 0x92, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d,
	0x2e, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x51, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x23, 0x65,
	0x63, 0x6f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x51, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0b, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x17, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_question_v1_question_proto_rawDescOnce sync.Once
	file_question_v1_question_proto_rawDescData = file_question_v1_question_proto_rawDesc
)

func file_question_v1_question_proto_rawDescGZIP() []byte {
	file_question_v1_question_proto_rawDescOnce.Do(func() {
		file_question_v1_question_proto_rawDescData = protoimpl.X.CompressGZIP(file_question_v1_question_proto_rawDescData)
	})
	return file_question_v1_question_proto_rawDescData
}

var file_question_v1_question_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_question_v1_question_proto_goTypes = []interface{}{
	(*CreateReq)(nil),                  // 0: question.v1.CreateReq
	(*CreateRes)(nil),                  // 1: question.v1.CreateRes
	(*UpdateReq)(nil),                  // 2: question.v1.UpdateReq
	(*UpdateRes)(nil),                  // 3: question.v1.UpdateRes
	(*MyInfoReq)(nil),                  // 4: question.v1.MyInfoReq
	(*MyInfoRes)(nil),                  // 5: question.v1.MyInfoRes
	(*GetContentByCreatorReq)(nil),     // 6: question.v1.GetContentByCreatorReq
	(*GetContentByCreatorRes)(nil),     // 7: question.v1.GetContentByCreatorRes
	(*GetContentReq)(nil),              // 8: question.v1.GetContentReq
	(*GetContentRes)(nil),              // 9: question.v1.GetContentRes
	(*QuestionShow)(nil),               // 10: question.v1.QuestionShow
	(*AnswerShow)(nil),                 // 11: question.v1.AnswerShow
	(*QAShow)(nil),                     // 12: question.v1.QAShow
	(*DeleteReq)(nil),                  // 13: question.v1.DeleteReq
	(*DeleteRes)(nil),                  // 14: question.v1.DeleteRes
	(*ListQuestionReq)(nil),            // 15: question.v1.ListQuestionReq
	(*ListQuestionRes)(nil),            // 16: question.v1.ListQuestionRes
	(*ListAnswerReq)(nil),              // 17: question.v1.ListAnswerReq
	(*ListAnswerRes)(nil),              // 18: question.v1.ListAnswerRes
	(*PublicListByUserCreatedReq)(nil), // 19: question.v1.PublicListByUserCreatedReq
	(*PublicListByUserCreatedRes)(nil), // 20: question.v1.PublicListByUserCreatedRes
	(*v1.FileInfo)(nil),                // 21: common.v1.FileInfo
	(v1.FILE_FORMAT)(0),                // 22: common.v1.FILE.FORMAT
	(*v1.EmojiInfo)(nil),               // 23: common.v1.EmojiInfo
	(*v1.Pagination)(nil),              // 24: common.v1.Pagination
	(v1.CMN_FILE_SORT)(0),              // 25: common.v1.CMN.FILE_SORT
}
var file_question_v1_question_proto_depIdxs = []int32{
	21, // 0: question.v1.CreateRes.file:type_name -> common.v1.FileInfo
	22, // 1: question.v1.UpdateReq.fileFormat:type_name -> common.v1.FILE.FORMAT
	23, // 2: question.v1.QuestionShow.list:type_name -> common.v1.EmojiInfo
	22, // 3: question.v1.QuestionShow.format:type_name -> common.v1.FILE.FORMAT
	23, // 4: question.v1.AnswerShow.list:type_name -> common.v1.EmojiInfo
	22, // 5: question.v1.AnswerShow.format:type_name -> common.v1.FILE.FORMAT
	23, // 6: question.v1.QAShow.list:type_name -> common.v1.EmojiInfo
	22, // 7: question.v1.QAShow.format:type_name -> common.v1.FILE.FORMAT
	24, // 8: question.v1.ListQuestionReq.pagination:type_name -> common.v1.Pagination
	25, // 9: question.v1.ListQuestionReq.sort:type_name -> common.v1.CMN.FILE_SORT
	10, // 10: question.v1.ListQuestionRes.list:type_name -> question.v1.QuestionShow
	24, // 11: question.v1.ListQuestionRes.pagination:type_name -> common.v1.Pagination
	24, // 12: question.v1.ListAnswerReq.pagination:type_name -> common.v1.Pagination
	25, // 13: question.v1.ListAnswerReq.sort:type_name -> common.v1.CMN.FILE_SORT
	11, // 14: question.v1.ListAnswerRes.list:type_name -> question.v1.AnswerShow
	24, // 15: question.v1.ListAnswerRes.pagination:type_name -> common.v1.Pagination
	24, // 16: question.v1.PublicListByUserCreatedReq.pagination:type_name -> common.v1.Pagination
	12, // 17: question.v1.PublicListByUserCreatedRes.list:type_name -> question.v1.QAShow
	24, // 18: question.v1.PublicListByUserCreatedRes.pagination:type_name -> common.v1.Pagination
	0,  // 19: question.v1.Question.Create:input_type -> question.v1.CreateReq
	2,  // 20: question.v1.Question.Update:input_type -> question.v1.UpdateReq
	13, // 21: question.v1.Question.Delete:input_type -> question.v1.DeleteReq
	15, // 22: question.v1.Question.ListQuestion:input_type -> question.v1.ListQuestionReq
	17, // 23: question.v1.Question.ListAnswer:input_type -> question.v1.ListAnswerReq
	4,  // 24: question.v1.Question.MyInfo:input_type -> question.v1.MyInfoReq
	19, // 25: question.v1.Question.PublicListByUserCreated:input_type -> question.v1.PublicListByUserCreatedReq
	1,  // 26: question.v1.Question.Create:output_type -> question.v1.CreateRes
	3,  // 27: question.v1.Question.Update:output_type -> question.v1.UpdateRes
	14, // 28: question.v1.Question.Delete:output_type -> question.v1.DeleteRes
	16, // 29: question.v1.Question.ListQuestion:output_type -> question.v1.ListQuestionRes
	18, // 30: question.v1.Question.ListAnswer:output_type -> question.v1.ListAnswerRes
	5,  // 31: question.v1.Question.MyInfo:output_type -> question.v1.MyInfoRes
	20, // 32: question.v1.Question.PublicListByUserCreated:output_type -> question.v1.PublicListByUserCreatedRes
	26, // [26:33] is the sub-list for method output_type
	19, // [19:26] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_question_v1_question_proto_init() }
func file_question_v1_question_proto_init() {
	if File_question_v1_question_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_question_v1_question_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyInfoRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentByCreatorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentByCreatorRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QAShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuestionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListQuestionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAnswerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAnswerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicListByUserCreatedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_question_v1_question_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicListByUserCreatedRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_question_v1_question_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_question_v1_question_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_question_v1_question_proto_goTypes,
		DependencyIndexes: file_question_v1_question_proto_depIdxs,
		MessageInfos:      file_question_v1_question_proto_msgTypes,
	}.Build()
	File_question_v1_question_proto = out.File
	file_question_v1_question_proto_rawDesc = nil
	file_question_v1_question_proto_goTypes = nil
	file_question_v1_question_proto_depIdxs = nil
}
