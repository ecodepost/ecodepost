// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: logger/v1/logger.proto

package loggerv1

import (
	v1 "ecodepost/pb/common/v1"
	_ "ecodepost/pb/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建
type CreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Event
	Event v1.LOG_EVENT `protobuf:"varint,1,opt,name=event,proto3,enum=common.v1.LOG_EVENT" json:"event,omitempty"`
	// Group
	Group v1.LOG_GROUP `protobuf:"varint,2,opt,name=group,proto3,enum=common.v1.LOG_GROUP" json:"group,omitempty"`
	// 目标uid
	TargetUid int64 `protobuf:"varint,3,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	// 用户uid
	OperateUid int64 `protobuf:"varint,4,opt,name=operate_uid,json=operateUid,proto3" json:"operate_uid,omitempty"`
	// space
	SpaceGuid string `protobuf:"bytes,6,opt,name=space_guid,json=spaceGuid,proto3" json:"space_guid,omitempty"`
	// space group
	SpaceGroupGuid string `protobuf:"bytes,7,opt,name=space_group_guid,json=spaceGroupGuid,proto3" json:"space_group_guid,omitempty"`
	// file guid
	FileGuid string `protobuf:"bytes,8,opt,name=file_guid,json=fileGuid,proto3" json:"file_guid,omitempty"`
	// role id
	RoleId int64 `protobuf:"varint,9,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// metadata
	Metadata string `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *CreateReq) Reset() {
	*x = CreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_v1_logger_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReq) ProtoMessage() {}

func (x *CreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_logger_v1_logger_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReq.ProtoReflect.Descriptor instead.
func (*CreateReq) Descriptor() ([]byte, []int) {
	return file_logger_v1_logger_proto_rawDescGZIP(), []int{0}
}

func (x *CreateReq) GetEvent() v1.LOG_EVENT {
	if x != nil {
		return x.Event
	}
	return v1.LOG_EVENT_INVALID
}

func (x *CreateReq) GetGroup() v1.LOG_GROUP {
	if x != nil {
		return x.Group
	}
	return v1.LOG_GROUP_INVALID
}

func (x *CreateReq) GetTargetUid() int64 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *CreateReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *CreateReq) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *CreateReq) GetSpaceGroupGuid() string {
	if x != nil {
		return x.SpaceGroupGuid
	}
	return ""
}

func (x *CreateReq) GetFileGuid() string {
	if x != nil {
		return x.FileGuid
	}
	return ""
}

func (x *CreateReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *CreateReq) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

// 创建通知响应
type CreateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRes) Reset() {
	*x = CreateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_v1_logger_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRes) ProtoMessage() {}

func (x *CreateRes) ProtoReflect() protoreflect.Message {
	mi := &file_logger_v1_logger_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRes.ProtoReflect.Descriptor instead.
func (*CreateRes) Descriptor() ([]byte, []int) {
	return file_logger_v1_logger_proto_rawDescGZIP(), []int{1}
}

// 创建
type BatchCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 列表
	List []*CreateReq `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BatchCreateReq) Reset() {
	*x = BatchCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_v1_logger_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateReq) ProtoMessage() {}

func (x *BatchCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_logger_v1_logger_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateReq.ProtoReflect.Descriptor instead.
func (*BatchCreateReq) Descriptor() ([]byte, []int) {
	return file_logger_v1_logger_proto_rawDescGZIP(), []int{2}
}

func (x *BatchCreateReq) GetList() []*CreateReq {
	if x != nil {
		return x.List
	}
	return nil
}

// 创建通知响应
type BatchCreateRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchCreateRes) Reset() {
	*x = BatchCreateRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_v1_logger_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateRes) ProtoMessage() {}

func (x *BatchCreateRes) ProtoReflect() protoreflect.Message {
	mi := &file_logger_v1_logger_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateRes.ProtoReflect.Descriptor instead.
func (*BatchCreateRes) Descriptor() ([]byte, []int) {
	return file_logger_v1_logger_proto_rawDescGZIP(), []int{3}
}

// 创建
type BatchCreateByTargetUidsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Event
	Event v1.LOG_EVENT `protobuf:"varint,1,opt,name=event,proto3,enum=common.v1.LOG_EVENT" json:"event,omitempty"`
	// Group
	Group v1.LOG_GROUP `protobuf:"varint,2,opt,name=group,proto3,enum=common.v1.LOG_GROUP" json:"group,omitempty"`
	// 目标uid
	TargetUids []int64 `protobuf:"varint,3,rep,packed,name=target_uids,json=targetUids,proto3" json:"target_uids,omitempty"`
	// 用户uid
	OperateUid int64 `protobuf:"varint,4,opt,name=operate_uid,json=operateUid,proto3" json:"operate_uid,omitempty"`
	// space
	SpaceGuid string `protobuf:"bytes,6,opt,name=space_guid,json=spaceGuid,proto3" json:"space_guid,omitempty"`
	// space group
	SpaceGroupGuid string `protobuf:"bytes,7,opt,name=space_group_guid,json=spaceGroupGuid,proto3" json:"space_group_guid,omitempty"`
	// file guid
	FileGuid string `protobuf:"bytes,8,opt,name=file_guid,json=fileGuid,proto3" json:"file_guid,omitempty"`
	// role id
	RoleId int64 `protobuf:"varint,9,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// metadata
	Metadata string `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *BatchCreateByTargetUidsReq) Reset() {
	*x = BatchCreateByTargetUidsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_v1_logger_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateByTargetUidsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateByTargetUidsReq) ProtoMessage() {}

func (x *BatchCreateByTargetUidsReq) ProtoReflect() protoreflect.Message {
	mi := &file_logger_v1_logger_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateByTargetUidsReq.ProtoReflect.Descriptor instead.
func (*BatchCreateByTargetUidsReq) Descriptor() ([]byte, []int) {
	return file_logger_v1_logger_proto_rawDescGZIP(), []int{4}
}

func (x *BatchCreateByTargetUidsReq) GetEvent() v1.LOG_EVENT {
	if x != nil {
		return x.Event
	}
	return v1.LOG_EVENT_INVALID
}

func (x *BatchCreateByTargetUidsReq) GetGroup() v1.LOG_GROUP {
	if x != nil {
		return x.Group
	}
	return v1.LOG_GROUP_INVALID
}

func (x *BatchCreateByTargetUidsReq) GetTargetUids() []int64 {
	if x != nil {
		return x.TargetUids
	}
	return nil
}

func (x *BatchCreateByTargetUidsReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *BatchCreateByTargetUidsReq) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *BatchCreateByTargetUidsReq) GetSpaceGroupGuid() string {
	if x != nil {
		return x.SpaceGroupGuid
	}
	return ""
}

func (x *BatchCreateByTargetUidsReq) GetFileGuid() string {
	if x != nil {
		return x.FileGuid
	}
	return ""
}

func (x *BatchCreateByTargetUidsReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *BatchCreateByTargetUidsReq) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

// 创建通知响应
type BatchCreateByTargetUidsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchCreateByTargetUidsRes) Reset() {
	*x = BatchCreateByTargetUidsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_v1_logger_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateByTargetUidsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateByTargetUidsRes) ProtoMessage() {}

func (x *BatchCreateByTargetUidsRes) ProtoReflect() protoreflect.Message {
	mi := &file_logger_v1_logger_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateByTargetUidsRes.ProtoReflect.Descriptor instead.
func (*BatchCreateByTargetUidsRes) Descriptor() ([]byte, []int) {
	return file_logger_v1_logger_proto_rawDescGZIP(), []int{5}
}

type ListPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operate_uid,json=operateUid,proto3" json:"operate_uid,omitempty"`
	// i18n
	I18N string `protobuf:"bytes,3,opt,name=i18n,proto3" json:"i18n,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	// 事件
	SearchEvent v1.LOG_EVENT `protobuf:"varint,5,opt,name=search_event,json=searchEvent,proto3,enum=common.v1.LOG_EVENT" json:"search_event,omitempty"`
	// 搜索分组
	SearchGroup v1.LOG_GROUP `protobuf:"varint,6,opt,name=search_group,json=searchGroup,proto3,enum=common.v1.LOG_GROUP" json:"search_group,omitempty"`
	// 搜索分组uid
	SearchOperateUid int64 `protobuf:"varint,7,opt,name=search_operate_uid,json=searchOperateUid,proto3" json:"search_operate_uid,omitempty"`
	// 搜搜目标id
	SearchTargetUid int64 `protobuf:"varint,8,opt,name=search_target_uid,json=searchTargetUid,proto3" json:"search_target_uid,omitempty"`
}

func (x *ListPageReq) Reset() {
	*x = ListPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_v1_logger_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPageReq) ProtoMessage() {}

func (x *ListPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_logger_v1_logger_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPageReq.ProtoReflect.Descriptor instead.
func (*ListPageReq) Descriptor() ([]byte, []int) {
	return file_logger_v1_logger_proto_rawDescGZIP(), []int{6}
}

func (x *ListPageReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *ListPageReq) GetI18N() string {
	if x != nil {
		return x.I18N
	}
	return ""
}

func (x *ListPageReq) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListPageReq) GetSearchEvent() v1.LOG_EVENT {
	if x != nil {
		return x.SearchEvent
	}
	return v1.LOG_EVENT_INVALID
}

func (x *ListPageReq) GetSearchGroup() v1.LOG_GROUP {
	if x != nil {
		return x.SearchGroup
	}
	return v1.LOG_GROUP_INVALID
}

func (x *ListPageReq) GetSearchOperateUid() int64 {
	if x != nil {
		return x.SearchOperateUid
	}
	return 0
}

func (x *ListPageReq) GetSearchTargetUid() int64 {
	if x != nil {
		return x.SearchTargetUid
	}
	return 0
}

type LogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 日志id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 事件名
	EventName string `protobuf:"bytes,2,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	// 分组名
	GroupName string `protobuf:"bytes,3,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	// 显示的一些信息，这个是需要国际化的
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// 操作人uid
	OperateUid int64 `protobuf:"varint,5,opt,name=operate_uid,json=operateUid,proto3" json:"operate_uid,omitempty"`
	// 操作名称
	OperateName string `protobuf:"bytes,6,opt,name=operate_name,json=operateName,proto3" json:"operate_name,omitempty"`
	// 操作图表
	OperateAvatar string `protobuf:"bytes,7,opt,name=operate_avatar,json=operateAvatar,proto3" json:"operate_avatar,omitempty"`
	// 目标uid
	TargetUid int64 `protobuf:"varint,8,opt,name=target_uid,json=targetUid,proto3" json:"target_uid,omitempty"`
	// 目标名称
	TargetName string `protobuf:"bytes,9,opt,name=target_name,json=targetName,proto3" json:"target_name,omitempty"`
	// 目标头像
	TargetAvatar string `protobuf:"bytes,10,opt,name=target_avatar,json=targetAvatar,proto3" json:"target_avatar,omitempty"`
	// 创建时间
	Ctime int64 `protobuf:"varint,11,opt,name=ctime,proto3" json:"ctime,omitempty"`
}

func (x *LogInfo) Reset() {
	*x = LogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_v1_logger_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogInfo) ProtoMessage() {}

func (x *LogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_logger_v1_logger_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogInfo.ProtoReflect.Descriptor instead.
func (*LogInfo) Descriptor() ([]byte, []int) {
	return file_logger_v1_logger_proto_rawDescGZIP(), []int{7}
}

func (x *LogInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LogInfo) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *LogInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *LogInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogInfo) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *LogInfo) GetOperateName() string {
	if x != nil {
		return x.OperateName
	}
	return ""
}

func (x *LogInfo) GetOperateAvatar() string {
	if x != nil {
		return x.OperateAvatar
	}
	return ""
}

func (x *LogInfo) GetTargetUid() int64 {
	if x != nil {
		return x.TargetUid
	}
	return 0
}

func (x *LogInfo) GetTargetName() string {
	if x != nil {
		return x.TargetName
	}
	return ""
}

func (x *LogInfo) GetTargetAvatar() string {
	if x != nil {
		return x.TargetAvatar
	}
	return ""
}

func (x *LogInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

type ListPageRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 日志列表
	List []*LogInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 分页
	Pagination *v1.Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListPageRes) Reset() {
	*x = ListPageRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_v1_logger_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPageRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPageRes) ProtoMessage() {}

func (x *ListPageRes) ProtoReflect() protoreflect.Message {
	mi := &file_logger_v1_logger_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPageRes.ProtoReflect.Descriptor instead.
func (*ListPageRes) Descriptor() ([]byte, []int) {
	return file_logger_v1_logger_proto_rawDescGZIP(), []int{8}
}

func (x *ListPageRes) GetList() []*LogInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListPageRes) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListEventAndGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者UID
	OperateUid int64 `protobuf:"varint,1,opt,name=operate_uid,json=operateUid,proto3" json:"operate_uid,omitempty"`
	// i18n
	I18N string `protobuf:"bytes,3,opt,name=i18n,proto3" json:"i18n,omitempty"`
}

func (x *ListEventAndGroupReq) Reset() {
	*x = ListEventAndGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_v1_logger_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventAndGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventAndGroupReq) ProtoMessage() {}

func (x *ListEventAndGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_logger_v1_logger_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventAndGroupReq.ProtoReflect.Descriptor instead.
func (*ListEventAndGroupReq) Descriptor() ([]byte, []int) {
	return file_logger_v1_logger_proto_rawDescGZIP(), []int{9}
}

func (x *ListEventAndGroupReq) GetOperateUid() int64 {
	if x != nil {
		return x.OperateUid
	}
	return 0
}

func (x *ListEventAndGroupReq) GetI18N() string {
	if x != nil {
		return x.I18N
	}
	return ""
}

type EventInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 事件
	Event v1.LOG_EVENT `protobuf:"varint,1,opt,name=event,proto3,enum=common.v1.LOG_EVENT" json:"event,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EventInfo) Reset() {
	*x = EventInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_v1_logger_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInfo) ProtoMessage() {}

func (x *EventInfo) ProtoReflect() protoreflect.Message {
	mi := &file_logger_v1_logger_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInfo.ProtoReflect.Descriptor instead.
func (*EventInfo) Descriptor() ([]byte, []int) {
	return file_logger_v1_logger_proto_rawDescGZIP(), []int{10}
}

func (x *EventInfo) GetEvent() v1.LOG_EVENT {
	if x != nil {
		return x.Event
	}
	return v1.LOG_EVENT_INVALID
}

func (x *EventInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 分组
	Group v1.LOG_GROUP `protobuf:"varint,1,opt,name=group,proto3,enum=common.v1.LOG_GROUP" json:"group,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GroupInfo) Reset() {
	*x = GroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_v1_logger_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInfo) ProtoMessage() {}

func (x *GroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_logger_v1_logger_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInfo.ProtoReflect.Descriptor instead.
func (*GroupInfo) Descriptor() ([]byte, []int) {
	return file_logger_v1_logger_proto_rawDescGZIP(), []int{11}
}

func (x *GroupInfo) GetGroup() v1.LOG_GROUP {
	if x != nil {
		return x.Group
	}
	return v1.LOG_GROUP_INVALID
}

func (x *GroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListEventAndGroupRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 事件列表
	EventList []*EventInfo `protobuf:"bytes,1,rep,name=eventList,proto3" json:"eventList,omitempty"`
	// 分组列表
	GroupList []*GroupInfo `protobuf:"bytes,2,rep,name=groupList,proto3" json:"groupList,omitempty"`
}

func (x *ListEventAndGroupRes) Reset() {
	*x = ListEventAndGroupRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logger_v1_logger_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEventAndGroupRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEventAndGroupRes) ProtoMessage() {}

func (x *ListEventAndGroupRes) ProtoReflect() protoreflect.Message {
	mi := &file_logger_v1_logger_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEventAndGroupRes.ProtoReflect.Descriptor instead.
func (*ListEventAndGroupRes) Descriptor() ([]byte, []int) {
	return file_logger_v1_logger_proto_rawDescGZIP(), []int{12}
}

func (x *ListEventAndGroupRes) GetEventList() []*EventInfo {
	if x != nil {
		return x.EventList
	}
	return nil
}

func (x *ListEventAndGroupRes) GetGroupList() []*GroupInfo {
	if x != nil {
		return x.GroupList
	}
	return nil
}

var File_logger_v1_logger_proto protoreflect.FileDescriptor

var file_logger_v1_logger_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x67,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x6f, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe,
	0x02, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4f, 0x47, 0x2e, 0x45, 0x56, 0x45, 0x4e,
	0x54, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4f, 0x47, 0x2e, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x0b, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x0e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x28,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c,
	0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x22, 0xd1, 0x02, 0x0a, 0x1a, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4f, 0x47, 0x2e, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x4f, 0x47, 0x2e, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69,
	0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75,
	0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1c,
	0x0a, 0x1a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x73, 0x52, 0x65, 0x73, 0x22, 0xc5, 0x02, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x31, 0x38, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x31, 0x38,
	0x6e, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4f, 0x47, 0x2e, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x37, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x4f, 0x47, 0x2e, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x52, 0x0b, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x55, 0x69, 0x64, 0x22, 0xd7, 0x02, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x6c,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x26, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x6f,
	0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x31, 0x38, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x31, 0x38, 0x6e, 0x22, 0x4b, 0x0a, 0x09, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x4f, 0x47, 0x2e, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x4f, 0x47, 0x2e, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x32, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x32, 0xff, 0x02, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x12, 0x34,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x12, 0x67, 0x0a, 0x17, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x69, 0x64, 0x73, 0x12, 0x25, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6c, 0x6f,
	0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x69, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x12, 0x3a, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x12, 0x55,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1f, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x42, 0x82, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x6f,
	0x67, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1f, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x74, 0x2f, 0x70, 0x62, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x6c,
	0x6f, 0x67, 0x67, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4c, 0x58, 0x58, 0xaa, 0x02, 0x09,
	0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x4c, 0x6f, 0x67, 0x67,
	0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a,
	0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_logger_v1_logger_proto_rawDescOnce sync.Once
	file_logger_v1_logger_proto_rawDescData = file_logger_v1_logger_proto_rawDesc
)

func file_logger_v1_logger_proto_rawDescGZIP() []byte {
	file_logger_v1_logger_proto_rawDescOnce.Do(func() {
		file_logger_v1_logger_proto_rawDescData = protoimpl.X.CompressGZIP(file_logger_v1_logger_proto_rawDescData)
	})
	return file_logger_v1_logger_proto_rawDescData
}

var file_logger_v1_logger_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_logger_v1_logger_proto_goTypes = []interface{}{
	(*CreateReq)(nil),                  // 0: logger.v1.CreateReq
	(*CreateRes)(nil),                  // 1: logger.v1.CreateRes
	(*BatchCreateReq)(nil),             // 2: logger.v1.BatchCreateReq
	(*BatchCreateRes)(nil),             // 3: logger.v1.BatchCreateRes
	(*BatchCreateByTargetUidsReq)(nil), // 4: logger.v1.BatchCreateByTargetUidsReq
	(*BatchCreateByTargetUidsRes)(nil), // 5: logger.v1.BatchCreateByTargetUidsRes
	(*ListPageReq)(nil),                // 6: logger.v1.ListPageReq
	(*LogInfo)(nil),                    // 7: logger.v1.LogInfo
	(*ListPageRes)(nil),                // 8: logger.v1.ListPageRes
	(*ListEventAndGroupReq)(nil),       // 9: logger.v1.ListEventAndGroupReq
	(*EventInfo)(nil),                  // 10: logger.v1.EventInfo
	(*GroupInfo)(nil),                  // 11: logger.v1.GroupInfo
	(*ListEventAndGroupRes)(nil),       // 12: logger.v1.ListEventAndGroupRes
	(v1.LOG_EVENT)(0),                  // 13: common.v1.LOG.EVENT
	(v1.LOG_GROUP)(0),                  // 14: common.v1.LOG.GROUP
	(*v1.Pagination)(nil),              // 15: common.v1.Pagination
}
var file_logger_v1_logger_proto_depIdxs = []int32{
	13, // 0: logger.v1.CreateReq.event:type_name -> common.v1.LOG.EVENT
	14, // 1: logger.v1.CreateReq.group:type_name -> common.v1.LOG.GROUP
	0,  // 2: logger.v1.BatchCreateReq.list:type_name -> logger.v1.CreateReq
	13, // 3: logger.v1.BatchCreateByTargetUidsReq.event:type_name -> common.v1.LOG.EVENT
	14, // 4: logger.v1.BatchCreateByTargetUidsReq.group:type_name -> common.v1.LOG.GROUP
	15, // 5: logger.v1.ListPageReq.pagination:type_name -> common.v1.Pagination
	13, // 6: logger.v1.ListPageReq.search_event:type_name -> common.v1.LOG.EVENT
	14, // 7: logger.v1.ListPageReq.search_group:type_name -> common.v1.LOG.GROUP
	7,  // 8: logger.v1.ListPageRes.list:type_name -> logger.v1.LogInfo
	15, // 9: logger.v1.ListPageRes.pagination:type_name -> common.v1.Pagination
	13, // 10: logger.v1.EventInfo.event:type_name -> common.v1.LOG.EVENT
	14, // 11: logger.v1.GroupInfo.group:type_name -> common.v1.LOG.GROUP
	10, // 12: logger.v1.ListEventAndGroupRes.eventList:type_name -> logger.v1.EventInfo
	11, // 13: logger.v1.ListEventAndGroupRes.groupList:type_name -> logger.v1.GroupInfo
	0,  // 14: logger.v1.Logger.Create:input_type -> logger.v1.CreateReq
	2,  // 15: logger.v1.Logger.BatchCreate:input_type -> logger.v1.BatchCreateReq
	4,  // 16: logger.v1.Logger.BatchCreateByTargetUids:input_type -> logger.v1.BatchCreateByTargetUidsReq
	6,  // 17: logger.v1.Logger.ListPage:input_type -> logger.v1.ListPageReq
	9,  // 18: logger.v1.Logger.ListEventAndGroup:input_type -> logger.v1.ListEventAndGroupReq
	1,  // 19: logger.v1.Logger.Create:output_type -> logger.v1.CreateRes
	3,  // 20: logger.v1.Logger.BatchCreate:output_type -> logger.v1.BatchCreateRes
	5,  // 21: logger.v1.Logger.BatchCreateByTargetUids:output_type -> logger.v1.BatchCreateByTargetUidsRes
	8,  // 22: logger.v1.Logger.ListPage:output_type -> logger.v1.ListPageRes
	12, // 23: logger.v1.Logger.ListEventAndGroup:output_type -> logger.v1.ListEventAndGroupRes
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_logger_v1_logger_proto_init() }
func file_logger_v1_logger_proto_init() {
	if File_logger_v1_logger_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logger_v1_logger_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_v1_logger_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_v1_logger_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_v1_logger_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_v1_logger_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateByTargetUidsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_v1_logger_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateByTargetUidsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_v1_logger_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_v1_logger_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_v1_logger_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPageRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_v1_logger_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventAndGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_v1_logger_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_v1_logger_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logger_v1_logger_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEventAndGroupRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logger_v1_logger_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logger_v1_logger_proto_goTypes,
		DependencyIndexes: file_logger_v1_logger_proto_depIdxs,
		MessageInfos:      file_logger_v1_logger_proto_msgTypes,
	}.Build()
	File_logger_v1_logger_proto = out.File
	file_logger_v1_logger_proto_rawDesc = nil
	file_logger_v1_logger_proto_goTypes = nil
	file_logger_v1_logger_proto_depIdxs = nil
}
