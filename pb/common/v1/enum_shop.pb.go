// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: common/v1/enum_shop.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ES:EditStatus 项目的编辑状态
type GOOD_ES int32

const (
	// 无效枚举值
	GOOD_ES_INVALID GOOD_ES = 0
	// 已保存
	GOOD_ES_SAVED GOOD_ES = 1
	// 已发布
	GOOD_ES_PUBLISHED GOOD_ES = 2
	// 已过审
	GOOD_ES_AUDIT_PASSED GOOD_ES = 3
)

// Enum value maps for GOOD_ES.
var (
	GOOD_ES_name = map[int32]string{
		0: "ES_INVALID",
		1: "ES_SAVED",
		2: "ES_PUBLISHED",
		3: "ES_AUDIT_PASSED",
	}
	GOOD_ES_value = map[string]int32{
		"ES_INVALID":      0,
		"ES_SAVED":        1,
		"ES_PUBLISHED":    2,
		"ES_AUDIT_PASSED": 3,
	}
)

func (x GOOD_ES) Enum() *GOOD_ES {
	p := new(GOOD_ES)
	*p = x
	return p
}

func (x GOOD_ES) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GOOD_ES) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[0].Descriptor()
}

func (GOOD_ES) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[0]
}

func (x GOOD_ES) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GOOD_ES.Descriptor instead.
func (GOOD_ES) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{0, 0}
}

// CPT:CouponType 礼券类型
type GOOD_CPT int32

const (
	// 无效枚举值
	GOOD_CPT_INVALID GOOD_CPT = 0
	// 代金券
	GOOD_CPT_CASH GOOD_CPT = 1
	// 白名单券
	GOOD_CPT_WHITE GOOD_CPT = 2
	// 折扣券
	GOOD_CPT_DISCOUNT GOOD_CPT = 3
)

// Enum value maps for GOOD_CPT.
var (
	GOOD_CPT_name = map[int32]string{
		0: "CPT_INVALID",
		1: "CPT_CASH",
		2: "CPT_WHITE",
		3: "CPT_DISCOUNT",
	}
	GOOD_CPT_value = map[string]int32{
		"CPT_INVALID":  0,
		"CPT_CASH":     1,
		"CPT_WHITE":    2,
		"CPT_DISCOUNT": 3,
	}
)

func (x GOOD_CPT) Enum() *GOOD_CPT {
	p := new(GOOD_CPT)
	*p = x
	return p
}

func (x GOOD_CPT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GOOD_CPT) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[1].Descriptor()
}

func (GOOD_CPT) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[1]
}

func (x GOOD_CPT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GOOD_CPT.Descriptor instead.
func (GOOD_CPT) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{0, 1}
}

// CPUT:CouponUseType 礼券使用类型
type GOOD_CPUT int32

const (
	// 无效枚举值
	GOOD_CPUT_INVALID GOOD_CPUT = 0
	// 全场通用
	GOOD_CPUT_ALL GOOD_CPUT = 1
	// 指定商品
	GOOD_CPUT_SKU GOOD_CPUT = 2
)

// Enum value maps for GOOD_CPUT.
var (
	GOOD_CPUT_name = map[int32]string{
		0: "CPUT_INVALID",
		1: "CPUT_ALL",
		2: "CPUT_SKU",
	}
	GOOD_CPUT_value = map[string]int32{
		"CPUT_INVALID": 0,
		"CPUT_ALL":     1,
		"CPUT_SKU":     2,
	}
)

func (x GOOD_CPUT) Enum() *GOOD_CPUT {
	p := new(GOOD_CPUT)
	*p = x
	return p
}

func (x GOOD_CPUT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GOOD_CPUT) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[2].Descriptor()
}

func (GOOD_CPUT) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[2]
}

func (x GOOD_CPUT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GOOD_CPUT.Descriptor instead.
func (GOOD_CPUT) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{0, 2}
}

// CPRT:CouponReceiveType 礼券获取类型
type GOOD_CPRT int32

const (
	// 无效枚举值
	GOOD_CPRT_INVALID GOOD_CPRT = 0
	// 后台赠送
	GOOD_CPRT_ADMIN GOOD_CPRT = 1
	// 主动获取
	GOOD_CPRT_SELF GOOD_CPRT = 2
)

// Enum value maps for GOOD_CPRT.
var (
	GOOD_CPRT_name = map[int32]string{
		0: "CPRT_INVALID",
		1: "CPRT_ADMIN",
		2: "CPRT_SELF",
	}
	GOOD_CPRT_value = map[string]int32{
		"CPRT_INVALID": 0,
		"CPRT_ADMIN":   1,
		"CPRT_SELF":    2,
	}
)

func (x GOOD_CPRT) Enum() *GOOD_CPRT {
	p := new(GOOD_CPRT)
	*p = x
	return p
}

func (x GOOD_CPRT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GOOD_CPRT) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[3].Descriptor()
}

func (GOOD_CPRT) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[3]
}

func (x GOOD_CPRT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GOOD_CPRT.Descriptor instead.
func (GOOD_CPRT) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{0, 3}
}

// CPUS:CouponUseStatus 礼券使用状态
type GOOD_CPUS int32

const (
	// 无效枚举值
	GOOD_CPUS_INVALID GOOD_CPUS = 0
	// 未使用
	GOOD_CPUS_UNUSED GOOD_CPUS = 1
	// 已使用
	GOOD_CPUS_USED GOOD_CPUS = 2
	// 已过期
	GOOD_CPUS_EXPIRED GOOD_CPUS = 3
)

// Enum value maps for GOOD_CPUS.
var (
	GOOD_CPUS_name = map[int32]string{
		0: "CPUS_INVALID",
		1: "CPUS_UNUSED",
		2: "CPUS_USED",
		3: "CPUS_EXPIRED",
	}
	GOOD_CPUS_value = map[string]int32{
		"CPUS_INVALID": 0,
		"CPUS_UNUSED":  1,
		"CPUS_USED":    2,
		"CPUS_EXPIRED": 3,
	}
)

func (x GOOD_CPUS) Enum() *GOOD_CPUS {
	p := new(GOOD_CPUS)
	*p = x
	return p
}

func (x GOOD_CPUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GOOD_CPUS) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[4].Descriptor()
}

func (GOOD_CPUS) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[4]
}

func (x GOOD_CPUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GOOD_CPUS.Descriptor instead.
func (GOOD_CPUS) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{0, 4}
}

// 商品状态 GoodStatus
type GOOD_STATUS int32

const (
	// 无效枚举值
	GOOD_STATUS_INVALID GOOD_STATUS = 0
	// 未开始发售
	GOOD_STATUS_ON_PREPARED GOOD_STATUS = 1
	// 售卖中
	GOOD_STATUS_ON_SALE GOOD_STATUS = 2
	// 下架
	GOOD_STATUS_OFFLINE GOOD_STATUS = 3
	// 预告中
	GOOD_STATUS_PREVIEW GOOD_STATUS = 4
)

// Enum value maps for GOOD_STATUS.
var (
	GOOD_STATUS_name = map[int32]string{
		0: "STATUS_INVALID",
		1: "STATUS_ON_PREPARED",
		2: "STATUS_ON_SALE",
		3: "STATUS_OFFLINE",
		4: "STATUS_PREVIEW",
	}
	GOOD_STATUS_value = map[string]int32{
		"STATUS_INVALID":     0,
		"STATUS_ON_PREPARED": 1,
		"STATUS_ON_SALE":     2,
		"STATUS_OFFLINE":     3,
		"STATUS_PREVIEW":     4,
	}
)

func (x GOOD_STATUS) Enum() *GOOD_STATUS {
	p := new(GOOD_STATUS)
	*p = x
	return p
}

func (x GOOD_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GOOD_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[5].Descriptor()
}

func (GOOD_STATUS) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[5]
}

func (x GOOD_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GOOD_STATUS.Descriptor instead.
func (GOOD_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{0, 5}
}

// ST:SortType 目前不需要考虑那么多
type GOOD_ST int32

const (
	// 无效枚举值
	GOOD_ST_INVALID GOOD_ST = 0
	// 默认枚举值
	GOOD_ST_DEFAULT GOOD_ST = 1
)

// Enum value maps for GOOD_ST.
var (
	GOOD_ST_name = map[int32]string{
		0: "ST_INVALID",
		1: "ST_DEFAULT",
	}
	GOOD_ST_value = map[string]int32{
		"ST_INVALID": 0,
		"ST_DEFAULT": 1,
	}
)

func (x GOOD_ST) Enum() *GOOD_ST {
	p := new(GOOD_ST)
	*p = x
	return p
}

func (x GOOD_ST) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GOOD_ST) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[6].Descriptor()
}

func (GOOD_ST) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[6]
}

func (x GOOD_ST) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GOOD_ST.Descriptor instead.
func (GOOD_ST) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{0, 6}
}

// LS:LockStatus 订单锁定状态
type ORDER_LS int32

const (
	// ORDER_LOCK_STAT_UN_LOCK = 0;
	// 无效类型
	ORDER_LS_INVALID ORDER_LS = 0
	// 未锁定
	ORDER_LS_UN_LOCK ORDER_LS = 1
	// 锁定
	ORDER_LS_LOCKED ORDER_LS = 2
)

// Enum value maps for ORDER_LS.
var (
	ORDER_LS_name = map[int32]string{
		0: "LS_INVALID",
		1: "LS_UN_LOCK",
		2: "LS_LOCKED",
	}
	ORDER_LS_value = map[string]int32{
		"LS_INVALID": 0,
		"LS_UN_LOCK": 1,
		"LS_LOCKED":  2,
	}
)

func (x ORDER_LS) Enum() *ORDER_LS {
	p := new(ORDER_LS)
	*p = x
	return p
}

func (x ORDER_LS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDER_LS) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[7].Descriptor()
}

func (ORDER_LS) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[7]
}

func (x ORDER_LS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDER_LS.Descriptor instead.
func (ORDER_LS) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{1, 0}
}

// 订单状态
type ORDER_STATUS int32

const (
	// 未知
	ORDER_STATUS_INVALID ORDER_STATUS = 0
	// 未支付
	ORDER_STATUS_UN_PAY ORDER_STATUS = 10
	// 已支付
	ORDER_STATUS_PAID ORDER_STATUS = 20
	// 已发货
	ORDER_STATUS_DELIVERED ORDER_STATUS = 30
	// 已收货
	ORDER_STATUS_RECEIVED ORDER_STATUS = 40
	// 删除
	ORDER_STATUS_DELETED ORDER_STATUS = 50
	// 取消
	ORDER_STATUS_CANCELED ORDER_STATUS = 60
	// 过期
	ORDER_STATUS_EXPIRED ORDER_STATUS = 70
)

// Enum value maps for ORDER_STATUS.
var (
	ORDER_STATUS_name = map[int32]string{
		0:  "STATUS_INVALID",
		10: "STATUS_UN_PAY",
		20: "STATUS_PAID",
		30: "STATUS_DELIVERED",
		40: "STATUS_RECEIVED",
		50: "STATUS_DELETED",
		60: "STATUS_CANCELED",
		70: "STATUS_EXPIRED",
	}
	ORDER_STATUS_value = map[string]int32{
		"STATUS_INVALID":   0,
		"STATUS_UN_PAY":    10,
		"STATUS_PAID":      20,
		"STATUS_DELIVERED": 30,
		"STATUS_RECEIVED":  40,
		"STATUS_DELETED":   50,
		"STATUS_CANCELED":  60,
		"STATUS_EXPIRED":   70,
	}
)

func (x ORDER_STATUS) Enum() *ORDER_STATUS {
	p := new(ORDER_STATUS)
	*p = x
	return p
}

func (x ORDER_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDER_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[8].Descriptor()
}

func (ORDER_STATUS) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[8]
}

func (x ORDER_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDER_STATUS.Descriptor instead.
func (ORDER_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{1, 1}
}

// ORDER_TYPE:订单类型。
type ORDER_TP int32

const (
	// 无效
	ORDER_TP_INVALID ORDER_TP = 0
	// 服务器版本
	ORDER_TP_EDITION ORDER_TP = 1
	// 年度用户
	ORDER_TP_ANNUAL_MEMBER ORDER_TP = 2
	// 空间成员
	ORDER_TP_SPACE_MEMBER ORDER_TP = 3
)

// Enum value maps for ORDER_TP.
var (
	ORDER_TP_name = map[int32]string{
		0: "TP_INVALID",
		1: "TP_EDITION",
		2: "TP_ANNUAL_MEMBER",
		3: "TP_SPACE_MEMBER",
	}
	ORDER_TP_value = map[string]int32{
		"TP_INVALID":       0,
		"TP_EDITION":       1,
		"TP_ANNUAL_MEMBER": 2,
		"TP_SPACE_MEMBER":  3,
	}
)

func (x ORDER_TP) Enum() *ORDER_TP {
	p := new(ORDER_TP)
	*p = x
	return p
}

func (x ORDER_TP) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDER_TP) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[9].Descriptor()
}

func (ORDER_TP) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[9]
}

func (x ORDER_TP) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDER_TP.Descriptor instead.
func (ORDER_TP) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{1, 2}
}

// CASE:OrderCase 标记如何创建订单，注意，这里不是标记订单类型。
// 因为，当我们讨论团购订单的时候，实际上有两种，一种是开团，一种是参团，我们需要区分这种.
// order服务应该根据这个类型来做分发，执行不同的逻辑
type ORDER_CASE int32

const (
	// 无效
	ORDER_CASE_INVALID ORDER_CASE = 0
	// 直接购买
	ORDER_CASE_NORMAL ORDER_CASE = 1
	// 开团
	ORDER_CASE_SPONSOR_GROUP ORDER_CASE = 2
	// 参团
	ORDER_CASE_PARTICIPANT_GROUP ORDER_CASE = 3
)

// Enum value maps for ORDER_CASE.
var (
	ORDER_CASE_name = map[int32]string{
		0: "CASE_INVALID",
		1: "CASE_NORMAL",
		2: "CASE_SPONSOR_GROUP",
		3: "CASE_PARTICIPANT_GROUP",
	}
	ORDER_CASE_value = map[string]int32{
		"CASE_INVALID":           0,
		"CASE_NORMAL":            1,
		"CASE_SPONSOR_GROUP":     2,
		"CASE_PARTICIPANT_GROUP": 3,
	}
)

func (x ORDER_CASE) Enum() *ORDER_CASE {
	p := new(ORDER_CASE)
	*p = x
	return p
}

func (x ORDER_CASE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDER_CASE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[10].Descriptor()
}

func (ORDER_CASE) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[10]
}

func (x ORDER_CASE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDER_CASE.Descriptor instead.
func (ORDER_CASE) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{1, 3}
}

// RR:RefundReason 退款原因
type ORDER_RR int32

const (
	// 无效枚举值
	ORDER_RR_INVALID ORDER_RR = 0
	// REFUND_REASON_GROUP_BUY_CANCEL
	ORDER_RR_GROUP_BUY_CANCEL ORDER_RR = 1
	// 用户申请退款
	ORDER_RR_USER_APPLY ORDER_RR = 2
)

// Enum value maps for ORDER_RR.
var (
	ORDER_RR_name = map[int32]string{
		0: "RR_INVALID",
		1: "RR_GROUP_BUY_CANCEL",
		2: "RR_USER_APPLY",
	}
	ORDER_RR_value = map[string]int32{
		"RR_INVALID":          0,
		"RR_GROUP_BUY_CANCEL": 1,
		"RR_USER_APPLY":       2,
	}
)

func (x ORDER_RR) Enum() *ORDER_RR {
	p := new(ORDER_RR)
	*p = x
	return p
}

func (x ORDER_RR) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDER_RR) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[11].Descriptor()
}

func (ORDER_RR) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[11]
}

func (x ORDER_RR) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDER_RR.Descriptor instead.
func (ORDER_RR) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{1, 4}
}

// PT:PriceType 付款类型
type ORDER_PT int32

const (
	// 无效类型
	ORDER_PT_INVALID ORDER_PT = 0
	// 总价
	ORDER_PT_TOTAL ORDER_PT = 1
	// 预付款
	ORDER_PT_PRE_PAY ORDER_PT = 2
)

// Enum value maps for ORDER_PT.
var (
	ORDER_PT_name = map[int32]string{
		0: "PT_INVALID",
		1: "PT_TOTAL",
		2: "PT_PRE_PAY",
	}
	ORDER_PT_value = map[string]int32{
		"PT_INVALID": 0,
		"PT_TOTAL":   1,
		"PT_PRE_PAY": 2,
	}
)

func (x ORDER_PT) Enum() *ORDER_PT {
	p := new(ORDER_PT)
	*p = x
	return p
}

func (x ORDER_PT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDER_PT) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[12].Descriptor()
}

func (ORDER_PT) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[12]
}

func (x ORDER_PT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDER_PT.Descriptor instead.
func (ORDER_PT) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{1, 5}
}

// GFW:GoodFreightWay
type ORDER_GFW int32

const (
	// FREE = 0;
	ORDER_GFW_INVALID ORDER_GFW = 0
	// 包邮
	ORDER_GFW_FREE ORDER_GFW = 1
)

// Enum value maps for ORDER_GFW.
var (
	ORDER_GFW_name = map[int32]string{
		0: "GFW_INVALID",
		1: "GFW_FREE",
	}
	ORDER_GFW_value = map[string]int32{
		"GFW_INVALID": 0,
		"GFW_FREE":    1,
	}
)

func (x ORDER_GFW) Enum() *ORDER_GFW {
	p := new(ORDER_GFW)
	*p = x
	return p
}

func (x ORDER_GFW) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDER_GFW) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[13].Descriptor()
}

func (ORDER_GFW) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[13]
}

func (x ORDER_GFW) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDER_GFW.Descriptor instead.
func (ORDER_GFW) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{1, 6}
}

// GBS:GroupBuyStatus
type ORDER_GBS int32

const (
	// 无效类型
	ORDER_GBS_INVALID ORDER_GBS = 0
	// 初始化
	ORDER_GBS_INIT ORDER_GBS = 1
	// 等待中
	ORDER_GBS_PENDING ORDER_GBS = 2
	// 成功
	ORDER_GBS_SUCCESS ORDER_GBS = 3
	// 失败
	ORDER_GBS_FAILED ORDER_GBS = 4
)

// Enum value maps for ORDER_GBS.
var (
	ORDER_GBS_name = map[int32]string{
		0: "GBS_INVALID",
		1: "GBS_INIT",
		2: "GBS_PENDING",
		3: "GBS_SUCCESS",
		4: "GBS_FAILED",
	}
	ORDER_GBS_value = map[string]int32{
		"GBS_INVALID": 0,
		"GBS_INIT":    1,
		"GBS_PENDING": 2,
		"GBS_SUCCESS": 3,
		"GBS_FAILED":  4,
	}
)

func (x ORDER_GBS) Enum() *ORDER_GBS {
	p := new(ORDER_GBS)
	*p = x
	return p
}

func (x ORDER_GBS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDER_GBS) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[14].Descriptor()
}

func (ORDER_GBS) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[14]
}

func (x ORDER_GBS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDER_GBS.Descriptor instead.
func (ORDER_GBS) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{1, 7}
}

// 2B还是2C的订单
type ORDER_TO int32

const (
	// 无效类型
	ORDER_TO_INVALID ORDER_TO = 0
	// TOB类型
	ORDER_TO_COMMUNITY ORDER_TO = 1
	// TO用户类型
	ORDER_TO_USER ORDER_TO = 2
)

// Enum value maps for ORDER_TO.
var (
	ORDER_TO_name = map[int32]string{
		0: "TO_INVALID",
		1: "TO_COMMUNITY",
		2: "TO_USER",
	}
	ORDER_TO_value = map[string]int32{
		"TO_INVALID":   0,
		"TO_COMMUNITY": 1,
		"TO_USER":      2,
	}
)

func (x ORDER_TO) Enum() *ORDER_TO {
	p := new(ORDER_TO)
	*p = x
	return p
}

func (x ORDER_TO) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ORDER_TO) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[15].Descriptor()
}

func (ORDER_TO) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[15]
}

func (x ORDER_TO) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ORDER_TO.Descriptor instead.
func (ORDER_TO) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{1, 8}
}

// CM:ChargeMethod 支付方式
type CG_CM int32

const (
	// 无效枚举值
	CG_CM_INVALID CG_CM = 0
	//------微信-------
	// 微信JSAPI支付，需要用户open_id，可以调起Native、JSAPI、APP、MINI支付(暂时无需使用)
	CG_CM_WC_JSAPI CG_CM = 10
	// 微信APP支付，APP内使用
	CG_CM_WC_APP CG_CM = 11
	// 微信H5支付(暂时无需使用)
	CG_CM_WC_H5 CG_CM = 12
	// 微信Native支付，PC端和线下使用
	// Native支付是指商户系统按微信支付协议生成支付二维码，用户再用微信“扫一扫”完成支付的模式。该模式适用于PC网站、实体店单品或订单、媒体广告支付等场景。
	CG_CM_WC_NATIVE CG_CM = 13
	// 微信小程序支付(暂时无需使用)
	CG_CM_WC_MINI CG_CM = 14
	//------支付宝-------
	// 支付宝APP支付，APP内使用
	CG_CM_AP_APP CG_CM = 20
	// 支付宝手机网站支付(暂时无需使用)
	CG_CM_AP_WAP CG_CM = 21
	// 支付宝电脑网站支付，PC端使用
	CG_CM_AP_PAGE CG_CM = 22
)

// Enum value maps for CG_CM.
var (
	CG_CM_name = map[int32]string{
		0:  "CM_INVALID",
		10: "CM_WC_JSAPI",
		11: "CM_WC_APP",
		12: "CM_WC_H5",
		13: "CM_WC_NATIVE",
		14: "CM_WC_MINI",
		20: "CM_AP_APP",
		21: "CM_AP_WAP",
		22: "CM_AP_PAGE",
	}
	CG_CM_value = map[string]int32{
		"CM_INVALID":   0,
		"CM_WC_JSAPI":  10,
		"CM_WC_APP":    11,
		"CM_WC_H5":     12,
		"CM_WC_NATIVE": 13,
		"CM_WC_MINI":   14,
		"CM_AP_APP":    20,
		"CM_AP_WAP":    21,
		"CM_AP_PAGE":   22,
	}
)

func (x CG_CM) Enum() *CG_CM {
	p := new(CG_CM)
	*p = x
	return p
}

func (x CG_CM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CG_CM) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[16].Descriptor()
}

func (CG_CM) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[16]
}

func (x CG_CM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CG_CM.Descriptor instead.
func (CG_CM) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{2, 0}
}

// CS:ChargeStatus 支付状态
type CG_CS int32

const (
	// 无效枚举值
	CG_CS_INVALID CG_CS = 0
	// 已创建支付
	CG_CS_CREATED CG_CS = 10
	// 已撤销支付
	CG_CS_REVERSED CG_CS = 11
	// 支付成功
	CG_CS_SUCC CG_CS = 20
	// 支付失败
	CG_CS_FAIL CG_CS = 21
)

// Enum value maps for CG_CS.
var (
	CG_CS_name = map[int32]string{
		0:  "CS_INVALID",
		10: "CS_CREATED",
		11: "CS_REVERSED",
		20: "CS_SUCC",
		21: "CS_FAIL",
	}
	CG_CS_value = map[string]int32{
		"CS_INVALID":  0,
		"CS_CREATED":  10,
		"CS_REVERSED": 11,
		"CS_SUCC":     20,
		"CS_FAIL":     21,
	}
)

func (x CG_CS) Enum() *CG_CS {
	p := new(CG_CS)
	*p = x
	return p
}

func (x CG_CS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CG_CS) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[17].Descriptor()
}

func (CG_CS) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[17]
}

func (x CG_CS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CG_CS.Descriptor instead.
func (CG_CS) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{2, 1}
}

// RefundStatus 退款状态
type CG_RS int32

const (
	// 无退款
	CG_RS_INVALID CG_RS = 0
	// 已发起退款
	CG_RS_CREATED CG_RS = 30
	// 已撤销退款
	CG_RS_REVERSED CG_RS = 31
	// 退款成功
	CG_RS_SUCC CG_RS = 32
	// 退款失败
	CG_RS_FAIL CG_RS = 33
)

// Enum value maps for CG_RS.
var (
	CG_RS_name = map[int32]string{
		0:  "RS_INVALID",
		30: "RS_CREATED",
		31: "RS_REVERSED",
		32: "RS_SUCC",
		33: "RS_FAIL",
	}
	CG_RS_value = map[string]int32{
		"RS_INVALID":  0,
		"RS_CREATED":  30,
		"RS_REVERSED": 31,
		"RS_SUCC":     32,
		"RS_FAIL":     33,
	}
)

func (x CG_RS) Enum() *CG_RS {
	p := new(CG_RS)
	*p = x
	return p
}

func (x CG_RS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CG_RS) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_shop_proto_enumTypes[18].Descriptor()
}

func (CG_RS) Type() protoreflect.EnumType {
	return &file_common_v1_enum_shop_proto_enumTypes[18]
}

func (x CG_RS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CG_RS.Descriptor instead.
func (CG_RS) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{2, 2}
}

// [enum 缩写原则]:
//  1. 超过4个字母后可以考虑缩写。
//  2. 省略元音与重复的字母，比如: TarGeT->TGT; NoTiFy -> NTF; STaTuS -> STS;
//  3. 多个单词组成，可以直接使用首字母，比如 UserAgent -> UA; UserAuthStatus -> UAS;
//  4. 一定要加上完整英文注释说明，比如 UA 上一行，必须注释『// UA:UserAgent 用户代理』
//
// GOOD:Good 商品相关枚举值
type GOOD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GOOD) Reset() {
	*x = GOOD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_enum_shop_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GOOD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GOOD) ProtoMessage() {}

func (x *GOOD) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_enum_shop_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GOOD.ProtoReflect.Descriptor instead.
func (*GOOD) Descriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{0}
}

// ORDER:Order 订单相关枚举值
type ORDER struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ORDER) Reset() {
	*x = ORDER{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_enum_shop_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ORDER) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ORDER) ProtoMessage() {}

func (x *ORDER) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_enum_shop_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ORDER.ProtoReflect.Descriptor instead.
func (*ORDER) Descriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{1}
}

// CG:Charge 支付枚举值
type CG struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CG) Reset() {
	*x = CG{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_enum_shop_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CG) ProtoMessage() {}

func (x *CG) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_enum_shop_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CG.ProtoReflect.Descriptor instead.
func (*CG) Descriptor() ([]byte, []int) {
	return file_common_v1_enum_shop_proto_rawDescGZIP(), []int{2}
}

var File_common_v1_enum_shop_proto protoreflect.FileDescriptor

var file_common_v1_enum_shop_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d,
	0x5f, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0xeb, 0x03, 0x0a, 0x04, 0x47, 0x4f, 0x4f, 0x44, 0x22,
	0x49, 0x0a, 0x02, 0x45, 0x53, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x53, 0x5f, 0x53, 0x41, 0x56, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x53, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53,
	0x48, 0x45, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x53, 0x5f, 0x41, 0x55, 0x44, 0x49,
	0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x45, 0x44, 0x10, 0x03, 0x22, 0x45, 0x0a, 0x03, 0x43, 0x50,
	0x54, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x50, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x50, 0x54, 0x5f, 0x43, 0x41, 0x53, 0x48, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x50, 0x54, 0x5f, 0x57, 0x48, 0x49, 0x54, 0x45, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x43, 0x50, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10,
	0x03, 0x22, 0x34, 0x0a, 0x04, 0x43, 0x50, 0x55, 0x54, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x50, 0x55,
	0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x50, 0x55, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x50, 0x55,
	0x54, 0x5f, 0x53, 0x4b, 0x55, 0x10, 0x02, 0x22, 0x37, 0x0a, 0x04, 0x43, 0x50, 0x52, 0x54, 0x12,
	0x10, 0x0a, 0x0c, 0x43, 0x50, 0x52, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x50, 0x52, 0x54, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x50, 0x52, 0x54, 0x5f, 0x53, 0x45, 0x4c, 0x46, 0x10, 0x02,
	0x22, 0x4a, 0x0a, 0x04, 0x43, 0x50, 0x55, 0x53, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x50, 0x55, 0x53,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x50,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x55, 0x53, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x50, 0x55, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x50,
	0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03, 0x22, 0x70, 0x0a, 0x06,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4e, 0x5f,
	0x53, 0x41, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x10, 0x04, 0x22, 0x24,
	0x0a, 0x02, 0x53, 0x54, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55,
	0x4c, 0x54, 0x10, 0x01, 0x22, 0xc0, 0x05, 0x0a, 0x05, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x22, 0x33,
	0x0a, 0x02, 0x4c, 0x53, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x53, 0x5f, 0x55, 0x4e, 0x5f, 0x4c, 0x4f,
	0x43, 0x4b, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x53, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45,
	0x44, 0x10, 0x02, 0x22, 0xa8, 0x01, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x5f,
	0x50, 0x41, 0x59, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x50, 0x41, 0x49, 0x44, 0x10, 0x14, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x1e, 0x12, 0x13, 0x0a, 0x0f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10,
	0x28, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x32, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x3c, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x46, 0x22, 0x4f,
	0x0a, 0x02, 0x54, 0x50, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x50, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x50, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x50, 0x5f, 0x41, 0x4e, 0x4e, 0x55, 0x41,
	0x4c, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x50,
	0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x03, 0x22,
	0x5d, 0x0a, 0x04, 0x43, 0x41, 0x53, 0x45, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x53, 0x45, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x41, 0x53,
	0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x41,
	0x53, 0x45, 0x5f, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x4f, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x41, 0x53, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49,
	0x43, 0x49, 0x50, 0x41, 0x4e, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x03, 0x22, 0x40,
	0x0a, 0x02, 0x52, 0x52, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x52, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x52, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50,
	0x5f, 0x42, 0x55, 0x59, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x52, 0x52, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x10, 0x02,
	0x22, 0x32, 0x0a, 0x02, 0x50, 0x54, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x54, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x54, 0x5f, 0x54, 0x4f, 0x54,
	0x41, 0x4c, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x54, 0x5f, 0x50, 0x52, 0x45, 0x5f, 0x50,
	0x41, 0x59, 0x10, 0x02, 0x22, 0x24, 0x0a, 0x03, 0x47, 0x46, 0x57, 0x12, 0x0f, 0x0a, 0x0b, 0x47,
	0x46, 0x57, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x47, 0x46, 0x57, 0x5f, 0x46, 0x52, 0x45, 0x45, 0x10, 0x01, 0x22, 0x56, 0x0a, 0x03, 0x47, 0x42,
	0x53, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x42, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x42, 0x53, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x42, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x42, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x42, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x04, 0x22, 0x33, 0x0a, 0x02, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x4f, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x4f, 0x5f, 0x43,
	0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x54, 0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x4f,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x02, 0x22, 0xbb, 0x02, 0x0a, 0x02, 0x43, 0x47, 0x22, 0x92,
	0x01, 0x0a, 0x02, 0x43, 0x4d, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4d, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4d, 0x5f, 0x57, 0x43, 0x5f, 0x4a,
	0x53, 0x41, 0x50, 0x49, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4d, 0x5f, 0x57, 0x43, 0x5f,
	0x41, 0x50, 0x50, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4d, 0x5f, 0x57, 0x43, 0x5f, 0x48,
	0x35, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4d, 0x5f, 0x57, 0x43, 0x5f, 0x4e, 0x41, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x0d, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4d, 0x5f, 0x57, 0x43, 0x5f, 0x4d,
	0x49, 0x4e, 0x49, 0x10, 0x0e, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4d, 0x5f, 0x41, 0x50, 0x5f, 0x41,
	0x50, 0x50, 0x10, 0x14, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4d, 0x5f, 0x41, 0x50, 0x5f, 0x57, 0x41,
	0x50, 0x10, 0x15, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4d, 0x5f, 0x41, 0x50, 0x5f, 0x50, 0x41, 0x47,
	0x45, 0x10, 0x16, 0x22, 0x4f, 0x0a, 0x02, 0x43, 0x53, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x53, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x53, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x53, 0x5f,
	0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x44, 0x10, 0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x53,
	0x5f, 0x53, 0x55, 0x43, 0x43, 0x10, 0x14, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x53, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x10, 0x15, 0x22, 0x4f, 0x0a, 0x02, 0x52, 0x53, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x53,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x53,
	0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x1e, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x53,
	0x5f, 0x52, 0x45, 0x56, 0x45, 0x52, 0x53, 0x45, 0x44, 0x10, 0x1f, 0x12, 0x0b, 0x0a, 0x07, 0x52,
	0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x10, 0x20, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x53, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x10, 0x21, 0x42, 0x84, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x45, 0x6e, 0x75, 0x6d, 0x53, 0x68, 0x6f,
	0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1f, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x70,
	0x6f, 0x73, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa,
	0x02, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_v1_enum_shop_proto_rawDescOnce sync.Once
	file_common_v1_enum_shop_proto_rawDescData = file_common_v1_enum_shop_proto_rawDesc
)

func file_common_v1_enum_shop_proto_rawDescGZIP() []byte {
	file_common_v1_enum_shop_proto_rawDescOnce.Do(func() {
		file_common_v1_enum_shop_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_v1_enum_shop_proto_rawDescData)
	})
	return file_common_v1_enum_shop_proto_rawDescData
}

var file_common_v1_enum_shop_proto_enumTypes = make([]protoimpl.EnumInfo, 19)
var file_common_v1_enum_shop_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_common_v1_enum_shop_proto_goTypes = []interface{}{
	(GOOD_ES)(0),      // 0: common.v1.GOOD.ES
	(GOOD_CPT)(0),     // 1: common.v1.GOOD.CPT
	(GOOD_CPUT)(0),    // 2: common.v1.GOOD.CPUT
	(GOOD_CPRT)(0),    // 3: common.v1.GOOD.CPRT
	(GOOD_CPUS)(0),    // 4: common.v1.GOOD.CPUS
	(GOOD_STATUS)(0),  // 5: common.v1.GOOD.STATUS
	(GOOD_ST)(0),      // 6: common.v1.GOOD.ST
	(ORDER_LS)(0),     // 7: common.v1.ORDER.LS
	(ORDER_STATUS)(0), // 8: common.v1.ORDER.STATUS
	(ORDER_TP)(0),     // 9: common.v1.ORDER.TP
	(ORDER_CASE)(0),   // 10: common.v1.ORDER.CASE
	(ORDER_RR)(0),     // 11: common.v1.ORDER.RR
	(ORDER_PT)(0),     // 12: common.v1.ORDER.PT
	(ORDER_GFW)(0),    // 13: common.v1.ORDER.GFW
	(ORDER_GBS)(0),    // 14: common.v1.ORDER.GBS
	(ORDER_TO)(0),     // 15: common.v1.ORDER.TO
	(CG_CM)(0),        // 16: common.v1.CG.CM
	(CG_CS)(0),        // 17: common.v1.CG.CS
	(CG_RS)(0),        // 18: common.v1.CG.RS
	(*GOOD)(nil),      // 19: common.v1.GOOD
	(*ORDER)(nil),     // 20: common.v1.ORDER
	(*CG)(nil),        // 21: common.v1.CG
}
var file_common_v1_enum_shop_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_v1_enum_shop_proto_init() }
func file_common_v1_enum_shop_proto_init() {
	if File_common_v1_enum_shop_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_v1_enum_shop_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GOOD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_enum_shop_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ORDER); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_enum_shop_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CG); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_v1_enum_shop_proto_rawDesc,
			NumEnums:      19,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_enum_shop_proto_goTypes,
		DependencyIndexes: file_common_v1_enum_shop_proto_depIdxs,
		EnumInfos:         file_common_v1_enum_shop_proto_enumTypes,
		MessageInfos:      file_common_v1_enum_shop_proto_msgTypes,
	}.Build()
	File_common_v1_enum_shop_proto = out.File
	file_common_v1_enum_shop_proto_rawDesc = nil
	file_common_v1_enum_shop_proto_goTypes = nil
	file_common_v1_enum_shop_proto_depIdxs = nil
}
