// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: common/v1/file.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 文件信息
type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文件节点ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// GUID
	Guid string `protobuf:"bytes,2,opt,name=guid,proto3" json:"guid,omitempty"`
	// 名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 文件大小
	Size int64 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	// 内容key
	ContentKey string `protobuf:"bytes,6,opt,name=contentKey,proto3" json:"contentKey,omitempty"`
	// 创建时间
	Ctime int64 `protobuf:"varint,7,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 更新时间
	Utime int64 `protobuf:"varint,8,opt,name=utime,proto3" json:"utime,omitempty"`
	// 创建人用户ID
	CreatedUid int64 `protobuf:"varint,9,opt,name=createdUid,proto3" json:"createdUid,omitempty"`
	// 更新人用户ID
	UpdatedUid int64 `protobuf:"varint,10,opt,name=updatedUid,proto3" json:"updatedUid,omitempty"`
	// 文件类型
	Type FILE_TYPE `protobuf:"varint,12,opt,name=type,proto3,enum=common.v1.FILE_TYPE" json:"type,omitempty"`
	// 文件格式
	Format FILE_FORMAT `protobuf:"varint,13,opt,name=format,proto3,enum=common.v1.FILE_FORMAT" json:"format,omitempty"`
	// 文件状态
	Status FILE_STATUS `protobuf:"varint,14,opt,name=status,proto3,enum=common.v1.FILE_STATUS" json:"status,omitempty"`
	// 回复总数
	CntComment int64 `protobuf:"varint,15,opt,name=cntComment,proto3" json:"cntComment,omitempty"`
	// 查看总数
	CntView int32 `protobuf:"varint,16,opt,name=cntView,proto3" json:"cntView,omitempty"`
	// 收藏总数
	CntCollect int32 `protobuf:"varint,17,opt,name=cntCollect,proto3" json:"cntCollect,omitempty"`
	// head image
	HeadImage string `protobuf:"bytes,18,opt,name=headImage,proto3" json:"headImage,omitempty"`
	// 是否允许创建评论
	IsAllowCreateComment int32 `protobuf:"varint,19,opt,name=isAllowCreateComment,proto3" json:"isAllowCreateComment,omitempty"`
	// emoji info
	List []*EmojiInfo `protobuf:"bytes,20,rep,name=list,proto3" json:"list,omitempty"`
	// 节点类型
	Node FILE_NODE `protobuf:"varint,21,opt,name=node,proto3,enum=common.v1.FILE_NODE" json:"node,omitempty"`
	// 父节点guid
	ParentGuid string `protobuf:"bytes,22,opt,name=parentGuid,proto3" json:"parentGuid,omitempty"`
	// 内容url
	ContentUrl string `protobuf:"bytes,23,opt,name=contentUrl,proto3" json:"contentUrl,omitempty"`
	// 业务状态
	BizStatus FILE_BIZSTS `protobuf:"varint,24,opt,name=bizStatus,proto3,enum=common.v1.FILE_BIZSTS" json:"bizStatus,omitempty"`
	// 排序号
	Sort int64 `protobuf:"varint,25,opt,name=sort,proto3" json:"sort,omitempty"`
	// ip定位的地址, 暂时精确到省
	IpLocation string `protobuf:"bytes,26,opt,name=ipLocation,proto3" json:"ipLocation,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_common_v1_file_proto_rawDescGZIP(), []int{0}
}

func (x *FileInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileInfo) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileInfo) GetContentKey() string {
	if x != nil {
		return x.ContentKey
	}
	return ""
}

func (x *FileInfo) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *FileInfo) GetUtime() int64 {
	if x != nil {
		return x.Utime
	}
	return 0
}

func (x *FileInfo) GetCreatedUid() int64 {
	if x != nil {
		return x.CreatedUid
	}
	return 0
}

func (x *FileInfo) GetUpdatedUid() int64 {
	if x != nil {
		return x.UpdatedUid
	}
	return 0
}

func (x *FileInfo) GetType() FILE_TYPE {
	if x != nil {
		return x.Type
	}
	return FILE_TYPE_INVALID
}

func (x *FileInfo) GetFormat() FILE_FORMAT {
	if x != nil {
		return x.Format
	}
	return FILE_FORMAT_INVALID
}

func (x *FileInfo) GetStatus() FILE_STATUS {
	if x != nil {
		return x.Status
	}
	return FILE_STATUS_INVALID
}

func (x *FileInfo) GetCntComment() int64 {
	if x != nil {
		return x.CntComment
	}
	return 0
}

func (x *FileInfo) GetCntView() int32 {
	if x != nil {
		return x.CntView
	}
	return 0
}

func (x *FileInfo) GetCntCollect() int32 {
	if x != nil {
		return x.CntCollect
	}
	return 0
}

func (x *FileInfo) GetHeadImage() string {
	if x != nil {
		return x.HeadImage
	}
	return ""
}

func (x *FileInfo) GetIsAllowCreateComment() int32 {
	if x != nil {
		return x.IsAllowCreateComment
	}
	return 0
}

func (x *FileInfo) GetList() []*EmojiInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FileInfo) GetNode() FILE_NODE {
	if x != nil {
		return x.Node
	}
	return FILE_NODE_INVALID
}

func (x *FileInfo) GetParentGuid() string {
	if x != nil {
		return x.ParentGuid
	}
	return ""
}

func (x *FileInfo) GetContentUrl() string {
	if x != nil {
		return x.ContentUrl
	}
	return ""
}

func (x *FileInfo) GetBizStatus() FILE_BIZSTS {
	if x != nil {
		return x.BizStatus
	}
	return FILE_BIZSTS_INVALID
}

func (x *FileInfo) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *FileInfo) GetIpLocation() string {
	if x != nil {
		return x.IpLocation
	}
	return ""
}

type EmojiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 表情编码
	Emoji string `protobuf:"bytes,2,opt,name=emoji,proto3" json:"emoji,omitempty"`
	// 计数
	Cnt int32 `protobuf:"varint,3,opt,name=cnt,proto3" json:"cnt,omitempty"`
}

func (x *EmojiInfo) Reset() {
	*x = EmojiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_file_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmojiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmojiInfo) ProtoMessage() {}

func (x *EmojiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_file_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmojiInfo.ProtoReflect.Descriptor instead.
func (*EmojiInfo) Descriptor() ([]byte, []int) {
	return file_common_v1_file_proto_rawDescGZIP(), []int{1}
}

func (x *EmojiInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EmojiInfo) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

func (x *EmojiInfo) GetCnt() int32 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

// 前端上传所需配置
type UploadConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 取悦
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// akID
	AccessKeyId string `protobuf:"bytes,2,opt,name=accessKeyId,proto3" json:"accessKeyId,omitempty"`
	// akSecret
	AccessKeySecret string `protobuf:"bytes,3,opt,name=accessKeySecret,proto3" json:"accessKeySecret,omitempty"`
	// stsToken
	StsToken string `protobuf:"bytes,4,opt,name=stsToken,proto3" json:"stsToken,omitempty"`
	// bucket
	Bucket string `protobuf:"bytes,5,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// cdn 名称
	CdnName string `protobuf:"bytes,6,opt,name=cdnName,proto3" json:"cdnName,omitempty"`
	// 过期时间(秒)
	Expiration string `protobuf:"bytes,7,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *UploadConf) Reset() {
	*x = UploadConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_file_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadConf) ProtoMessage() {}

func (x *UploadConf) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_file_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadConf.ProtoReflect.Descriptor instead.
func (*UploadConf) Descriptor() ([]byte, []int) {
	return file_common_v1_file_proto_rawDescGZIP(), []int{2}
}

func (x *UploadConf) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UploadConf) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *UploadConf) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *UploadConf) GetStsToken() string {
	if x != nil {
		return x.StsToken
	}
	return ""
}

func (x *UploadConf) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *UploadConf) GetCdnName() string {
	if x != nil {
		return x.CdnName
	}
	return ""
}

func (x *UploadConf) GetExpiration() string {
	if x != nil {
		return x.Expiration
	}
	return ""
}

// 文章展示信息
type FileShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文章GUID
	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	// 文章标题
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 用户uid
	Uid int64 `protobuf:"varint,3,opt,name=uid,proto3" json:"uid,omitempty"`
	// 用户名
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	// 用户昵称
	Nickname string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// 用户头像
	Avatar string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	// 创建时间
	Ctime int64 `protobuf:"varint,7,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 回复总数
	CntComment int64 `protobuf:"varint,8,opt,name=cntComment,proto3" json:"cntComment,omitempty"`
	// 查看总数
	CntView int64 `protobuf:"varint,9,opt,name=cntView,proto3" json:"cntView,omitempty"`
	// 收藏总数
	CntCollect int64 `protobuf:"varint,10,opt,name=cntCollect,proto3" json:"cntCollect,omitempty"`
	// headImage
	HeadImage string `protobuf:"bytes,11,opt,name=headImage,proto3" json:"headImage,omitempty"`
	// 空间Guid
	SpaceGuid string `protobuf:"bytes,13,opt,name=spaceGuid,proto3" json:"spaceGuid,omitempty"`
	// 是否允许创建评论
	IsAllowCreateComment int32 `protobuf:"varint,14,opt,name=isAllowCreateComment,proto3" json:"isAllowCreateComment,omitempty"`
	// 是否置顶
	IsSiteTop int32 `protobuf:"varint,15,opt,name=isSiteTop,proto3" json:"isSiteTop,omitempty"`
	// 是否推荐
	IsRecommend int32 `protobuf:"varint,16,opt,name=isRecommend,proto3" json:"isRecommend,omitempty"`
	// 文档格式
	Format FILE_FORMAT `protobuf:"varint,17,opt,name=format,proto3,enum=common.v1.FILE_FORMAT" json:"format,omitempty"`
	// emoji list 文章的数据个数
	EmojiList []*EmojiInfo `protobuf:"bytes,18,rep,name=emojiList,proto3" json:"emojiList,omitempty"`
	// 为了速度快，不得不搞这个content，如果是列表就有他，如果不是列表就没他
	Content string `protobuf:"bytes,19,opt,name=content,proto3" json:"content,omitempty"`
	// ip定位的地址, 暂时精确到省
	IpLocation string `protobuf:"bytes,20,opt,name=ipLocation,proto3" json:"ipLocation,omitempty"`
}

func (x *FileShow) Reset() {
	*x = FileShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_file_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileShow) ProtoMessage() {}

func (x *FileShow) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_file_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileShow.ProtoReflect.Descriptor instead.
func (*FileShow) Descriptor() ([]byte, []int) {
	return file_common_v1_file_proto_rawDescGZIP(), []int{3}
}

func (x *FileShow) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *FileShow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileShow) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FileShow) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FileShow) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *FileShow) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FileShow) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *FileShow) GetCntComment() int64 {
	if x != nil {
		return x.CntComment
	}
	return 0
}

func (x *FileShow) GetCntView() int64 {
	if x != nil {
		return x.CntView
	}
	return 0
}

func (x *FileShow) GetCntCollect() int64 {
	if x != nil {
		return x.CntCollect
	}
	return 0
}

func (x *FileShow) GetHeadImage() string {
	if x != nil {
		return x.HeadImage
	}
	return ""
}

func (x *FileShow) GetSpaceGuid() string {
	if x != nil {
		return x.SpaceGuid
	}
	return ""
}

func (x *FileShow) GetIsAllowCreateComment() int32 {
	if x != nil {
		return x.IsAllowCreateComment
	}
	return 0
}

func (x *FileShow) GetIsSiteTop() int32 {
	if x != nil {
		return x.IsSiteTop
	}
	return 0
}

func (x *FileShow) GetIsRecommend() int32 {
	if x != nil {
		return x.IsRecommend
	}
	return 0
}

func (x *FileShow) GetFormat() FILE_FORMAT {
	if x != nil {
		return x.Format
	}
	return FILE_FORMAT_INVALID
}

func (x *FileShow) GetEmojiList() []*EmojiInfo {
	if x != nil {
		return x.EmojiList
	}
	return nil
}

func (x *FileShow) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *FileShow) GetIpLocation() string {
	if x != nil {
		return x.IpLocation
	}
	return ""
}

var File_common_v1_file_proto protoreflect.FileDescriptor

var file_common_v1_file_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x1a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75,
	0x6d, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x06, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x75, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x69,
	0x64, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45,
	0x2e, 0x54, 0x59, 0x50, 0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x46, 0x4f, 0x52,
	0x4d, 0x41, 0x54, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6e, 0x74, 0x56, 0x69, 0x65, 0x77, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x6e,
	0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x14, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45,
	0x2e, 0x4e, 0x4f, 0x44, 0x45, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x09, 0x62,
	0x69, 0x7a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x49, 0x4c, 0x45, 0x2e,
	0x42, 0x49, 0x5a, 0x53, 0x54, 0x53, 0x52, 0x09, 0x62, 0x69, 0x7a, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x70, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x09, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x6e, 0x74, 0x22, 0xde, 0x01, 0x0a, 0x0a, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x74, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x74, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x64, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x64, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd2, 0x04, 0x0a, 0x08,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6e,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6e, 0x74, 0x56,
	0x69, 0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x6e, 0x74, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x75, 0x69, 0x64, 0x12, 0x32,
	0x0a, 0x14, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x69, 0x73,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x53, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x53, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x70,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x49, 0x4c, 0x45, 0x2e, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x80, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x42, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x1f, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_v1_file_proto_rawDescOnce sync.Once
	file_common_v1_file_proto_rawDescData = file_common_v1_file_proto_rawDesc
)

func file_common_v1_file_proto_rawDescGZIP() []byte {
	file_common_v1_file_proto_rawDescOnce.Do(func() {
		file_common_v1_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_v1_file_proto_rawDescData)
	})
	return file_common_v1_file_proto_rawDescData
}

var file_common_v1_file_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_common_v1_file_proto_goTypes = []interface{}{
	(*FileInfo)(nil),   // 0: common.v1.FileInfo
	(*EmojiInfo)(nil),  // 1: common.v1.EmojiInfo
	(*UploadConf)(nil), // 2: common.v1.UploadConf
	(*FileShow)(nil),   // 3: common.v1.FileShow
	(FILE_TYPE)(0),     // 4: common.v1.FILE.TYPE
	(FILE_FORMAT)(0),   // 5: common.v1.FILE.FORMAT
	(FILE_STATUS)(0),   // 6: common.v1.FILE.STATUS
	(FILE_NODE)(0),     // 7: common.v1.FILE.NODE
	(FILE_BIZSTS)(0),   // 8: common.v1.FILE.BIZSTS
}
var file_common_v1_file_proto_depIdxs = []int32{
	4, // 0: common.v1.FileInfo.type:type_name -> common.v1.FILE.TYPE
	5, // 1: common.v1.FileInfo.format:type_name -> common.v1.FILE.FORMAT
	6, // 2: common.v1.FileInfo.status:type_name -> common.v1.FILE.STATUS
	1, // 3: common.v1.FileInfo.list:type_name -> common.v1.EmojiInfo
	7, // 4: common.v1.FileInfo.node:type_name -> common.v1.FILE.NODE
	8, // 5: common.v1.FileInfo.bizStatus:type_name -> common.v1.FILE.BIZSTS
	5, // 6: common.v1.FileShow.format:type_name -> common.v1.FILE.FORMAT
	1, // 7: common.v1.FileShow.emojiList:type_name -> common.v1.EmojiInfo
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_common_v1_file_proto_init() }
func file_common_v1_file_proto_init() {
	if File_common_v1_file_proto != nil {
		return
	}
	file_common_v1_enum_file_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_common_v1_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_file_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmojiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_file_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_file_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_v1_file_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_file_proto_goTypes,
		DependencyIndexes: file_common_v1_file_proto_depIdxs,
		MessageInfos:      file_common_v1_file_proto_msgTypes,
	}.Build()
	File_common_v1_file_proto = out.File
	file_common_v1_file_proto_rawDesc = nil
	file_common_v1_file_proto_goTypes = nil
	file_common_v1_file_proto_depIdxs = nil
}
