// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: common/v1/enum_space.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 空间类型
//
//	enum TYPE {
//	  // 无效枚举值
//	  TYPE_INVALID = 0;
//	  // 帖子
//	  TYPE_ARTICLE = 1;
//	  // 问答
//	  TYPE_QUESTION = 2;
//	  // IM 聊天
//	  TYPE_IM = 3;
//	  // 活动
//	  TYPE_ACTIVITY = 4;
//	  // 云盘
//	  TYPE_DRIVE = 5;
//	  // 专栏
//	  TYPE_COLUMN = 6;
//	  // 第三方
//	  //    TYPE_THIRD = 6;
//
//	}
//
// THIRD:SpaceThirdType 空间第三方类型
//
//	enum THIRD {
//	  // EMPTY
//	  THIRD_EMPTY = 0;
//	  // github
//	  THIRD_GITHUB = 1;
//	}
//
// LAYOUT:SpaceLayout 空间布局
type SPC_LAYOUT int32

const (
	// EMPTY
	SPC_LAYOUT_EMPTY SPC_LAYOUT = 0
	// 列表模式
	SPC_LAYOUT_ARTICLE_LIST SPC_LAYOUT = 1
	// 卡牌流模式
	SPC_LAYOUT_ARTICLE_CARD SPC_LAYOUT = 2
	// FEED流模式
	SPC_LAYOUT_ARTICLE_FEED SPC_LAYOUT = 3
	// 树型流模式
	SPC_LAYOUT_ARTICLE_TREE SPC_LAYOUT = 4
)

// Enum value maps for SPC_LAYOUT.
var (
	SPC_LAYOUT_name = map[int32]string{
		0: "LAYOUT_EMPTY",
		1: "LAYOUT_ARTICLE_LIST",
		2: "LAYOUT_ARTICLE_CARD",
		3: "LAYOUT_ARTICLE_FEED",
		4: "LAYOUT_ARTICLE_TREE",
	}
	SPC_LAYOUT_value = map[string]int32{
		"LAYOUT_EMPTY":        0,
		"LAYOUT_ARTICLE_LIST": 1,
		"LAYOUT_ARTICLE_CARD": 2,
		"LAYOUT_ARTICLE_FEED": 3,
		"LAYOUT_ARTICLE_TREE": 4,
	}
)

func (x SPC_LAYOUT) Enum() *SPC_LAYOUT {
	p := new(SPC_LAYOUT)
	*p = x
	return p
}

func (x SPC_LAYOUT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SPC_LAYOUT) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_space_proto_enumTypes[0].Descriptor()
}

func (SPC_LAYOUT) Type() protoreflect.EnumType {
	return &file_common_v1_enum_space_proto_enumTypes[0]
}

func (x SPC_LAYOUT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SPC_LAYOUT.Descriptor instead.
func (SPC_LAYOUT) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_space_proto_rawDescGZIP(), []int{0, 0}
}

// ROLE:SpaceRole 空间权限
type SPC_ROLE int32

const (
	// 非法状态
	SPC_ROLE_INVALID SPC_ROLE = 0
	// 没有权限状态
	SPC_ROLE_NO_ACCESS SPC_ROLE = 1
	// 可以查看
	SPC_ROLE_VIEWER SPC_ROLE = 2
	// 可以查看，可以评论
	SPC_ROLE_COMMENTER SPC_ROLE = 3
	// 可以编辑
	SPC_ROLE_EDITOR SPC_ROLE = 4
	// 所有权限状态
	SPC_ROLE_FULL_ACCESS SPC_ROLE = 99
)

// Enum value maps for SPC_ROLE.
var (
	SPC_ROLE_name = map[int32]string{
		0:  "ROLE_INVALID",
		1:  "ROLE_NO_ACCESS",
		2:  "ROLE_VIEWER",
		3:  "ROLE_COMMENTER",
		4:  "ROLE_EDITOR",
		99: "ROLE_FULL_ACCESS",
	}
	SPC_ROLE_value = map[string]int32{
		"ROLE_INVALID":     0,
		"ROLE_NO_ACCESS":   1,
		"ROLE_VIEWER":      2,
		"ROLE_COMMENTER":   3,
		"ROLE_EDITOR":      4,
		"ROLE_FULL_ACCESS": 99,
	}
)

func (x SPC_ROLE) Enum() *SPC_ROLE {
	p := new(SPC_ROLE)
	*p = x
	return p
}

func (x SPC_ROLE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SPC_ROLE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_space_proto_enumTypes[1].Descriptor()
}

func (SPC_ROLE) Type() protoreflect.EnumType {
	return &file_common_v1_enum_space_proto_enumTypes[1]
}

func (x SPC_ROLE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SPC_ROLE.Descriptor instead.
func (SPC_ROLE) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_space_proto_rawDescGZIP(), []int{0, 1}
}

// OPTION:可选项
type SPC_OPTION int32

const (
	// 无效
	SPC_OPTION_INVALID SPC_OPTION = 0
	// 文件下允许创建新文件
	SPC_OPTION_FILE_IS_ALLOW_CREATE_FILE SPC_OPTION = 101
	// 文件下允许评论
	SPC_OPTION_FILE_IS_ALLOW_CREATE_COMMENT SPC_OPTION = 102
	// 文件默认排序
	SPC_OPTION_FILE_DEFAULT_SORT SPC_OPTION = 103
	// 文件TOP
	SPC_OPTION_SITE_TOP_FILE_SHOW_ALL SPC_OPTION = 104
)

// Enum value maps for SPC_OPTION.
var (
	SPC_OPTION_name = map[int32]string{
		0:   "OPTION_INVALID",
		101: "OPTION_FILE_IS_ALLOW_CREATE_FILE",
		102: "OPTION_FILE_IS_ALLOW_CREATE_COMMENT",
		103: "OPTION_FILE_DEFAULT_SORT",
		104: "OPTION_SITE_TOP_FILE_SHOW_ALL",
	}
	SPC_OPTION_value = map[string]int32{
		"OPTION_INVALID":                      0,
		"OPTION_FILE_IS_ALLOW_CREATE_FILE":    101,
		"OPTION_FILE_IS_ALLOW_CREATE_COMMENT": 102,
		"OPTION_FILE_DEFAULT_SORT":            103,
		"OPTION_SITE_TOP_FILE_SHOW_ALL":       104,
	}
)

func (x SPC_OPTION) Enum() *SPC_OPTION {
	p := new(SPC_OPTION)
	*p = x
	return p
}

func (x SPC_OPTION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SPC_OPTION) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_space_proto_enumTypes[2].Descriptor()
}

func (SPC_OPTION) Type() protoreflect.EnumType {
	return &file_common_v1_enum_space_proto_enumTypes[2]
}

func (x SPC_OPTION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SPC_OPTION.Descriptor instead.
func (SPC_OPTION) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_space_proto_rawDescGZIP(), []int{0, 2}
}

// OPTION_TYPE:可选项
type SPC_OPTION_TYPE int32

const (
	// 无效
	SPC_OPTION_TYPE_INVALID SPC_OPTION_TYPE = 0
	// OPTION_TYPE_SWITCH
	SPC_OPTION_TYPE_SWITCH SPC_OPTION_TYPE = 1
	// OPTION_TYPE_SELECT
	SPC_OPTION_TYPE_SELECT SPC_OPTION_TYPE = 2
)

// Enum value maps for SPC_OPTION_TYPE.
var (
	SPC_OPTION_TYPE_name = map[int32]string{
		0: "OPTION_TYPE_INVALID",
		1: "OPTION_TYPE_SWITCH",
		2: "OPTION_TYPE_SELECT",
	}
	SPC_OPTION_TYPE_value = map[string]int32{
		"OPTION_TYPE_INVALID": 0,
		"OPTION_TYPE_SWITCH":  1,
		"OPTION_TYPE_SELECT":  2,
	}
)

func (x SPC_OPTION_TYPE) Enum() *SPC_OPTION_TYPE {
	p := new(SPC_OPTION_TYPE)
	*p = x
	return p
}

func (x SPC_OPTION_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SPC_OPTION_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_space_proto_enumTypes[3].Descriptor()
}

func (SPC_OPTION_TYPE) Type() protoreflect.EnumType {
	return &file_common_v1_enum_space_proto_enumTypes[3]
}

func (x SPC_OPTION_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SPC_OPTION_TYPE.Descriptor instead.
func (SPC_OPTION_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_space_proto_rawDescGZIP(), []int{0, 3}
}

// ChargeType:收费类型
type SPC_CT int32

const (
	// 未知类型
	SPC_CT_INVALID SPC_CT = 0
	// 免费
	SPC_CT_FREE SPC_CT = 1
	// 一次买断
	SPC_CT_BUYOUT SPC_CT = 2
	// 会员制
	SPC_CT_MEMBERSHIP SPC_CT = 3
)

// Enum value maps for SPC_CT.
var (
	SPC_CT_name = map[int32]string{
		0: "CT_INVALID",
		1: "CT_FREE",
		2: "CT_BUYOUT",
		3: "CT_MEMBERSHIP",
	}
	SPC_CT_value = map[string]int32{
		"CT_INVALID":    0,
		"CT_FREE":       1,
		"CT_BUYOUT":     2,
		"CT_MEMBERSHIP": 3,
	}
)

func (x SPC_CT) Enum() *SPC_CT {
	p := new(SPC_CT)
	*p = x
	return p
}

func (x SPC_CT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SPC_CT) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_space_proto_enumTypes[4].Descriptor()
}

func (SPC_CT) Type() protoreflect.EnumType {
	return &file_common_v1_enum_space_proto_enumTypes[4]
}

func (x SPC_CT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SPC_CT.Descriptor instead.
func (SPC_CT) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_space_proto_rawDescGZIP(), []int{0, 4}
}

// Access:可访问配置
type SPC_ACS int32

const (
	// 未知类型
	SPC_ACS_INVALID SPC_ACS = 0
	// 可公开访问，（管理员仍可手动添加），任何能进入到社区的用户都能访问此空间
	SPC_ACS_OPEN SPC_ACS = 1
	// 私密访问，外部用户禁止进入空间（管理员仍可手动添加）
	SPC_ACS_DENY_ALL SPC_ACS = 2
	// 私密访问，外部用户主动申请（管理员仍可手动添加），才能加入此空间
	SPC_ACS_USER_APPLY SPC_ACS = 3
	// 私密访问，外部用户购买资格（管理员仍可手动添加），才能加入此空间
	SPC_ACS_USER_PAY SPC_ACS = 4
)

// Enum value maps for SPC_ACS.
var (
	SPC_ACS_name = map[int32]string{
		0: "ACS_INVALID",
		1: "ACS_OPEN",
		2: "ACS_DENY_ALL",
		3: "ACS_USER_APPLY",
		4: "ACS_USER_PAY",
	}
	SPC_ACS_value = map[string]int32{
		"ACS_INVALID":    0,
		"ACS_OPEN":       1,
		"ACS_DENY_ALL":   2,
		"ACS_USER_APPLY": 3,
		"ACS_USER_PAY":   4,
	}
)

func (x SPC_ACS) Enum() *SPC_ACS {
	p := new(SPC_ACS)
	*p = x
	return p
}

func (x SPC_ACS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SPC_ACS) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_space_proto_enumTypes[5].Descriptor()
}

func (SPC_ACS) Type() protoreflect.EnumType {
	return &file_common_v1_enum_space_proto_enumTypes[5]
}

func (x SPC_ACS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SPC_ACS.Descriptor instead.
func (SPC_ACS) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_space_proto_rawDescGZIP(), []int{0, 5}
}

// SPC:Space 空间相关枚举值
type SPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SPC) Reset() {
	*x = SPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_enum_space_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPC) ProtoMessage() {}

func (x *SPC) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_enum_space_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPC.ProtoReflect.Descriptor instead.
func (*SPC) Descriptor() ([]byte, []int) {
	return file_common_v1_enum_space_proto_rawDescGZIP(), []int{0}
}

var File_common_v1_enum_space_proto protoreflect.FileDescriptor

var file_common_v1_enum_space_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d,
	0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0xa9, 0x05, 0x0a, 0x03, 0x53, 0x50, 0x43, 0x22,
	0x7e, 0x0a, 0x06, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x41, 0x59,
	0x4f, 0x55, 0x54, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4c,
	0x41, 0x59, 0x4f, 0x55, 0x54, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x4c, 0x49,
	0x53, 0x54, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x5f, 0x41,
	0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x17, 0x0a,
	0x13, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f,
	0x46, 0x45, 0x45, 0x44, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54,
	0x5f, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x54, 0x52, 0x45, 0x45, 0x10, 0x04, 0x22,
	0x78, 0x0a, 0x04, 0x52, 0x4f, 0x4c, 0x45, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x4f, 0x4c, 0x45, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x4f, 0x4c,
	0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0f, 0x0a,
	0x0b, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x45, 0x52, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x45, 0x52,
	0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x4f,
	0x52, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x46, 0x55, 0x4c, 0x4c,
	0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x63, 0x22, 0xac, 0x01, 0x0a, 0x06, 0x4f, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x4f, 0x50, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x65, 0x12, 0x27,
	0x0a, 0x23, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x49, 0x53,
	0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f,
	0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x66, 0x12, 0x1c, 0x0a, 0x18, 0x4f, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x53,
	0x4f, 0x52, 0x54, 0x10, 0x67, 0x12, 0x21, 0x0a, 0x1d, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x53, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x50, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x53, 0x48,
	0x4f, 0x57, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x68, 0x22, 0x56, 0x0a, 0x0b, 0x4f, 0x50, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x50, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x10, 0x02,
	0x22, 0x43, 0x0a, 0x02, 0x43, 0x54, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x54, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x54, 0x5f, 0x46, 0x52, 0x45,
	0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x54, 0x5f, 0x42, 0x55, 0x59, 0x4f, 0x55, 0x54,
	0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x54, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53,
	0x48, 0x49, 0x50, 0x10, 0x03, 0x22, 0x5c, 0x0a, 0x03, 0x41, 0x43, 0x53, 0x12, 0x0f, 0x0a, 0x0b,
	0x41, 0x43, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x41, 0x43, 0x53, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41,
	0x43, 0x53, 0x5f, 0x44, 0x45, 0x4e, 0x59, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x12, 0x0a,
	0x0e, 0x41, 0x43, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x10,
	0x03, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x53, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x41,
	0x59, 0x10, 0x04, 0x42, 0x85, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x45, 0x6e, 0x75, 0x6d, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x1f, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02,
	0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_common_v1_enum_space_proto_rawDescOnce sync.Once
	file_common_v1_enum_space_proto_rawDescData = file_common_v1_enum_space_proto_rawDesc
)

func file_common_v1_enum_space_proto_rawDescGZIP() []byte {
	file_common_v1_enum_space_proto_rawDescOnce.Do(func() {
		file_common_v1_enum_space_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_v1_enum_space_proto_rawDescData)
	})
	return file_common_v1_enum_space_proto_rawDescData
}

var file_common_v1_enum_space_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_common_v1_enum_space_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_common_v1_enum_space_proto_goTypes = []interface{}{
	(SPC_LAYOUT)(0),      // 0: common.v1.SPC.LAYOUT
	(SPC_ROLE)(0),        // 1: common.v1.SPC.ROLE
	(SPC_OPTION)(0),      // 2: common.v1.SPC.OPTION
	(SPC_OPTION_TYPE)(0), // 3: common.v1.SPC.OPTION_TYPE
	(SPC_CT)(0),          // 4: common.v1.SPC.CT
	(SPC_ACS)(0),         // 5: common.v1.SPC.ACS
	(*SPC)(nil),          // 6: common.v1.SPC
}
var file_common_v1_enum_space_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_v1_enum_space_proto_init() }
func file_common_v1_enum_space_proto_init() {
	if File_common_v1_enum_space_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_v1_enum_space_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_v1_enum_space_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_enum_space_proto_goTypes,
		DependencyIndexes: file_common_v1_enum_space_proto_depIdxs,
		EnumInfos:         file_common_v1_enum_space_proto_enumTypes,
		MessageInfos:      file_common_v1_enum_space_proto_msgTypes,
	}.Build()
	File_common_v1_enum_space_proto = out.File
	file_common_v1_enum_space_proto_rawDesc = nil
	file_common_v1_enum_space_proto_goTypes = nil
	file_common_v1_enum_space_proto_depIdxs = nil
}
