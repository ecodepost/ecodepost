// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: common/v1/enum_file.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 文件状态
type FILE_STATUS int32

const (
	// 不正常状态
	FILE_STATUS_INVALID FILE_STATUS = 0
	// 创建成功
	FILE_STATUS_SUCC FILE_STATUS = 1
	// 创建失败状态
	FILE_STATUS_FAIL FILE_STATUS = 2
	// 上传成功
	FILE_STATUS_UPLOADED_SUCC FILE_STATUS = 5
	// 上传失败
	FILE_STATUS_UPLOADED_FAIL FILE_STATUS = 6
)

// Enum value maps for FILE_STATUS.
var (
	FILE_STATUS_name = map[int32]string{
		0: "STATUS_INVALID",
		1: "STATUS_SUCC",
		2: "STATUS_FAIL",
		5: "STATUS_UPLOADED_SUCC",
		6: "STATUS_UPLOADED_FAIL",
	}
	FILE_STATUS_value = map[string]int32{
		"STATUS_INVALID":       0,
		"STATUS_SUCC":          1,
		"STATUS_FAIL":          2,
		"STATUS_UPLOADED_SUCC": 5,
		"STATUS_UPLOADED_FAIL": 6,
	}
)

func (x FILE_STATUS) Enum() *FILE_STATUS {
	p := new(FILE_STATUS)
	*p = x
	return p
}

func (x FILE_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FILE_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_file_proto_enumTypes[0].Descriptor()
}

func (FILE_STATUS) Type() protoreflect.EnumType {
	return &file_common_v1_enum_file_proto_enumTypes[0]
}

func (x FILE_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FILE_STATUS.Descriptor instead.
func (FILE_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_file_proto_rawDescGZIP(), []int{0, 0}
}

// 业务状态
type FILE_BIZSTS int32

const (
	// 不正常状态
	FILE_BIZSTS_INVALID FILE_BIZSTS = 0
	// 草稿
	FILE_BIZSTS_COURSE_DRAFT FILE_BIZSTS = 1
	// 发布
	FILE_BIZSTS_COURSE_PUBLISHED FILE_BIZSTS = 2
)

// Enum value maps for FILE_BIZSTS.
var (
	FILE_BIZSTS_name = map[int32]string{
		0: "BIZSTS_INVALID",
		1: "BIZSTS_COURSE_DRAFT",
		2: "BIZSTS_COURSE_PUBLISHED",
	}
	FILE_BIZSTS_value = map[string]int32{
		"BIZSTS_INVALID":          0,
		"BIZSTS_COURSE_DRAFT":     1,
		"BIZSTS_COURSE_PUBLISHED": 2,
	}
)

func (x FILE_BIZSTS) Enum() *FILE_BIZSTS {
	p := new(FILE_BIZSTS)
	*p = x
	return p
}

func (x FILE_BIZSTS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FILE_BIZSTS) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_file_proto_enumTypes[1].Descriptor()
}

func (FILE_BIZSTS) Type() protoreflect.EnumType {
	return &file_common_v1_enum_file_proto_enumTypes[1]
}

func (x FILE_BIZSTS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FILE_BIZSTS.Descriptor instead.
func (FILE_BIZSTS) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_file_proto_rawDescGZIP(), []int{0, 1}
}

// 文件类型
type FILE_TYPE int32

const (
	// 未知类型
	FILE_TYPE_INVALID FILE_TYPE = 0
	// 文档
	FILE_TYPE_DOCUMENT FILE_TYPE = 1
	// 问题或回答
	FILE_TYPE_QUESTION FILE_TYPE = 2
	// 其他任意文件, ppt, pdf, video, mp3 等任意文件
	FILE_TYPE_FILE FILE_TYPE = 5
	// 栏目
	FILE_TYPE_COLUMN FILE_TYPE = 9
)

// Enum value maps for FILE_TYPE.
var (
	FILE_TYPE_name = map[int32]string{
		0: "TYPE_INVALID",
		1: "TYPE_DOCUMENT",
		2: "TYPE_QUESTION",
		5: "TYPE_FILE",
		9: "TYPE_COLUMN",
	}
	FILE_TYPE_value = map[string]int32{
		"TYPE_INVALID":  0,
		"TYPE_DOCUMENT": 1,
		"TYPE_QUESTION": 2,
		"TYPE_FILE":     5,
		"TYPE_COLUMN":   9,
	}
)

func (x FILE_TYPE) Enum() *FILE_TYPE {
	p := new(FILE_TYPE)
	*p = x
	return p
}

func (x FILE_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FILE_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_file_proto_enumTypes[2].Descriptor()
}

func (FILE_TYPE) Type() protoreflect.EnumType {
	return &file_common_v1_enum_file_proto_enumTypes[2]
}

func (x FILE_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FILE_TYPE.Descriptor instead.
func (FILE_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_file_proto_rawDescGZIP(), []int{0, 2}
}

// 文件节点类型
type FILE_NODE int32

const (
	// 位置节点类型
	FILE_NODE_INVALID FILE_NODE = 0
	// 根节点类型
	FILE_NODE_ROOT FILE_NODE = 1
	// 中间节点类型
	FILE_NODE_INNER FILE_NODE = 2
	// 叶子节点类型
	FILE_NODE_LEAF FILE_NODE = 3
)

// Enum value maps for FILE_NODE.
var (
	FILE_NODE_name = map[int32]string{
		0: "NODE_INVALID",
		1: "NODE_ROOT",
		2: "NODE_INNER",
		3: "NODE_LEAF",
	}
	FILE_NODE_value = map[string]int32{
		"NODE_INVALID": 0,
		"NODE_ROOT":    1,
		"NODE_INNER":   2,
		"NODE_LEAF":    3,
	}
)

func (x FILE_NODE) Enum() *FILE_NODE {
	p := new(FILE_NODE)
	*p = x
	return p
}

func (x FILE_NODE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FILE_NODE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_file_proto_enumTypes[3].Descriptor()
}

func (FILE_NODE) Type() protoreflect.EnumType {
	return &file_common_v1_enum_file_proto_enumTypes[3]
}

func (x FILE_NODE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FILE_NODE.Descriptor instead.
func (FILE_NODE) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_file_proto_rawDescGZIP(), []int{0, 3}
}

// 文件格式
type FILE_FORMAT int32

const (
	// 未知类型
	FILE_FORMAT_INVALID FILE_FORMAT = 0
	// 文档-富文本
	FILE_FORMAT_DOCUMENT_RICH FILE_FORMAT = 1
	// 文档-JSON-QUIL
	//    FORMAT_DOCUMENT_JSON = 2;
	// 文档-JSON-SLATE
	FILE_FORMAT_DOCUMENT_SLATE FILE_FORMAT = 3
)

// Enum value maps for FILE_FORMAT.
var (
	FILE_FORMAT_name = map[int32]string{
		0: "FORMAT_INVALID",
		1: "FORMAT_DOCUMENT_RICH",
		3: "FORMAT_DOCUMENT_SLATE",
	}
	FILE_FORMAT_value = map[string]int32{
		"FORMAT_INVALID":        0,
		"FORMAT_DOCUMENT_RICH":  1,
		"FORMAT_DOCUMENT_SLATE": 3,
	}
)

func (x FILE_FORMAT) Enum() *FILE_FORMAT {
	p := new(FILE_FORMAT)
	*p = x
	return p
}

func (x FILE_FORMAT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FILE_FORMAT) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_file_proto_enumTypes[4].Descriptor()
}

func (FILE_FORMAT) Type() protoreflect.EnumType {
	return &file_common_v1_enum_file_proto_enumTypes[4]
}

func (x FILE_FORMAT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FILE_FORMAT.Descriptor instead.
func (FILE_FORMAT) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_file_proto_rawDescGZIP(), []int{0, 4}
}

// IT:IconType 文件图标类型
type FILE_IT int32

const (
	// Invalid
	FILE_IT_INVALID FILE_IT = 0
	// Default
	FILE_IT_DEFAULT FILE_IT = 1
	// Emoji
	FILE_IT_EMOJI FILE_IT = 2
	// Img
	FILE_IT_IMG FILE_IT = 3
)

// Enum value maps for FILE_IT.
var (
	FILE_IT_name = map[int32]string{
		0: "IT_INVALID",
		1: "IT_DEFAULT",
		2: "IT_EMOJI",
		3: "IT_IMG",
	}
	FILE_IT_value = map[string]int32{
		"IT_INVALID": 0,
		"IT_DEFAULT": 1,
		"IT_EMOJI":   2,
		"IT_IMG":     3,
	}
)

func (x FILE_IT) Enum() *FILE_IT {
	p := new(FILE_IT)
	*p = x
	return p
}

func (x FILE_IT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FILE_IT) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_file_proto_enumTypes[5].Descriptor()
}

func (FILE_IT) Type() protoreflect.EnumType {
	return &file_common_v1_enum_file_proto_enumTypes[5]
}

func (x FILE_IT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FILE_IT.Descriptor instead.
func (FILE_IT) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_file_proto_rawDescGZIP(), []int{0, 5}
}

// ACT:Action文章行为
type FILE_ACT int32

const (
	// 无效枚举值
	FILE_ACT_INVALID FILE_ACT = 0
	// 评论
	FILE_ACT_COMMENT FILE_ACT = 1
	// 置顶
	FILE_ACT_SITE_TOP FILE_ACT = 2
	// 加精
	FILE_ACT_EXCELLENT FILE_ACT = 3
	// 提及
	FILE_ACT_MENTION FILE_ACT = 4
)

// Enum value maps for FILE_ACT.
var (
	FILE_ACT_name = map[int32]string{
		0: "ACT_INVALID",
		1: "ACT_COMMENT",
		2: "ACT_SITE_TOP",
		3: "ACT_EXCELLENT",
		4: "ACT_MENTION",
	}
	FILE_ACT_value = map[string]int32{
		"ACT_INVALID":   0,
		"ACT_COMMENT":   1,
		"ACT_SITE_TOP":  2,
		"ACT_EXCELLENT": 3,
		"ACT_MENTION":   4,
	}
)

func (x FILE_ACT) Enum() *FILE_ACT {
	p := new(FILE_ACT)
	*p = x
	return p
}

func (x FILE_ACT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FILE_ACT) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_file_proto_enumTypes[6].Descriptor()
}

func (FILE_ACT) Type() protoreflect.EnumType {
	return &file_common_v1_enum_file_proto_enumTypes[6]
}

func (x FILE_ACT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FILE_ACT.Descriptor instead.
func (FILE_ACT) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_file_proto_rawDescGZIP(), []int{0, 6}
}

// CMET_DEL:CommentDelete 评论删除类型
type FILE_CMET_DEL int32

const (
	// 无效枚举值
	FILE_CMET_DEL_INVALID FILE_CMET_DEL = 0
	// 删除用户评论
	FILE_CMET_DEL_USER FILE_CMET_DEL = 1
	// 删除topic的excellent
	FILE_CMET_DEL_EXCELLENT FILE_CMET_DEL = 2
)

// Enum value maps for FILE_CMET_DEL.
var (
	FILE_CMET_DEL_name = map[int32]string{
		0: "CMET_DEL_INVALID",
		1: "CMET_DEL_USER",
		2: "CMET_DEL_EXCELLENT",
	}
	FILE_CMET_DEL_value = map[string]int32{
		"CMET_DEL_INVALID":   0,
		"CMET_DEL_USER":      1,
		"CMET_DEL_EXCELLENT": 2,
	}
)

func (x FILE_CMET_DEL) Enum() *FILE_CMET_DEL {
	p := new(FILE_CMET_DEL)
	*p = x
	return p
}

func (x FILE_CMET_DEL) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FILE_CMET_DEL) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_file_proto_enumTypes[7].Descriptor()
}

func (FILE_CMET_DEL) Type() protoreflect.EnumType {
	return &file_common_v1_enum_file_proto_enumTypes[7]
}

func (x FILE_CMET_DEL) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FILE_CMET_DEL.Descriptor instead.
func (FILE_CMET_DEL) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_file_proto_rawDescGZIP(), []int{0, 7}
}

// FILE:File 文件相关枚举值
type FILE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FILE) Reset() {
	*x = FILE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_enum_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FILE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FILE) ProtoMessage() {}

func (x *FILE) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_enum_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FILE.ProtoReflect.Descriptor instead.
func (*FILE) Descriptor() ([]byte, []int) {
	return file_common_v1_enum_file_proto_rawDescGZIP(), []int{0}
}

var File_common_v1_enum_file_proto protoreflect.FileDescriptor

var file_common_v1_enum_file_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0xb5, 0x05, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x22,
	0x72, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x12,
	0x18, 0x0a, 0x14, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44,
	0x45, 0x44, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x45, 0x44, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x10, 0x06, 0x22, 0x52, 0x0a, 0x06, 0x42, 0x49, 0x5a, 0x53, 0x54, 0x53, 0x12, 0x12, 0x0a,
	0x0e, 0x42, 0x49, 0x5a, 0x53, 0x54, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x49, 0x5a, 0x53, 0x54, 0x53, 0x5f, 0x43, 0x4f, 0x55, 0x52,
	0x53, 0x45, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x42, 0x49,
	0x5a, 0x53, 0x54, 0x53, 0x5f, 0x43, 0x4f, 0x55, 0x52, 0x53, 0x45, 0x5f, 0x50, 0x55, 0x42, 0x4c,
	0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x22, 0x5e, 0x0a, 0x04, 0x54, 0x59, 0x50, 0x45, 0x12,
	0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x46, 0x49, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x4f, 0x4c, 0x55, 0x4d, 0x4e, 0x10, 0x09, 0x22, 0x46, 0x0a, 0x04, 0x4e, 0x4f, 0x44, 0x45, 0x12,
	0x10, 0x0a, 0x0c, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x45, 0x41, 0x46, 0x10, 0x03, 0x22,
	0x51, 0x0a, 0x06, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x4f, 0x52,
	0x4d, 0x41, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a,
	0x14, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x52, 0x49, 0x43, 0x48, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x4f, 0x52, 0x4d, 0x41,
	0x54, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x4c, 0x41, 0x54, 0x45,
	0x10, 0x03, 0x22, 0x3e, 0x0a, 0x02, 0x49, 0x54, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x54, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x54, 0x5f, 0x44,
	0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x54, 0x5f, 0x45,
	0x4d, 0x4f, 0x4a, 0x49, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x54, 0x5f, 0x49, 0x4d, 0x47,
	0x10, 0x03, 0x22, 0x5d, 0x0a, 0x03, 0x41, 0x43, 0x54, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x43, 0x54,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x43,
	0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41,
	0x43, 0x54, 0x5f, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x4f, 0x50, 0x10, 0x02, 0x12, 0x11, 0x0a,
	0x0d, 0x41, 0x43, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x4e, 0x54, 0x10, 0x03,
	0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x43, 0x54, 0x5f, 0x4d, 0x45, 0x4e, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x04, 0x22, 0x4b, 0x0a, 0x08, 0x43, 0x4d, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x12, 0x14, 0x0a,
	0x10, 0x43, 0x4d, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4d, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x5f,
	0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4d, 0x45, 0x54, 0x5f, 0x44,
	0x45, 0x4c, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x42, 0x84,
	0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x42, 0x0d, 0x45, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x1f, 0x65, 0x63, 0x6f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x2f, 0x70, 0x62, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_v1_enum_file_proto_rawDescOnce sync.Once
	file_common_v1_enum_file_proto_rawDescData = file_common_v1_enum_file_proto_rawDesc
)

func file_common_v1_enum_file_proto_rawDescGZIP() []byte {
	file_common_v1_enum_file_proto_rawDescOnce.Do(func() {
		file_common_v1_enum_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_v1_enum_file_proto_rawDescData)
	})
	return file_common_v1_enum_file_proto_rawDescData
}

var file_common_v1_enum_file_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_common_v1_enum_file_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_common_v1_enum_file_proto_goTypes = []interface{}{
	(FILE_STATUS)(0),   // 0: common.v1.FILE.STATUS
	(FILE_BIZSTS)(0),   // 1: common.v1.FILE.BIZSTS
	(FILE_TYPE)(0),     // 2: common.v1.FILE.TYPE
	(FILE_NODE)(0),     // 3: common.v1.FILE.NODE
	(FILE_FORMAT)(0),   // 4: common.v1.FILE.FORMAT
	(FILE_IT)(0),       // 5: common.v1.FILE.IT
	(FILE_ACT)(0),      // 6: common.v1.FILE.ACT
	(FILE_CMET_DEL)(0), // 7: common.v1.FILE.CMET_DEL
	(*FILE)(nil),       // 8: common.v1.FILE
}
var file_common_v1_enum_file_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_v1_enum_file_proto_init() }
func file_common_v1_enum_file_proto_init() {
	if File_common_v1_enum_file_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_v1_enum_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FILE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_v1_enum_file_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_enum_file_proto_goTypes,
		DependencyIndexes: file_common_v1_enum_file_proto_depIdxs,
		EnumInfos:         file_common_v1_enum_file_proto_enumTypes,
		MessageInfos:      file_common_v1_enum_file_proto_msgTypes,
	}.Build()
	File_common_v1_enum_file_proto = out.File
	file_common_v1_enum_file_proto_rawDesc = nil
	file_common_v1_enum_file_proto_goTypes = nil
	file_common_v1_enum_file_proto_depIdxs = nil
}
